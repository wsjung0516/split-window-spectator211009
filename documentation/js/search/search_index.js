var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AngularMaterials.html",[0,1.644,1,1.985]],["body/modules/AngularMaterials.html",[1,3.985,2,2.43,3,3.15,4,4.317,5,4.317,6,4.317,7,2.714,8,0.02,9,3.612,10,2.764,11,2.764,12,0.216,13,0.216,14,0.155,15,3.841,16,3.841,17,3.203,18,4.245,19,0.321,20,3.612,21,0.98,22,4.677,23,4.317,24,4.677,25,4.317,26,5.257,27,5.039,28,4.317,29,4.245,30,3.203,31,5.257,32,5.039,33,0.781,34,2.43,35,0.691,36,0.781,37,5.257,38,5.039,39,5.257,40,5.039,41,4.677,42,2.966,43,5.257,44,5.039,45,5.257,46,5.039,47,1.832,48,3.894,49,5.039,50,2.966,51,0.216,52,0.261,53,0.016,54,0.016]],["title/components/AppComponent.html",[55,0.87,56,1.551]],["body/components/AppComponent.html",[7,1.306,8,0.02,12,0.154,13,0.154,14,0.11,19,0.241,21,0.699,28,3.078,33,0.557,51,0.154,52,0.186,53,0.013,54,0.013,55,1.352,56,2.594,57,2.53,58,1.456,59,1.54,60,1.971,61,1.971,62,3.078,63,1.732,64,2.53,65,2.53,66,2.596,67,2.842,68,2.901,69,4.928,70,5.625,71,4.928,72,3.757,73,0.223,74,0.516,75,5.625,76,3.311,77,1.7,78,5.625,79,4.928,80,4.928,81,0.404,82,3.078,83,2.808,84,0.736,85,4.928,86,0.729,87,0.754,88,0.449,89,0.729,90,3.593,91,0.613,92,3.593,93,1.352,94,1.841,95,3.593,96,3.593,97,5.625,98,0.863,99,4.928,100,0.677,101,3.593,102,1.176,103,0.764,104,0.764,105,4.928,106,1.184,107,1.381,108,4.928,109,3.593,110,1.845,111,1.378,112,0.863,113,1.632,114,1.971,115,1.632,116,3.593,117,3.748,118,1.053,119,4.928,120,6.008,121,4.928,122,4.928,123,1.792,124,2.554,125,3.593,126,3.593,127,3.593,128,2.283,129,4.928,130,4.928,131,4.928,132,4.928,133,2.928,134,3.159,135,0.676,136,3.078,137,3.085,138,4.342,139,3.132,140,3.757,141,3.593,142,3.593,143,4.928,144,3.575,145,3.575,146,5.625,147,3.593,148,4.222,149,2.703,150,1.845,151,3.593,152,4.928,153,2.283,154,4.928,155,4.222,156,3.593,157,3.593,158,3.593,159,3.593,160,3.593,161,3.593,162,1.971,163,2.703,164,1.378,165,1.971,166,1.971,167,1.54,168,1.971,169,1.456,170,1.971,171,1.456,172,1.54,173,1.971,174,1.54,175,0.719,176,2.703,177,1.456,178,1.971,179,1.54,180,1.845,181,1.456,182,1.378,183,1.632,184,1.456,185,1.971,186,1.456,187,1.845,188,1.971]],["title/modules/AppModule.html",[0,1.644,189,2.504]],["body/modules/AppModule.html",[0,2.085,1,3.848,2,2.214,3,2.974,7,1.669,8,0.02,9,3.409,10,2.518,11,2.518,12,0.197,13,0.197,14,0.141,17,3.681,19,0.322,20,3.409,21,0.893,22,3.5,23,3.933,24,3.5,25,3.933,34,2.214,35,0.63,36,0.712,41,3.5,42,2.703,48,2.703,50,3.409,51,0.197,52,0.238,53,0.015,54,0.015,56,3.174,67,1.86,111,1.761,189,5.181,190,3.933,191,3.933,192,3.933,193,3.933,194,4.458,195,4.458,196,4.458,197,4.591,198,5.792,199,5.792,200,4.962,201,3.5,202,4.007,203,4.591,204,4.591,205,5.792,206,4.591,207,4.591,208,4.591,209,1.427,210,1.583,211,4.591,212,1.427,213,1.503,214,1.503,215,4.591,216,3.933,217,3.933,218,4.591,219,3.5,220,4.591,221,4.591,222,4.591,223,4.591,224,2.918]],["title/modules/AppRoutingModule.html",[0,1.644,202,2.504]],["body/modules/AppRoutingModule.html",[2,2.67,7,2.36,8,0.02,12,0.237,13,0.237,14,0.17,18,3.831,19,0.295,20,3.821,21,1.077,34,2.67,35,0.76,36,0.858,47,2.013,50,3.26,51,0.237,52,0.287,53,0.017,54,0.017,55,1.331,202,4.491,225,5.537,226,5.537,227,6.491,228,6.887,229,4.744,230,5.537,231,5.537]],["title/injectables/CacheSeriesService.html",[232,1.248,233,1.858]],["body/injectables/CacheSeriesService.html",[8,0.021,12,0.158,13,0.158,14,0.113,19,0.289,21,0.716,47,1.34,51,0.158,52,0.191,53,0.013,54,0.013,68,2.169,73,0.228,74,0.525,77,1.729,81,0.414,84,0.806,86,0.813,87,0.759,88,0.488,89,0.813,91,0.657,94,2.211,100,0.444,102,1.206,103,0.777,104,0.777,114,2.021,123,2.499,135,0.506,175,0.538,209,1.145,210,1.271,212,1.145,213,1.206,214,1.206,232,1.729,233,2.574,234,2.021,235,6.182,236,3.157,237,2.532,238,5.699,239,4.882,240,2.926,241,5.014,242,5.014,243,5.014,244,5.241,245,5.014,246,4.295,247,4.882,248,3.822,249,5.699,250,2.809,251,3.888,252,5.014,253,3.186,254,5.014,255,1.411,256,3.685,257,2.418,258,5.014,259,3.685,260,2.549,261,5.014,262,3.685,263,0.992,264,3.685,265,5.014,266,3.685,267,4.295,268,3.685,269,3.157,270,3.685,271,2.277,272,1.772,273,3.685,274,1.777,275,3.685,276,1.579,277,2.75,278,3.685,279,3.685,280,2.169,281,1.145,282,3.186,283,1.414,284,0.756,285,0.798,286,1.34,287,2.342,288,1.414,289,3.157,290,2.549,291,3.685,292,2.342,293,3.685,294,3.685,295,3.685,296,3.685,297,3.685,298,3.685,299,3.685,300,3.157,301,3.685,302,3.685,303,3.685,304,3.685,305,1.559,306,3.157,307,3.157,308,3.157,309,3.157,310,4.295,311,4.295,312,3.157,313,3.157,314,3.157,315,3.157,316,3.157,317,3.157]],["title/modules/CarouselModule.html",[0,1.644,194,2.3]],["body/modules/CarouselModule.html",[2,2.613,3,3.291,8,0.02,9,3.773,10,2.973,11,2.973,12,0.232,13,0.232,14,0.167,17,3.444,19,0.302,20,3.773,21,1.054,29,4.434,30,3.444,50,3.19,51,0.232,52,0.281,53,0.017,54,0.017,194,4.639,224,4.073,280,3.19,318,4.643,319,4.643,320,2.654,321,5.419,322,3.749,323,6.41]],["title/injectables/CarouselService.html",[232,1.248,320,1.316]],["body/injectables/CarouselService.html",[8,0.021,12,0.168,13,0.168,14,0.121,19,0.298,21,0.762,35,0.538,36,0.81,47,1.901,51,0.168,52,0.203,53,0.014,54,0.014,55,0.942,68,2.308,73,0.243,74,0.547,76,3.078,77,1.803,81,0.588,83,2.941,84,0.756,86,0.787,87,0.735,88,0.461,89,0.787,91,0.656,94,2.054,100,0.708,111,1.504,113,1.781,115,2.374,118,1.228,123,2.376,133,2.521,135,0.897,167,1.681,172,1.681,209,1.219,210,1.352,212,1.219,213,1.284,214,1.284,232,1.803,234,2.151,237,2.256,260,4.521,263,0.912,271,2.374,272,1.219,276,1.681,286,1.426,287,2.492,288,2.407,305,1.625,320,1.901,324,3.359,325,3.985,326,3.985,327,4.069,328,5.228,329,3.921,330,3.241,331,2.781,332,5.228,333,5.228,334,3.921,335,5.228,336,3.921,337,5.228,338,3.921,339,5.228,340,3.921,341,3.078,342,3.359,343,1.017,344,2.308,345,0.967,346,2.713,347,3.921,348,7.189,349,0.859,350,2.868,351,3.921,352,3.921,353,3.921,354,3.921,355,3.359,356,3.985,357,5.228,358,5.882,359,5.882,360,1.589,361,1.681,362,3.921]],["title/injectables/CustomVirtualScrollStrategy.html",[232,1.248,363,2.504]],["body/injectables/CustomVirtualScrollStrategy.html",[8,0.021,12,0.15,13,0.256,14,0.108,19,0.304,21,0.682,33,0.929,34,1.692,35,0.481,36,0.544,42,2.065,51,0.208,52,0.288,53,0.013,54,0.013,55,1.165,58,1.422,59,1.504,64,1.801,65,1.801,66,1.276,67,1.422,73,0.217,81,0.674,83,2.381,84,0.394,91,0.315,93,0.843,100,0.423,102,1.149,104,0.861,110,1.801,111,1.346,113,1.593,115,2.202,124,1.593,133,1.504,134,1.692,135,0.665,137,1.925,138,3.081,139,2.23,140,2.675,144,2.23,149,1.925,150,2.489,153,2.23,175,0.512,181,1.422,182,2.131,209,1.091,210,1.21,212,1.091,213,1.149,214,1.149,224,2.23,232,1.672,234,1.925,237,2.299,257,2.338,272,1.863,281,1.091,283,1.346,285,0.759,286,1.276,288,1.86,292,2.23,305,1.091,320,2.02,322,2.427,325,2.675,326,2.675,327,2.427,330,2.679,331,1.422,343,0.682,344,2.065,345,0.913,346,2.427,349,0.913,350,1.925,360,1.965,361,2.568,363,3.843,364,3.354,365,3.354,366,2.23,367,4.154,368,4.759,369,3.509,370,2.659,371,2.078,372,2.338,373,2.078,374,1.692,375,1.801,376,2.427,377,1.692,378,3.006,379,3.006,380,1.86,381,1.593,382,1.801,383,0.577,384,3.354,385,4.154,386,3.006,387,3.006,388,3.006,389,3.006,390,2.427,391,2.427,392,3.006,393,3.006,394,3.006,395,3.006,396,3.006,397,3.006,398,3.006,399,3.006,400,4.154,401,3.006,402,3.006,403,3.006,404,4.133,405,4.612,406,2.427,407,2.23,408,2.427,409,2.427,410,3.843,411,2.675,412,2.427,413,2.427,414,3.006,415,3.006,416,1.21,417,3.006,418,3.006,419,3.006,420,2.427,421,3.006,422,1.925,423,2.427,424,0.72,425,3.006,426,2.078,427,1.801,428,2.065,429,2.427,430,3.006,431,1.925,432,1.504,433,4.154,434,3.006,435,4.568,436,2.721,437,2.489,438,3.081,439,3.006,440,3.006,441,3.006,442,3.006,443,3.006,444,3.081,445,2.427,446,2.427,447,2.427,448,2.427,449,2.427,450,3.006,451,2.427,452,2.427,453,3.354,454,2.427,455,2.23,456,2.427,457,3.006,458,3.354,459,3.006,460,2.675,461,3.006,462,0.843,463,0.682,464,1.106,465,3.006,466,2.675,467,2.23,468,3.006,469,3.006,470,3.006,471,4.154,472,3.006,473,2.427,474,2.065,475,1.801,476,1.692,477,1.801,478,1.801]],["title/components/GridComponent.html",[55,0.87,169,1.467]],["body/components/GridComponent.html",[7,0.873,8,0.021,12,0.103,13,0.103,14,0.074,19,0.278,21,0.467,33,0.372,47,0.873,51,0.157,52,0.124,53,0.01,54,0.01,55,1.073,56,1.029,57,1.887,58,1.489,59,1.029,60,1.317,61,1.317,63,1.157,66,2.398,67,2.591,72,1.83,73,0.149,74,0.385,77,1.268,81,0.27,82,2.056,83,2.44,84,0.778,86,0.538,87,0.666,88,0.467,89,0.538,91,0.583,94,1.462,100,0.603,102,1.462,103,0.971,104,0.971,111,0.921,113,1.09,114,1.317,115,2.028,117,2.745,118,0.64,123,0.873,124,1.669,133,3.197,134,3.428,150,1.887,162,1.317,163,2.016,164,0.921,165,1.317,166,1.317,167,1.029,168,1.317,169,2.028,170,1.317,171,2.028,172,2.145,173,1.317,174,1.029,175,0.536,176,2.016,177,0.973,178,1.317,179,1.029,180,1.232,181,0.973,182,0.921,183,1.09,184,0.973,185,1.317,186,0.973,187,1.232,188,1.317,209,0.746,210,0.828,212,0.746,213,0.786,214,0.786,233,3.041,237,1.714,272,1.677,276,2.145,281,0.746,283,0.921,286,0.873,288,2.07,305,1.142,320,2.154,331,2.4,341,2.164,355,3.149,360,0.973,361,1.914,373,1.914,374,1.157,375,1.232,377,1.157,380,1.714,381,1.09,382,1.232,383,0.394,416,1.268,422,2.45,424,0.754,426,1.914,432,2.145,436,2.45,455,1.525,475,1.232,479,1.83,480,3.826,481,6.16,482,6.16,483,3.405,484,3.405,485,3.463,486,3.826,487,3.826,488,3.826,489,3.826,490,3.826,491,3.675,492,3.675,493,2.4,494,3.149,495,2.4,496,3.09,497,3.149,498,2.4,499,3.883,500,2.4,501,3.149,502,2.4,503,5.477,504,2.4,505,3.149,506,2.4,507,3.149,508,2.4,509,2.802,510,2.4,511,4.498,512,3.826,513,2.4,514,6.064,515,6.064,516,6.064,517,6.064,518,3.688,519,2.4,520,5.31,521,4.098,522,2.4,523,5.651,524,3.733,525,2.4,526,3.09,527,2.4,528,2.4,529,1.525,530,1.83,531,1.525,532,0.52,533,1.83,534,1.525,535,1.83,536,1.029,537,2.056,538,1.83,539,3.149,540,2.056,541,2.056,542,2.056,543,4.288,544,2.056,545,2.336,546,2.056,547,1.525,548,2.056,549,3.149,550,3.149,551,2.056,552,3.149,553,2.056,554,2.056,555,1.83,556,1.83,557,2.056,558,2.056,559,2.056,560,2.056,561,1.83,562,1.83,563,1.66,564,2.802]],["title/modules/GridModule.html",[0,1.644,195,2.3]],["body/modules/GridModule.html",[1,3.885,2,2.3,3,3.046,7,1.734,8,0.02,9,3.492,10,2.616,11,2.616,12,0.204,13,0.204,14,0.147,17,3.77,18,4.104,19,0.311,20,3.492,21,0.927,29,4.104,30,3.031,34,2.3,35,0.654,36,0.739,48,2.808,50,3.492,51,0.204,52,0.247,53,0.016,54,0.016,169,3.016,171,3.016,172,2.045,184,3.016,186,2.87,195,4.802,219,3.636,529,3.031,530,3.636,565,4.086,566,4.77,567,4.086,568,4.086,569,4.77,570,4.086,571,4.086,572,4.77,573,4.77,574,4.77]],["title/components/GridTemplateComponent.html",[55,0.87,171,1.467]],["body/components/GridTemplateComponent.html",[7,1.06,8,0.02,12,0.125,13,0.125,14,0.09,19,0.287,21,0.567,33,0.452,47,1.824,51,0.125,52,0.151,53,0.011,54,0.011,55,1.205,56,1.249,57,2.182,58,2.234,59,2.15,60,1.599,61,1.599,63,1.405,66,2.499,67,2.718,73,0.391,74,0.445,77,1.466,81,0.478,83,2.707,84,0.78,86,0.664,87,0.742,88,0.46,89,0.664,91,0.622,94,1.918,102,1.918,103,0.777,104,0.777,106,0.7,111,1.118,113,1.324,115,2.503,117,3.024,118,1.127,120,2.497,123,1.06,124,2.503,128,2.701,150,3.141,155,5.242,162,1.599,163,2.331,164,1.118,165,1.599,166,1.599,167,1.249,168,1.599,169,1.181,170,1.599,171,2.234,172,2.15,173,1.599,174,1.249,175,0.62,176,2.331,177,1.181,178,1.599,179,1.249,180,1.496,181,1.181,182,1.118,183,1.324,184,1.722,185,1.599,186,1.181,187,1.496,188,1.599,209,0.906,210,1.005,212,0.906,213,0.954,214,0.954,237,1.924,272,1.559,276,2.15,281,0.906,283,1.118,286,1.06,288,1.63,305,1.321,320,2.225,331,2.56,341,2.502,361,1.249,372,2.419,373,2.15,375,1.496,377,1.405,380,2.248,381,1.324,383,0.479,416,1.466,422,2.751,426,2.622,427,2.182,432,2.363,436,2.503,437,1.496,438,1.852,475,2.182,476,2.658,477,1.496,478,1.496,496,4.233,518,1.716,520,5.24,529,4.447,532,0.631,535,2.222,562,3.24,563,2.016,570,2.497,571,2.497,575,5.995,576,2.497,577,6.118,578,6.874,579,5.242,580,4.664,581,6.118,582,6.118,583,5.242,584,6.118,585,6.874,586,6.874,587,4.297,588,5.016,589,5.016,590,5.016,591,4.25,592,4.25,593,2.016,594,4.25,595,2.915,596,2.915,597,2.915,598,2.915,599,4.25,600,2.915,601,4.25,602,2.915,603,2.915,604,4.25,605,2.915,606,2.915,607,2.915,608,5.016,609,4.25,610,2.915,611,2.915,612,2.915,613,2.497,614,4.25,615,2.915,616,2.915,617,2.915,618,2.915,619,2.915,620,0.777,621,2.915,622,2.915,623,2.915,624,3.641,625,2.497]],["title/directives/GridTemplateDirective.html",[164,1.389,184,1.467]],["body/directives/GridTemplateDirective.html",[8,0.02,12,0.227,13,0.227,14,0.163,19,0.227,21,1.033,51,0.227,52,0.276,53,0.017,54,0.017,58,2.84,63,2.563,66,2.304,73,0.329,74,0.663,81,0.597,84,0.761,86,0.64,87,0.712,88,0.464,89,0.64,91,0.568,164,2.431,183,2.414,184,2.567,371,2.278,496,4.954,626,6.005,627,4.553,628,7.009,629,1.523,630,3.73,631,5.315,632,6.336,633,5.315,634,5.315,635,1.491]],["title/interfaces/ImageModel.html",[345,0.595,536,1.551]],["body/interfaces/ImageModel.html",[0,0.817,7,0.654,8,0.021,10,0.986,12,0.077,13,0.077,14,0.055,19,0.267,21,0.35,33,0.661,35,0.247,47,2.381,51,0.158,52,0.093,53,0.008,54,0.008,55,0.703,58,0.729,59,0.771,64,0.923,65,0.923,66,0.654,67,0.729,73,0.111,74,0.306,76,2.508,81,0.202,83,1.585,88,0.364,91,0.597,98,0.703,100,0.707,102,0.589,106,1.472,107,1.443,110,0.923,111,0.69,113,0.817,115,2.508,118,0.644,123,2.076,124,1.329,128,1.143,133,2.367,134,2.055,135,0.855,137,2.572,145,2.708,167,0.771,175,0.262,182,1.419,209,0.559,210,0.62,212,0.559,213,0.589,214,0.589,233,1.899,237,2.556,240,1.502,257,2.055,263,0.821,271,2.13,272,1.904,277,0.986,281,0.559,283,0.69,286,0.654,288,2.033,305,1.716,320,1.345,322,1.244,327,1.244,330,1.783,331,1.499,341,1.058,342,1.54,344,1.058,345,0.7,346,1.244,349,1.141,350,2.337,360,1.499,361,2.575,370,1.605,371,1.826,372,1.411,373,1.254,374,0.867,377,0.867,380,1.419,381,0.817,383,0.296,390,2.559,391,1.244,407,2.35,416,0.62,420,1.244,422,0.986,426,1.254,427,0.923,431,0.986,432,0.771,435,3.832,436,2.593,437,0.923,444,1.143,455,1.143,460,1.371,463,0.35,464,0.41,466,1.371,467,1.143,475,0.923,476,0.867,477,0.923,478,0.923,485,2.024,509,1.371,518,2.177,521,2.559,524,2.559,526,2.024,531,1.859,533,1.371,534,1.143,536,0.771,545,2.708,547,1.859,555,1.371,556,1.371,563,1.244,564,4.75,613,3.651,624,2.506,625,1.54,636,1.143,637,1.54,638,1.54,639,2.23,640,2.024,641,1.54,642,3.168,643,1.798,644,1.798,645,0.432,646,0.889,647,0.389,648,0.432,649,1.54,650,1.371,651,2.925,652,1.899,653,1.798,654,0.986,655,1.244,656,2.23,657,1.133,658,1.371,659,1.54,660,1.54,661,1.54,662,1.54,663,1.54,664,1.54,665,1.54,666,2.559,667,0.74,668,1.798,669,1.798,670,1.371,671,3.698,672,4.731,673,1.371,674,1.798,675,1.798,676,1.371,677,1.371,678,1.798,679,1.798,680,1.798,681,1.798,682,1.371,683,1.798,684,1.798,685,1.798,686,3.168,687,1.798,688,1.798,689,1.798,690,1.798,691,1.798,692,2.819,693,1.798,694,4.69,695,1.798,696,1.798,697,1.798,698,1.54,699,2.925,700,1.798,701,1.798,702,1.798,703,4.261,704,1.798,705,1.798,706,2.925,707,1.798,708,1.798,709,1.798,710,1.798,711,1.798,712,1.798,713,1.798,714,1.798,715,2.925,716,2.925,717,1.371,718,1.798,719,1.798,720,1.371,721,1.798,722,1.798,723,2.506,724,1.798,725,1.371,726,1.371,727,1.798,728,1.798,729,1.798,730,1.798,731,5.522,732,2.925,733,3.698,734,2.925,735,2.925,736,2.925,737,1.798,738,3.698,739,1.798,740,1.798,741,2.925,742,1.798,743,1.798,744,1.798,745,1.798,746,2.925,747,1.371,748,1.798,749,1.798,750,1.798,751,1.798,752,1.798,753,1.798,754,2.23,755,1.798,756,1.798,757,2.23,758,1.798,759,1.798,760,1.798,761,3.698,762,3.698,763,2.925,764,4.69,765,2.506,766,1.798,767,5.298,768,4.018,769,1.54,770,4.261,771,1.798,772,2.506,773,1.798,774,1.54,775,1.798,776,2.925,777,4.018,778,1.798,779,1.798,780,2.506,781,1.798,782,3.698,783,2.506,784,2.925,785,1.798,786,1.798,787,1.798,788,3.698,789,1.798,790,4.69,791,2.23,792,1.798,793,1.798,794,3.477,795,1.798,796,2.925,797,1.798,798,0.479,799,1.54,800,1.798,801,1.798,802,1.798,803,1.798,804,1.798,805,1.798,806,1.54,807,1.798,808,1.371,809,1.798,810,1.471,811,1.798,812,1.798,813,1.798,814,2.925,815,1.798,816,1.798,817,3.698,818,3.698,819,2.925,820,3.698,821,2.819,822,1.798,823,1.798,824,2.506,825,1.798,826,2.925,827,2.925,828,2.506,829,2.925,830,2.23,831,1.798,832,1.798,833,1.798,834,1.54,835,1.798,836,1.54,837,1.798,838,1.798,839,1.798,840,3.698,841,2.23,842,1.798,843,1.798,844,2.23,845,1.798,846,1.798,847,1.798,848,1.798,849,1.798,850,2.925,851,1.798,852,2.925,853,1.798,854,1.798,855,1.371,856,1.798,857,1.798,858,1.371,859,1.798,860,1.798,861,1.798,862,1.143,863,1.798,864,1.798,865,1.798,866,1.798,867,1.798,868,1.798,869,1.798,870,1.798,871,2.925,872,1.798,873,1.798,874,1.798,875,1.798,876,1.54,877,1.798,878,1.798,879,1.54,880,1.798,881,1.798,882,1.798,883,1.798,884,1.798,885,1.371,886,1.798,887,1.371,888,1.143,889,1.798,890,1.798,891,1.798,892,1.798,893,1.798,894,1.798,895,1.798,896,1.798,897,3.698,898,1.798,899,1.798,900,1.798,901,2.506,902,2.506,903,2.506,904,4.539,905,2.925,906,2.506,907,1.798,908,1.54,909,1.798,910,2.925,911,2.925,912,1.798,913,2.925,914,1.798,915,3.698,916,1.798,917,1.798,918,1.798,919,1.54,920,4.69,921,2.925,922,3.698,923,3.698,924,1.798,925,3.168,926,3.698,927,1.371,928,1.798,929,1.798,930,1.371,931,1.798,932,1.371,933,1.798,934,1.798,935,1.54,936,1.798,937,1.798,938,1.54,939,1.798,940,1.798,941,1.798,942,1.371]],["title/injectables/ImageService.html",[232,1.248,330,1.745]],["body/injectables/ImageService.html",[8,0.021,12,0.127,13,0.127,14,0.132,19,0.279,21,0.577,35,0.407,36,0.46,47,2.481,51,0.127,52,0.154,53,0.011,54,0.011,68,1.748,73,0.267,74,0.451,77,1.486,81,0.334,84,0.815,86,0.799,87,0.746,88,0.491,89,0.799,91,0.644,94,2.205,100,0.742,102,1.82,103,0.915,104,0.915,114,1.629,123,2.31,133,2.531,135,0.893,167,1.273,182,1.139,209,0.923,210,1.024,212,0.923,213,0.972,214,0.972,232,1.486,234,1.629,237,2.545,239,4.343,240,2.603,244,4.343,246,3.691,247,4.343,248,3.284,250,2.264,251,3.534,253,2.738,257,3.138,260,3.847,263,0.862,267,3.691,269,2.544,271,1.956,272,1.576,274,2.445,276,1.846,277,2.363,280,1.748,281,0.923,282,1.887,283,1.139,286,1.08,287,1.887,288,2.437,289,2.544,290,2.054,292,1.887,300,2.544,305,1.729,306,2.544,307,2.544,308,2.544,309,2.544,310,3.691,311,3.691,312,2.544,313,2.544,314,2.544,315,2.544,316,2.544,317,2.544,330,2.077,341,2.536,345,1.07,349,1.012,372,2.077,380,1.945,416,1.024,426,2.64,427,2.212,436,3.06,476,2.682,477,1.525,478,1.525,667,0.752,806,3.691,943,2.544,944,5.07,945,5.07,946,4.308,947,4.308,948,4.308,949,4.308,950,4.308,951,4.308,952,4.308,953,4.308,954,2.97,955,4.308,956,2.97,957,2.97,958,2.97,959,2.97,960,2.97,961,2.97,962,2.97,963,2.97,964,2.97,965,2.97,966,2.97,967,2.97,968,2.97,969,2.97,970,2.97,971,2.97,972,2.97,973,2.97,974,2.97,975,2.97,976,2.97,977,2.97,978,2.97,979,2.264,980,2.97,981,2.264,982,2.97,983,5.561,984,5.561,985,4.239,986,6.633,987,5.07,988,2.97,989,2.97,990,2.97,991,2.544,992,2.97,993,4.308,994,2.97,995,2.97,996,2.97,997,2.97,998,2.544,999,4.308,1000,2.97,1001,2.97,1002,2.97,1003,2.97,1004,2.97,1005,2.97,1006,2.97,1007,2.97]],["title/classes/LoadingWorker.html",[52,0.188,1008,2.759]],["body/classes/LoadingWorker.html",[8,0.021,12,0.202,13,0.202,14,0.145,19,0.275,51,0.202,52,0.244,53,0.016,54,0.016,73,0.292,77,2.031,84,0.53,86,0.568,87,0.53,88,0.324,89,0.568,94,1.544,123,2.518,135,0.808,263,0.913,272,2.227,281,1.466,282,2.997,283,1.809,290,3.262,292,2.997,360,1.911,371,2.021,380,1.809,381,2.142,382,2.421,416,2.031,437,3.298,629,1.544,649,4.04,650,3.595,657,0.968,658,4.49,888,2.997,925,4.04,942,3.595,1008,4.49,1009,1.193,1010,5.046,1011,4.04,1012,5.502,1013,4.49,1014,5.046,1015,4.716,1016,4.04,1017,4.716,1018,5.89,1019,4.716,1020,5.502,1021,4.04,1022,4.716,1023,5.89,1024,4.716,1025,4.716,1026,5.89,1027,4.716,1028,4.716,1029,4.716,1030,4.716,1031,4.716,1032,4.716,1033,5.89,1034,4.716,1035,4.716,1036,4.716,1037,4.716,1038,4.716,1039,4.716,1040,4.716,1041,1.256,1042,4.716,1043,4.716,1044,4.716,1045,4.716]],["title/directives/SelectColorDirective.html",[164,1.389,186,1.467]],["body/directives/SelectColorDirective.html",[8,0.02,12,0.161,13,0.161,14,0.116,19,0.218,21,0.734,51,0.161,52,0.196,53,0.014,54,0.014,63,1.819,66,1.853,73,0.234,74,0.533,77,1.757,81,0.649,84,0.832,86,0.454,87,0.424,88,0.474,89,0.454,91,0.596,94,2.176,100,0.695,102,2.176,103,0.585,104,0.585,164,1.955,183,1.714,186,2.503,187,3.171,276,2.765,281,1.173,305,1.793,361,2.184,371,2.184,372,2.782,373,2.473,380,2.213,416,1.757,426,2.473,432,2.648,476,2.979,484,3.884,561,4.398,630,2.999,640,2.61,641,3.233,1046,6.358,1047,3.233,1048,4.398,1049,4.398,1050,5.769,1051,3.884,1052,6.177,1053,6.177,1054,6.177,1055,3.884,1056,5.769,1057,5.095,1058,5.095,1059,5.095,1060,5.095,1061,5.095,1062,5.095,1063,5.095,1064,5.095,1065,3.773,1066,3.773,1067,4.398,1068,3.773,1069,5.095,1070,5.095,1071,5.095,1072,5.095,1073,5.095,1074,3.884,1075,4.709,1076,3.773,1077,3.991,1078,3.773,1079,3.773,1080,5.095,1081,5.095,1082,5.095,1083,5.095,1084,5.095,1085,3.773,1086,3.884,1087,3.773,1088,3.773,1089,3.773,1090,3.773,1091,5.095,1092,6.177,1093,5.095,1094,6.451,1095,5.769,1096,4.918,1097,4.365,1098,5.095,1099,5.095,1100,2.876,1101,3.773,1102,3.773,1103,3.773]],["title/components/SeriesItemComponent.html",[55,0.87,174,1.551]],["body/components/SeriesItemComponent.html",[7,1.249,8,0.02,12,0.147,13,0.147,14,0.106,19,0.254,21,0.668,33,0.533,51,0.147,52,0.178,53,0.013,54,0.013,55,1.32,56,1.473,57,2.453,58,1.936,59,2.355,60,1.885,61,1.885,63,1.657,64,2.453,65,2.453,66,2.576,67,2.817,73,0.213,74,0.5,77,1.648,81,0.386,84,0.797,86,0.575,87,0.702,88,0.477,89,0.575,91,0.532,94,1.798,100,0.575,102,1.944,110,1.764,114,1.885,117,3.257,118,0.832,149,3.013,162,1.885,163,2.621,164,1.318,165,1.885,166,1.885,167,1.473,168,1.885,169,1.392,170,1.885,171,1.392,172,1.473,173,1.885,174,2.545,175,0.911,176,2.621,177,1.392,178,1.885,179,1.473,180,1.764,181,1.392,182,1.318,183,1.56,184,1.392,185,1.885,186,1.392,187,1.764,188,1.885,209,1.068,210,1.185,212,1.068,213,1.125,214,1.125,240,2.821,255,1.128,276,2.355,277,2.621,284,0.705,285,0.744,286,1.249,305,1.068,349,0.903,370,3.257,371,2.355,373,2.355,374,1.657,416,1.648,428,3.234,431,2.621,432,2.545,463,1.068,464,1.09,474,3.496,630,2.813,639,4.188,640,3.801,654,3.916,670,3.643,720,4.188,791,2.619,855,4.527,1048,4.188,1049,4.188,1051,3.643,1055,3.643,1067,4.527,1074,3.643,1075,4.527,1077,3.306,1086,3.643,1096,4.188,1100,4.188,1104,4.537,1105,2.619,1106,5.494,1107,5.494,1108,4.188,1109,4.707,1110,4.707,1111,4.707,1112,4.707,1113,5.494,1114,4.707,1115,5.494,1116,3.436,1117,4.094,1118,2.943,1119,3.436,1120,2.943,1121,3.436,1122,3.436,1123,3.436,1124,2.943,1125,3.436,1126,3.436,1127,3.643,1128,3.436,1129,3.436,1130,5.087,1131,3.436,1132,4.707,1133,2.943,1134,3.436,1135,3.436,1136,2.943,1137,3.436,1138,3.436,1139,2.943]],["title/injectables/SeriesItemService.html",[232,1.248,652,1.858]],["body/injectables/SeriesItemService.html",[8,0.02,12,0.186,13,0.186,14,0.134,19,0.296,21,0.847,47,1.583,51,0.186,52,0.226,53,0.015,54,0.015,68,2.564,73,0.383,74,0.586,77,1.931,81,0.49,84,0.791,86,0.525,87,0.49,88,0.448,89,0.525,91,0.586,94,1.833,100,0.525,102,1.426,103,0.96,104,0.96,114,2.389,123,2.036,133,1.867,135,0.768,209,1.354,210,1.502,212,1.354,213,1.426,214,1.426,232,1.931,234,2.389,237,2.375,240,3.178,250,3.32,251,4.153,253,3.559,260,3.013,263,0.96,271,2.811,272,1.924,274,2.1,276,1.867,277,3.072,280,2.564,281,1.354,282,3.934,283,1.671,286,1.583,287,2.768,305,1.741,372,2.701,380,2.375,381,1.978,416,1.502,426,2.966,427,2.875,437,2.236,476,3.151,477,2.236,478,2.236,652,2.875,654,3.91,1020,4.798,1104,4.531,1140,3.731,1141,4.719,1142,6.534,1143,5.6,1144,4.355,1145,4.355,1146,4.355,1147,4.355,1148,4.355,1149,4.798,1150,3.874,1151,4.355,1152,4.355,1153,4.355,1154,4.355,1155,4.355,1156,4.355,1157,4.355,1158,4.355]],["title/components/SeriesListComponent.html",[55,0.87,177,1.467]],["body/components/SeriesListComponent.html",[0,1.054,7,0.844,8,0.021,12,0.099,13,0.271,14,0.071,19,0.292,21,0.451,33,0.907,34,1.119,35,0.318,36,0.36,42,1.366,47,1.59,51,0.153,52,0.186,53,0.01,54,0.01,55,1.051,56,0.995,57,1.839,58,1.451,59,1.875,60,1.273,61,1.273,63,1.119,64,1.839,65,1.839,66,2.38,67,2.567,73,0.144,74,0.375,76,1.366,77,1.235,81,0.403,83,2.509,84,0.779,86,0.431,87,0.597,88,0.464,89,0.431,91,0.525,94,1.61,100,0.676,102,1.74,103,0.907,104,0.87,107,0.529,110,1.192,111,0.89,113,1.054,115,2.745,117,2.697,118,0.623,124,1.627,135,0.803,137,2.915,138,3.569,139,2.78,144,2.78,145,1.475,149,2.399,150,2.246,153,2.78,162,1.273,163,1.965,164,0.89,165,1.273,166,1.273,167,0.995,168,1.273,169,0.94,170,1.273,171,0.94,172,0.995,173,1.273,174,0.995,175,0.941,176,1.965,177,1.993,178,1.273,179,0.995,180,1.192,181,0.94,182,0.89,183,1.054,184,0.94,185,1.273,186,0.94,187,1.192,188,1.273,209,0.721,210,0.8,212,0.721,213,0.76,214,0.76,233,3.005,237,2.319,240,2.246,251,3.125,253,2.78,255,1.153,257,1.119,263,0.555,271,1.627,272,1.746,274,1.119,276,2.278,277,1.965,280,1.366,281,0.721,283,0.89,284,1.43,286,0.844,288,1.678,305,1.36,320,2.042,330,2.822,331,2.372,343,0.451,344,1.366,345,0.589,349,0.719,350,1.273,356,1.769,360,2.372,361,1.535,366,1.475,370,2.697,371,2.108,372,2.109,373,1.875,374,1.119,375,1.192,376,1.606,377,1.727,380,1.678,381,1.054,382,1.192,383,0.381,384,3.026,404,4.402,405,4.849,406,3.885,407,3.569,408,3.026,409,3.026,410,4.291,412,3.026,413,3.026,416,1.235,423,2.478,424,0.735,426,2.407,427,1.839,428,2.575,429,3.026,431,2.399,432,2.108,436,1.627,437,1.839,438,1.475,444,1.475,445,1.606,446,1.606,447,1.606,448,1.606,449,1.606,451,1.606,452,1.606,453,1.606,454,1.606,456,3.026,458,1.606,462,0.558,463,0.696,467,1.475,473,1.606,474,1.366,475,1.192,476,2.371,477,1.192,478,1.192,499,2.78,531,1.475,534,1.475,536,0.995,580,1.769,593,1.606,630,2.108,647,0.502,652,2.525,654,1.273,655,1.606,656,2.73,657,0.476,666,1.606,676,2.73,677,4.281,682,2.73,692,3.749,717,1.769,725,1.769,726,2.73,747,1.769,794,2.478,808,2.73,830,1.769,841,1.769,844,1.769,858,4.051,885,1.769,887,1.769,888,1.475,985,1.769,1104,4.43,1127,2.73,1141,3.334,1150,2.478,1159,3.747,1160,3.747,1161,3.747,1162,3.747,1163,3.334,1164,2.78,1165,3.747,1166,3.582,1167,1.988,1168,2.321,1169,2.321,1170,3.069,1171,2.321,1172,2.321,1173,1.988,1174,1.988,1175,1.988,1176,1.988,1177,1.988,1178,1.988,1179,1.988,1180,1.988,1181,1.988,1182,1.988,1183,2.321,1184,0.529,1185,0.529,1186,0.529,1187,0.529,1188,0.587,1189,1.988,1190,1.988,1191,1.988,1192,1.988,1193,1.988,1194,1.988,1195,1.988,1196,1.988,1197,1.988,1198,1.988,1199,1.988,1200,1.988,1201,1.988,1202,1.988,1203,1.988,1204,1.769,1205,1.988,1206,1.988,1207,1.988,1208,1.988,1209,1.988,1210,3.747,1211,1.988,1212,1.988,1213,1.988,1214,1.988,1215,1.988,1216,1.988,1217,1.988,1218,1.988]],["title/interfaces/SeriesModel.html",[255,0.743,536,1.551]],["body/interfaces/SeriesModel.html",[0,1.452,8,0.021,12,0.137,13,0.246,14,0.098,19,0.308,21,0.622,33,0.942,34,1.541,35,0.439,36,0.495,42,1.882,47,1.921,51,0.194,52,0.235,53,0.012,54,0.012,55,1.092,58,1.295,59,1.37,64,1.641,65,1.641,66,1.162,67,1.295,73,0.198,74,0.475,76,1.882,81,0.359,83,2.264,88,0.417,91,0.621,100,0.732,102,1.046,103,0.495,107,0.729,110,1.641,111,1.226,113,1.452,115,3.014,124,1.452,135,0.91,137,2.898,138,2.886,139,2.031,144,2.031,145,2.031,149,1.753,150,1.641,153,2.031,175,0.969,177,1.295,209,0.994,210,1.102,212,0.994,213,1.046,214,1.046,233,2.712,237,2.546,240,1.641,251,2.886,253,2.031,255,1.181,257,1.541,263,0.942,271,2.759,272,1.788,277,1.753,280,1.882,281,0.994,283,1.226,284,0.656,286,1.162,288,1.226,305,1.412,320,1.921,330,2.548,331,2.141,343,0.622,344,1.882,345,0.746,349,0.868,350,1.753,356,2.437,360,2.462,361,1.947,366,2.031,370,2.491,371,2.466,372,2.19,373,1.947,374,1.541,375,1.641,376,2.211,377,2.19,380,1.742,381,1.452,382,1.641,383,0.525,384,3.142,404,4.012,405,4.591,406,3.142,407,2.886,408,2.211,409,2.211,410,3.655,412,2.211,413,2.211,416,1.102,423,2.211,424,0.656,426,1.947,427,1.641,428,1.882,429,2.211,431,1.753,432,1.37,436,2.063,437,2.332,438,2.031,444,2.031,445,2.211,446,2.211,447,2.211,448,2.211,449,2.211,451,2.211,452,2.211,453,2.211,454,2.211,456,2.211,458,2.211,462,0.768,463,0.883,467,2.031,473,2.211,474,1.882,475,1.641,476,1.541,477,1.641,478,1.641,499,2.886,531,2.031,534,2.031,536,1.37,580,2.437,636,2.031,647,0.692,652,2.332,654,1.753,655,2.211,656,3.462,657,0.656,666,2.211,676,2.437,677,3.462,682,2.437,692,4.027,717,2.437,725,2.437,726,3.462,747,2.437,794,3.142,808,3.462,830,2.437,841,2.437,844,2.437,858,3.462,885,2.437,887,2.437,888,2.031,985,2.437,1104,2.031,1127,2.437,1141,2.437,1150,4.204,1159,2.738,1160,2.738,1161,2.738,1162,2.738,1163,2.437,1164,2.031,1165,2.738,1170,2.738,1184,0.729,1185,0.729,1186,0.729,1187,0.729,1188,0.809,1189,2.738,1190,2.738,1191,2.738,1192,2.738,1193,2.738,1194,2.738,1195,2.738,1196,2.738,1197,2.738,1198,2.738,1199,2.738,1200,2.738,1201,2.738,1202,2.738,1203,2.738,1204,2.437,1205,2.738,1206,2.738,1207,2.738,1208,2.738,1209,2.738,1210,4.526,1211,2.738,1212,2.738,1213,2.738,1214,2.738,1215,2.738,1216,2.738,1217,2.738,1218,2.738]],["title/classes/SeriesWorker.html",[52,0.188,1164,2.3]],["body/classes/SeriesWorker.html",[8,0.02,12,0.208,13,0.208,14,0.149,19,0.291,47,1.768,51,0.208,52,0.252,53,0.016,54,0.016,73,0.301,77,2.07,84,0.547,86,0.585,87,0.547,88,0.334,89,0.585,94,1.591,123,2.472,135,0.667,263,0.93,271,2.726,272,2.241,281,1.511,282,4.138,283,1.865,288,2.498,290,3.363,361,2.573,371,2.084,382,2.496,416,2.07,436,2.957,629,1.565,642,4.165,650,3.706,657,0.998,754,3.706,757,3.706,862,3.089,991,5.578,1009,1.23,1012,5.578,1013,4.575,1014,5.142,1016,4.165,1021,4.165,1149,5.142,1150,3.363,1164,3.814,1219,5.142,1220,4.861,1221,4.861,1222,3.706,1223,4.861,1224,6.002,1225,4.861,1226,6.002,1227,4.861,1228,4.861,1229,4.861,1230,4.165,1231,6.002,1232,4.861,1233,4.861,1234,4.861]],["title/classes/SetActiveSplit.html",[52,0.188,1235,0.916]],["body/classes/SetActiveSplit.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.384,84,0.616,86,0.412,87,0.384,88,0.509,89,0.412,91,0.615,93,1.317,98,1.317,100,0.797,103,0.53,104,0.53,106,1.622,107,1.086,112,0.821,118,0.595,135,0.653,175,0.8,255,0.701,263,0.53,284,0.701,285,0.74,343,0.665,345,0.783,349,0.9,383,0.562,424,1.512,462,1.144,463,1.152,464,0.78,532,0.74,620,1.269,629,1.77,635,2.052,645,0.821,646,0.821,647,0.74,648,0.821,657,0.701,667,1.675,798,0.911,810,1.269,1009,0.865,1041,0.911,1184,0.78,1185,0.78,1186,0.78,1187,0.78,1188,1.205,1235,1.205,1236,0.959,1237,2.072,1238,2.175,1239,1.009,1240,4.761,1241,3.418,1242,1.956,1243,0.959,1244,0.959,1245,0.865,1246,1.009,1247,1.009,1248,1.335,1249,1.406,1250,0.865,1251,1.009,1252,0.865,1253,0.865,1254,0.911,1255,1.009,1256,0.865,1257,1.009]],["title/classes/SetCategoryList.html",[52,0.188,1250,0.916]],["body/classes/SetCategoryList.html",[8,0.021,12,0.147,13,0.147,14,0.105,19,0.204,33,0.739,35,0.47,36,0.531,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.499,81,0.385,84,0.617,86,0.413,87,0.385,88,0.51,89,0.413,91,0.635,93,1.318,98,1.318,100,0.714,103,0.531,104,0.531,106,1.592,107,1.088,112,0.823,118,0.596,135,0.752,175,0.801,255,0.703,263,0.531,284,0.703,285,0.741,343,0.666,345,0.784,349,0.901,383,0.563,424,1.512,462,1.146,463,1.153,464,0.781,532,0.741,620,0.913,629,1.771,635,2.053,645,0.823,646,0.823,647,0.741,648,0.823,657,0.703,667,1.634,798,0.913,810,1.27,1009,0.867,1041,0.913,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.207,1235,0.867,1236,0.961,1237,2.072,1238,2.175,1239,1.011,1242,1.957,1243,0.961,1244,0.961,1245,0.867,1246,1.011,1247,1.011,1248,1.337,1249,1.408,1250,1.207,1251,1.011,1252,0.867,1253,0.867,1254,0.913,1255,1.011,1256,0.867,1257,1.011,1258,4.768,1259,3.425]],["title/classes/SetCurrentCategory.html",[52,0.188,1184,0.826]],["body/classes/SetCurrentCategory.html",[8,0.021,12,0.147,13,0.147,14,0.105,19,0.204,33,0.531,35,0.47,36,0.531,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.499,81,0.385,84,0.617,86,0.413,87,0.385,88,0.51,89,0.413,91,0.635,93,1.318,98,1.318,100,0.714,103,0.531,104,0.531,106,1.592,107,1.088,112,0.823,118,0.596,135,0.752,175,0.801,255,0.703,263,0.531,284,0.703,285,0.741,343,0.666,345,0.784,349,0.901,383,0.563,424,1.512,462,1.318,463,1.153,464,0.781,532,0.741,620,0.913,629,1.771,635,2.053,645,0.823,646,0.823,647,0.741,648,0.823,657,0.703,667,1.634,798,0.913,810,1.27,1009,0.867,1041,0.913,1184,1.088,1185,0.781,1186,0.781,1187,0.781,1188,1.207,1235,0.867,1236,0.961,1237,2.072,1238,2.175,1239,1.011,1242,1.957,1243,0.961,1244,0.961,1245,0.867,1246,1.011,1247,1.011,1248,1.337,1249,1.408,1250,0.867,1251,1.011,1252,0.867,1253,0.867,1254,0.913,1255,1.011,1256,0.867,1257,1.011,1260,4.768,1261,3.425]],["title/classes/SetCurrentSplitOperation.html",[52,0.188,645,0.87]],["body/classes/SetCurrentSplitOperation.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.203,33,0.528,35,0.467,36,0.528,51,0.313,52,0.379,53,0.013,54,0.013,73,0.211,74,0.497,81,0.383,84,0.615,86,0.41,87,0.383,88,0.512,89,0.41,91,0.614,93,1.315,98,1.315,100,0.713,103,0.528,104,0.528,106,1.621,107,1.084,112,0.819,118,0.593,135,0.652,175,0.798,255,0.699,263,0.528,274,2.637,284,0.699,285,0.738,343,0.663,345,0.781,349,0.899,383,0.56,424,1.511,462,1.315,463,1.151,464,0.777,532,0.738,620,0.908,629,1.77,635,2.051,645,1.142,646,0.819,647,0.738,648,0.819,657,0.699,667,1.674,798,0.908,810,1.266,1009,0.862,1041,1.266,1184,0.777,1185,0.777,1186,0.777,1187,0.777,1188,1.202,1235,0.862,1236,0.956,1237,2.071,1238,2.174,1239,1.006,1242,1.956,1243,0.956,1244,0.956,1245,0.862,1246,1.006,1247,1.006,1248,1.333,1249,1.403,1250,0.862,1251,1.006,1252,0.862,1253,0.862,1254,0.908,1255,1.006,1256,0.862,1257,1.006,1262,4.751,1263,3.407]],["title/classes/SetFocusedSplit.html",[52,0.188,532,0.783]],["body/classes/SetFocusedSplit.html",[8,0.021,12,0.147,13,0.147,14,0.105,19,0.204,33,0.531,35,0.47,36,0.531,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.499,81,0.385,84,0.617,86,0.413,87,0.385,88,0.51,89,0.413,91,0.615,93,1.318,98,1.318,100,0.798,103,0.531,104,0.531,106,1.623,107,1.088,112,0.823,118,0.596,135,0.654,175,0.801,255,0.703,263,0.531,284,0.703,285,0.741,343,0.666,345,0.784,349,0.901,383,0.563,424,1.512,462,1.146,463,1.153,464,0.781,532,1.032,620,0.913,629,1.771,635,2.053,645,0.823,646,0.823,647,0.741,648,0.823,657,0.703,667,1.634,798,0.913,810,1.27,1009,0.867,1041,0.913,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.207,1235,0.867,1236,0.961,1237,2.072,1238,2.175,1239,1.011,1242,1.957,1243,0.961,1244,0.961,1245,0.867,1246,1.011,1247,1.011,1248,1.337,1249,1.408,1250,0.867,1251,1.408,1252,0.867,1253,0.867,1254,0.913,1255,1.011,1256,0.867,1257,1.011,1264,4.768,1265,3.425]],["title/classes/SetImageUrls.html",[52,0.188,646,0.87]],["body/classes/SetImageUrls.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.635,93,1.317,98,1.317,100,0.714,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.8,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.974,383,0.562,424,1.512,462,1.145,463,1.153,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,1.145,647,0.741,648,0.822,657,0.702,667,1.633,798,0.912,810,1.461,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.387,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1266,4.764,1267,3.422]],["title/classes/SetIsImageLoaded.html",[52,0.188,647,0.783]],["body/classes/SetIsImageLoaded.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.529,35,0.468,36,0.529,51,0.313,52,0.379,53,0.013,54,0.013,73,0.211,74,0.498,81,0.384,84,0.616,86,0.411,87,0.384,88,0.513,89,0.411,91,0.615,93,1.316,98,1.316,100,0.713,103,0.529,104,0.529,106,1.59,107,1.085,112,0.821,118,0.594,135,0.653,175,0.799,255,0.701,263,0.529,274,2.64,284,0.701,285,0.739,343,0.664,345,0.782,349,0.9,383,0.561,424,1.512,462,1.143,463,1.152,464,0.779,532,0.739,620,0.91,629,1.77,635,2.052,645,0.821,646,0.821,647,1.03,648,0.821,657,0.701,667,1.632,798,0.91,810,1.268,1009,0.864,1041,0.91,1184,0.779,1185,0.779,1186,0.779,1187,0.779,1188,1.204,1235,0.864,1236,0.958,1237,2.072,1238,2.175,1239,1.008,1242,1.956,1243,0.958,1244,0.958,1245,0.864,1246,1.008,1247,1.405,1248,1.536,1249,1.405,1250,0.864,1251,1.008,1252,0.864,1253,0.864,1254,0.91,1255,1.008,1256,0.864,1257,1.008,1268,4.758,1269,3.415]],["title/classes/SetIsSeriesLoaded.html",[52,0.188,1185,0.826]],["body/classes/SetIsSeriesLoaded.html",[8,0.021,12,0.147,13,0.147,14,0.105,19,0.204,33,0.531,35,0.47,36,0.531,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.499,81,0.385,84,0.617,86,0.413,87,0.385,88,0.51,89,0.413,91,0.615,93,1.318,98,1.551,100,0.714,103,0.531,104,0.531,106,1.592,107,1.088,112,0.823,118,0.596,135,0.654,175,0.866,255,0.703,263,0.531,284,0.703,285,0.741,343,0.666,345,0.784,349,0.901,383,0.563,424,1.512,462,1.146,463,1.153,464,0.781,532,0.741,620,0.913,629,1.771,635,2.053,645,0.823,646,0.823,647,0.741,648,0.823,657,0.703,667,1.634,798,0.913,810,1.27,1009,0.867,1041,0.913,1184,0.781,1185,1.088,1186,0.781,1187,0.781,1188,1.207,1235,0.867,1236,0.961,1237,2.072,1238,2.175,1239,1.011,1242,1.957,1243,0.961,1244,0.961,1245,0.867,1246,1.011,1247,1.011,1248,1.538,1249,1.408,1250,0.867,1251,1.011,1252,0.867,1253,0.867,1254,0.913,1255,1.011,1256,0.867,1257,1.011,1270,4.768,1271,3.425]],["title/classes/SetSelectedImageById.html",[52,0.188,343,0.704]],["body/classes/SetSelectedImageById.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.615,93,1.425,98,1.317,100,0.714,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.8,255,0.702,263,0.53,284,0.702,285,0.741,343,0.926,345,1.024,349,0.974,383,0.562,424,1.512,462,1.145,463,1.212,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.633,798,0.912,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1272,4.764,1273,3.422]],["title/classes/SetSelectedImageByUrl.html",[52,0.188,1252,0.916]],["body/classes/SetSelectedImageByUrl.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.635,93,1.317,98,1.317,100,0.714,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.8,255,0.702,263,0.739,284,0.702,285,0.741,343,0.665,345,0.783,349,0.974,383,0.562,424,1.512,462,1.145,463,1.212,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.633,798,0.912,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,1.206,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1274,4.764,1275,3.422]],["title/classes/SetSelectedSeriesById.html",[52,0.188,1186,0.826]],["body/classes/SetSelectedSeriesById.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.615,93,1.425,98,1.317,100,0.797,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.865,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.901,383,0.562,424,1.512,462,1.145,463,1.212,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.633,798,0.912,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,1.087,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1276,4.764,1277,3.422]],["title/classes/SetSelectedSplitWindowId.html",[52,0.188,648,0.87]],["body/classes/SetSelectedSplitWindowId.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.384,84,0.616,86,0.412,87,0.384,88,0.509,89,0.412,91,0.635,93,1.424,98,1.317,100,0.714,103,0.53,104,0.53,106,1.622,107,1.25,112,0.821,118,0.595,135,0.653,175,0.8,255,0.701,263,0.53,284,0.701,285,0.74,343,0.665,345,0.783,349,0.9,383,0.562,424,1.512,462,1.144,463,1.211,464,0.78,532,0.74,620,0.911,629,1.77,635,2.052,645,0.821,646,0.821,647,0.74,648,1.144,657,0.701,667,1.633,798,0.911,810,1.269,1009,0.865,1041,0.911,1184,0.78,1185,0.78,1186,0.78,1187,0.78,1188,1.205,1235,0.865,1236,0.959,1237,2.072,1238,2.175,1239,1.009,1242,1.956,1243,0.959,1244,0.959,1245,0.865,1246,1.009,1247,1.009,1248,1.335,1249,1.406,1250,0.865,1251,1.009,1252,0.865,1253,0.865,1254,0.911,1255,1.009,1256,0.865,1257,1.009,1278,4.761,1279,3.418]],["title/classes/SetSeriesUrls.html",[52,0.188,1187,0.826]],["body/classes/SetSeriesUrls.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.635,93,1.317,98,1.317,100,0.714,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.865,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.901,383,0.562,424,1.512,462,1.145,463,1.153,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.633,798,0.912,810,1.461,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,1.087,1188,1.387,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1280,4.764,1281,3.422]],["title/classes/SetSplitAction.html",[52,0.188,383,0.595]],["body/classes/SetSplitAction.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.615,93,1.317,98,1.551,100,0.714,103,0.53,104,0.53,106,1.623,107,1.087,112,0.822,118,0.595,135,0.654,175,0.8,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.901,383,0.783,424,1.512,462,1.145,463,1.153,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.676,798,1.27,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1282,4.764,1283,3.422]],["title/classes/SetSplitMode.html",[52,0.188,112,0.87]],["body/classes/SetSplitMode.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.615,93,1.317,98,1.317,100,0.797,103,0.53,104,0.53,106,1.623,107,1.251,112,1.145,118,0.595,135,0.654,175,0.8,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.901,383,0.562,424,1.512,462,1.145,463,1.153,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.702,667,1.676,798,0.912,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,0.866,1257,1.01,1284,4.764,1285,3.422]],["title/classes/SetSplitState.html",[52,0.188,1253,0.916]],["body/classes/SetSplitState.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.203,33,0.529,35,0.468,36,0.529,51,0.313,52,0.379,53,0.013,54,0.013,73,0.211,74,0.497,81,0.383,84,0.615,86,0.411,87,0.383,88,0.513,89,0.411,91,0.614,93,1.315,98,1.315,100,0.713,103,0.529,104,0.529,106,1.622,107,1.085,112,0.82,118,0.594,135,0.652,175,0.799,255,0.7,263,0.529,274,2.639,284,0.7,285,0.738,343,0.663,345,0.781,349,0.899,383,0.561,424,1.511,462,1.143,463,1.151,464,0.778,532,0.738,620,0.909,629,1.77,635,2.052,645,0.82,646,0.82,647,0.738,648,0.82,657,0.7,667,1.674,798,0.909,810,1.267,1009,0.863,1041,0.909,1184,0.778,1185,0.778,1186,0.778,1187,0.778,1188,1.203,1235,0.863,1236,0.957,1237,2.072,1238,2.174,1239,1.007,1242,1.956,1243,0.957,1244,0.957,1245,0.863,1246,1.007,1247,1.007,1248,1.333,1249,1.404,1250,0.863,1251,1.007,1252,0.863,1253,1.203,1254,1.267,1255,1.007,1256,0.863,1257,1.007,1286,4.754,1287,3.411]],["title/classes/SetWebworkerWorkingStatus.html",[52,0.188,1256,0.916]],["body/classes/SetWebworkerWorkingStatus.html",[8,0.021,12,0.146,13,0.146,14,0.105,19,0.204,33,0.53,35,0.469,36,0.53,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.498,81,0.385,84,0.616,86,0.412,87,0.385,88,0.509,89,0.412,91,0.615,93,1.317,98,1.551,100,0.714,103,0.53,104,0.53,106,1.591,107,1.087,112,0.822,118,0.595,135,0.654,175,0.8,255,0.702,263,0.53,284,0.702,285,0.741,343,0.665,345,0.783,349,0.901,383,0.562,424,1.512,462,1.145,463,1.153,464,0.781,532,0.741,620,0.912,629,1.771,635,2.052,645,0.822,646,0.822,647,0.741,648,0.822,657,0.978,667,1.676,798,0.912,810,1.27,1009,0.866,1041,0.912,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.206,1235,0.866,1236,0.96,1237,2.072,1238,2.175,1239,1.01,1242,1.957,1243,0.96,1244,0.96,1245,0.866,1246,1.01,1247,1.01,1248,1.336,1249,1.407,1250,0.866,1251,1.01,1252,0.866,1253,0.866,1254,0.912,1255,1.01,1256,1.206,1257,1.407,1288,4.764,1289,3.422]],["title/injectables/SplitService.html",[232,1.248,331,1.467]],["body/injectables/SplitService.html",[8,0.021,12,0.181,13,0.181,14,0.13,19,0.235,21,0.823,51,0.181,52,0.219,53,0.015,54,0.015,68,2.491,73,0.262,74,0.575,77,1.896,81,0.686,84,0.812,88,0.486,94,1.385,102,1.385,103,1.002,104,1.002,232,1.896,234,2.322,272,2.083,281,1.316,287,2.69,305,2.203,331,2.228,360,2.619,380,2.823,518,3.805,521,4.472,524,4.472,526,4.472,765,4.71,906,5.882,908,5.882,1290,3.626,1291,6.106,1292,5.498,1293,6.106,1294,6.106,1295,6.464,1296,5.498,1297,4.232,1298,4.232,1299,4.232,1300,4.232,1301,4.232,1302,4.232,1303,4.232,1304,5.498,1305,4.232,1306,4.232,1307,4.232,1308,4.232,1309,4.232,1310,4.232,1311,5.498,1312,5.498,1313,4.232,1314,4.232,1315,4.232,1316,4.232,1317,4.232,1318,4.232,1319,4.232,1320,4.232,1321,4.232,1322,4.232,1323,4.232,1324,4.232,1325,4.232,1326,4.232,1327,4.232,1328,4.232,1329,4.232,1330,4.232,1331,4.232,1332,4.232,1333,4.232,1334,4.232,1335,4.232,1336,4.232]],["title/classes/StatusAction.html",[52,0.188,1245,0.916]],["body/classes/StatusAction.html",[8,0.021,12,0.147,13,0.147,14,0.105,19,0.204,33,0.531,35,0.47,36,0.531,51,0.313,52,0.379,53,0.013,54,0.013,73,0.212,74,0.499,81,0.385,84,0.617,86,0.413,87,0.385,88,0.51,89,0.413,91,0.635,93,1.318,98,1.318,100,0.714,103,0.531,104,0.531,106,1.592,107,1.088,112,0.823,118,0.596,135,0.654,175,0.801,255,0.703,263,0.531,284,0.703,285,0.741,343,0.666,345,0.784,349,0.901,383,0.563,424,1.512,462,1.146,463,1.153,464,1.088,532,0.741,620,0.913,629,1.771,635,2.053,645,0.823,646,0.823,647,0.741,648,0.823,657,0.703,667,1.634,798,0.913,810,1.27,1009,0.867,1041,0.913,1184,0.781,1185,0.781,1186,0.781,1187,0.781,1188,1.207,1235,0.867,1236,0.961,1237,2.072,1238,2.175,1239,1.011,1242,1.957,1243,0.961,1244,0.961,1245,1.207,1246,1.408,1247,1.011,1248,1.337,1249,1.408,1250,0.867,1251,1.011,1252,0.867,1253,0.867,1254,0.913,1255,1.011,1256,0.867,1257,1.011,1337,4.768,1338,3.425]],["title/interfaces/StatusStateModel.html",[536,1.551,1339,2.759]],["body/interfaces/StatusStateModel.html",[8,0.021,12,0.109,13,0.109,14,0.078,19,0.237,21,0.494,35,0.349,36,0.394,47,2.197,51,0.164,52,0.132,53,0.01,54,0.01,66,2.57,73,0.157,74,0.402,76,1.497,87,0.286,88,0.492,91,0.647,98,1.53,100,0.805,111,0.975,112,0.923,118,0.442,123,2.556,128,2.941,133,1.983,134,1.852,135,0.635,148,4.742,209,0.79,232,1.324,240,2.647,255,0.522,263,0.394,271,1.155,274,2.486,284,0.522,285,0.55,288,1.473,343,0.747,345,0.847,350,2.538,360,2.449,383,0.631,420,3.829,422,3.036,424,1.442,483,4.219,485,3.829,518,1.497,532,0.831,536,1.09,545,1.616,587,4.742,620,1.023,629,1.782,636,1.616,645,0.923,646,0.923,647,0.831,648,0.923,658,2.927,659,3.29,660,3.29,661,3.29,662,2.178,663,2.178,664,2.178,665,2.178,686,4.742,798,0.677,810,1.374,888,3.276,1114,4.742,1163,4.219,1184,0.876,1185,0.876,1186,0.876,1187,0.876,1235,0.972,1237,2.076,1242,0.677,1243,0.713,1244,0.713,1245,0.972,1250,0.972,1252,0.972,1253,0.972,1254,1.475,1256,0.972,1339,5.414,1340,2.178,1341,5.535,1342,5.535,1343,5.535,1344,5.535,1345,4.742,1346,5.535,1347,5.535,1348,5.535,1349,7.067,1350,2.542,1351,2.542,1352,2.542,1353,4.627,1354,3.84,1355,2.542,1356,2.542,1357,2.542,1358,2.542,1359,2.542,1360,2.542,1361,2.542,1362,2.542,1363,2.542,1364,2.542,1365,2.542,1366,2.542,1367,2.542,1368,2.542,1369,2.542,1370,2.542,1371,2.542,1372,2.542,1373,2.542,1374,2.542,1375,2.542,1376,2.542,1377,2.542,1378,2.542,1379,2.542,1380,2.542,1381,2.542,1382,2.542,1383,2.542,1384,2.542,1385,2.542,1386,2.542,1387,2.542,1388,2.542,1389,2.542,1390,2.542,1391,2.542,1392,2.542,1393,2.542,1394,2.542,1395,2.542,1396,3.84,1397,2.542,1398,2.542,1399,2.542,1400,2.542,1401,2.542,1402,2.542,1403,2.542,1404,2.542,1405,2.542,1406,2.542,1407,2.542,1408,2.542,1409,2.542,1410,2.542,1411,2.542,1412,2.542,1413,2.542,1414,2.542,1415,2.542,1416,2.542,1417,2.542,1418,2.542,1419,2.542,1420,2.542,1421,2.542,1422,2.542,1423,2.542,1424,2.542,1425,2.542,1426,2.542,1427,2.542,1428,2.542,1429,2.542,1430,2.542,1431,2.542,1432,2.542,1433,2.542,1434,2.542,1435,2.542,1436,2.542,1437,2.542,1438,2.542,1439,2.542,1440,2.542,1441,2.542,1442,2.542,1443,2.542,1444,2.542,1445,2.542,1446,2.542,1447,2.542,1448,2.542,1449,2.542,1450,2.542,1451,2.542,1452,2.542,1453,2.542,1454,2.542,1455,2.542,1456,2.542,1457,2.542]],["title/components/ThumbItemComponent.html",[55,0.87,179,1.551]],["body/components/ThumbItemComponent.html",[7,1.197,8,0.021,12,0.141,13,0.141,14,0.101,19,0.263,21,0.64,33,0.51,34,1.587,35,0.452,36,0.51,51,0.141,52,0.171,53,0.012,54,0.012,55,1.29,56,1.411,57,2.381,58,1.879,59,2.301,60,1.806,61,1.806,63,1.587,64,2.381,65,2.381,66,2.557,67,2.792,73,0.204,74,0.485,77,1.599,81,0.521,84,0.791,86,0.647,87,0.717,88,0.466,89,0.647,91,0.416,94,1.908,102,2.011,110,1.69,117,3.197,118,0.807,123,1.197,149,2.945,162,1.806,163,2.544,164,1.263,165,1.806,166,1.806,167,1.411,168,1.806,169,1.334,170,1.806,171,1.334,172,1.411,173,1.806,174,1.411,175,0.677,176,2.544,177,1.334,178,1.806,179,2.498,180,2.756,181,1.334,182,1.263,183,1.495,184,1.334,185,1.806,186,1.334,187,1.69,188,1.806,209,1.023,210,1.135,212,1.023,213,1.078,214,1.078,237,1.779,248,3.535,276,1.988,286,1.197,305,1.023,320,2.318,345,1.01,349,0.882,370,3.197,371,2.301,373,2.301,374,1.587,375,1.69,411,4.093,416,1.599,428,3.617,431,2.945,432,2.498,463,1.044,464,1.058,474,3.431,593,2.277,630,2.73,639,4.093,640,3.714,667,0.833,670,3.535,698,4.6,720,4.093,791,3.535,855,4.443,1048,4.093,1049,4.443,1051,3.535,1055,3.535,1067,4.443,1074,3.535,1075,4.443,1077,2.277,1086,3.535,1096,4.093,1097,4.6,1100,2.51,1105,2.51,1108,4.093,1109,4.6,1110,4.6,1111,4.6,1112,4.6,1117,2.82,1118,2.82,1120,3.973,1124,2.82,1130,5.461,1132,4.6,1133,2.82,1136,2.82,1139,2.82,1345,4.6,1458,6.073,1459,5.404,1460,5.369,1461,5.369,1462,4.637,1463,3.292,1464,3.292,1465,3.292,1466,3.292,1467,4.637,1468,3.292,1469,4.637,1470,3.292,1471,3.292,1472,3.292,1473,6.144,1474,3.292,1475,3.292,1476,5.369,1477,3.292,1478,3.292,1479,3.292,1480,3.292,1481,3.292]],["title/components/ThumbnailListComponent.html",[55,0.87,181,1.467]],["body/components/ThumbnailListComponent.html",[7,0.902,8,0.021,12,0.106,13,0.276,14,0.076,19,0.284,21,0.482,33,0.894,34,1.196,35,0.34,36,0.385,42,1.461,51,0.161,52,0.236,53,0.01,54,0.01,55,1.096,56,1.063,57,1.935,58,1.528,59,1.954,60,1.361,61,1.361,63,1.196,64,1.935,65,1.935,66,2.416,67,2.613,73,0.233,74,0.394,77,1.3,81,0.513,83,2.569,84,0.782,86,0.454,87,0.616,88,0.466,89,0.454,91,0.338,93,0.596,94,1.492,100,0.613,102,1.667,103,0.929,104,1,110,1.274,111,0.952,113,1.127,115,1.712,117,2.793,118,0.656,124,1.712,133,1.063,134,1.196,135,0.699,137,2.501,138,3.664,139,2.897,140,3.475,144,2.897,149,2.501,150,2.614,153,2.897,162,1.361,163,2.068,164,0.952,165,1.361,166,1.361,167,1.063,168,1.361,169,1.005,170,1.361,171,1.005,172,1.063,173,1.361,174,1.063,175,0.665,176,2.068,177,1.005,178,1.361,179,1.063,180,1.274,181,2.063,182,2.101,183,1.127,184,1.005,185,1.361,186,1.005,187,1.274,188,1.361,209,0.771,210,0.856,212,0.771,213,0.812,214,0.812,224,2.396,232,1.3,237,1.953,257,1.818,272,1.863,274,1.196,276,2.347,281,0.771,283,0.952,285,0.537,286,0.902,288,1.953,292,1.577,305,1.172,320,2.096,322,1.717,325,1.891,326,1.891,327,3.154,330,2.89,331,1.005,343,0.482,344,1.461,345,0.985,346,2.608,349,0.749,350,1.361,360,2.063,361,2.182,363,3.154,364,4.844,365,4.844,366,1.577,367,2.126,368,3.23,370,2.793,371,1.616,372,2.198,373,1.954,374,1.196,375,1.274,376,1.717,377,1.196,378,2.126,379,2.126,380,1.749,381,1.127,382,1.274,383,0.408,384,3.154,385,3.906,386,2.126,387,2.126,388,2.126,389,2.126,390,1.717,391,1.717,392,2.126,393,2.126,394,2.126,395,2.126,396,2.126,397,2.126,398,2.126,399,2.126,400,3.23,401,2.126,402,2.126,403,2.126,404,4.45,405,4.872,406,3.154,407,2.897,408,3.154,409,3.154,410,4.375,411,3.475,412,3.154,413,3.154,414,3.23,415,3.23,416,1.3,417,3.23,418,3.906,419,3.23,420,3.154,421,3.23,422,2.501,423,2.608,424,0.774,425,3.906,426,2.471,427,1.935,428,2.684,429,3.154,430,3.906,431,2.501,432,2.182,433,3.23,434,2.126,435,3.882,436,2.312,437,1.935,438,2.396,439,2.126,440,2.126,441,2.126,442,2.126,443,2.126,444,2.396,445,1.717,446,1.717,447,1.717,448,1.717,449,1.717,450,2.126,451,1.717,452,1.717,453,2.608,454,1.717,455,1.577,456,1.717,457,2.126,458,2.608,459,2.126,460,1.891,461,2.126,462,0.596,463,0.482,464,0.86,465,2.126,466,1.891,467,1.577,468,2.126,469,2.126,470,2.126,471,3.23,472,2.126,473,1.717,474,1.461,475,1.274,476,2.455,477,1.274,478,1.274,499,1.577,593,1.717,630,2.219,1167,2.126,1173,2.126,1174,2.126,1175,2.126,1176,2.126,1177,2.126,1178,2.126,1179,2.126,1180,3.23,1181,2.126,1182,2.126,1482,3.77,1483,2.481,1484,2.481,1485,2.481,1486,2.481,1487,2.481,1488,2.481]],["title/modules/ThumbnailModule.html",[0,1.644,196,2.3]],["body/modules/ThumbnailModule.html",[1,3.86,2,2.242,3,2.997,8,0.02,9,3.436,10,2.55,11,2.55,12,0.199,13,0.199,14,0.143,17,3.71,18,4.039,19,0.309,20,3.436,21,0.904,29,4.039,30,2.955,48,2.737,50,3.436,51,0.199,52,0.241,53,0.016,54,0.016,174,3.179,175,0.931,177,3.006,179,3.179,180,2.387,181,3.006,182,1.784,196,4.819,219,3.544,224,3.71,284,0.954,285,1.264,364,3.216,365,3.216,652,3.613,654,3.202,655,3.216,1459,3.544,1489,3.983,1490,3.983,1491,3.983,1492,4.649,1493,3.983,1494,4.649,1495,5.838]],["title/interfaces/Tile.html",[511,2.504,536,1.551]],["body/interfaces/Tile.html",[8,0.021,12,0.14,13,0.14,14,0.1,19,0.298,21,0.634,47,1.185,51,0.197,52,0.169,53,0.012,54,0.012,55,1.107,58,1.321,59,1.397,66,1.185,67,1.321,72,2.485,73,0.202,74,0.482,83,2.289,88,0.436,91,0.629,100,0.817,102,1.067,111,1.25,113,1.48,114,1.788,115,2.425,123,1.185,124,1.48,133,3.168,134,3.385,150,1.673,169,1.321,171,1.866,172,1.974,209,1.013,210,1.124,212,1.013,213,1.067,214,1.067,233,2.742,237,2.049,272,1.66,281,1.013,283,1.25,286,1.185,288,2.348,305,1.013,320,1.942,331,2.164,341,1.919,360,1.321,361,2.289,373,1.974,374,1.572,375,1.673,377,1.572,380,1.767,381,1.48,382,1.673,383,0.536,416,1.124,422,1.788,424,0.669,426,1.397,432,1.397,436,2.78,455,2.072,475,1.673,479,2.485,480,2.792,481,6.176,482,6.176,483,2.485,484,2.485,485,3.186,486,2.792,487,2.792,488,2.792,489,2.792,490,2.792,494,2.792,496,3.186,497,2.792,499,4.151,501,2.792,503,5.244,505,2.792,507,2.792,509,2.485,511,4.518,512,3.945,514,6.106,515,6.106,516,6.106,517,6.106,518,3.603,520,5.171,521,4.015,523,5.443,524,3.694,526,3.186,529,2.072,530,2.485,531,2.072,532,0.706,533,2.485,534,2.072,535,2.485,536,1.397,537,2.792,538,2.485,539,3.945,540,2.792,541,2.792,542,2.792,543,4.971,544,2.792,545,2.927,546,2.792,547,2.072,548,2.792,549,3.945,550,3.945,551,2.792,552,3.945,553,2.792,554,2.792,555,2.485,556,2.485,557,2.792,558,2.792,559,2.792,560,2.792,561,2.485,562,2.485,563,2.255,564,3.511,636,2.072]],["title/coverage.html",[1496,4.243]],["body/coverage.html",[7,1.312,8,0.02,14,0.111,15,2.751,16,2.751,35,0.678,48,2.124,52,0.384,53,0.013,54,0.013,55,1.644,56,1.547,62,3.091,88,0.248,112,0.867,164,1.896,169,1.462,171,1.462,174,1.547,177,1.462,179,1.547,181,1.462,184,1.462,186,1.462,209,1.122,232,2.316,233,1.853,235,3.091,236,3.091,255,0.741,284,1.014,305,1.122,320,1.312,324,3.091,330,1.74,331,1.462,343,0.702,345,0.593,360,3.109,363,2.496,364,3.419,365,3.419,366,3.854,383,0.593,479,3.768,511,2.496,529,2.293,532,0.781,536,2.599,575,3.091,576,3.091,626,3.091,627,3.091,637,4.234,638,4.234,645,0.867,646,0.867,647,0.781,648,0.867,652,1.853,654,2.711,862,4.169,943,3.091,979,2.751,981,3.768,1008,2.751,1010,3.091,1011,3.091,1046,3.091,1047,3.091,1104,3.854,1105,3.768,1140,3.091,1164,2.293,1184,0.823,1185,0.823,1186,0.823,1187,0.823,1219,3.091,1222,2.751,1235,0.913,1236,2.065,1245,0.913,1250,0.913,1252,0.913,1253,0.913,1256,0.913,1290,3.091,1339,2.751,1340,4.234,1458,3.091,1459,2.751,1496,3.091,1497,3.608,1498,3.608,1499,3.608,1500,5.638,1501,3.608,1502,3.608,1503,5.638,1504,7.386,1505,5.638,1506,3.608,1507,4.943,1508,5.754,1509,7.144,1510,3.608,1511,3.608,1512,3.608,1513,3.608,1514,5.638,1515,3.091,1516,3.091,1517,3.091,1518,4.234,1519,4.234,1520,5.442,1521,3.091,1522,4.842,1523,3.091,1524,3.091,1525,3.091,1526,3.091,1527,3.091,1528,3.091,1529,4.234,1530,3.091,1531,3.608,1532,3.608,1533,3.608]],["title/dependencies.html",[3,2.237,1534,3.016]],["body/dependencies.html",[3,2.669,8,0.02,21,1.011,30,3.303,53,0.017,54,0.017,111,1.994,182,1.994,200,5.356,201,4.766,212,1.616,213,1.701,214,1.701,216,4.453,217,5.744,229,4.453,272,1.616,281,1.616,349,0.854,657,1.067,821,3.962,1230,4.453,1535,5.198,1536,6.317,1537,5.198,1538,6.252,1539,5.198,1540,5.198,1541,5.198,1542,5.198,1543,5.198,1544,5.198,1545,6.252,1546,5.198,1547,6.252,1548,5.198,1549,5.198,1550,5.198,1551,5.198,1552,5.198,1553,5.198,1554,5.198,1555,5.198,1556,5.198,1557,5.198,1558,5.198,1559,5.198,1560,5.198]],["title/miscellaneous/functions.html",[1561,2.087,1562,3.733]],["body/miscellaneous/functions.html",[8,0.02,53,0.016,54,0.016,73,0.317,86,0.854,87,0.797,88,0.475,89,0.854,91,0.646,94,2.029,100,0.886,257,2.989,774,5.311,862,4.401,979,4.726,981,5.081,1518,4.391,1519,5.71,1521,5.311,1522,3.907,1523,5.311,1524,5.311,1525,5.311,1561,3.546,1562,4.391,1563,5.71,1564,6.199,1565,5.125,1566,5.125,1567,5.125,1568,5.125,1569,5.125,1570,5.125,1571,6.199,1572,6.199,1573,6.199,1574,6.199,1575,5.125]],["title/index.html",[73,0.187,673,2.299,1576,3.016]],["body/index.html",[8,0.015,11,2.404,14,0.135,33,0.992,53,0.012,54,0.012,55,0.731,83,1.878,93,0.731,106,1.733,107,1.664,133,1.878,134,1.466,135,1.001,136,2.605,137,3.51,145,1.932,164,1.166,167,1.878,172,2.41,175,0.64,182,2.157,212,1.597,257,1.466,263,0.796,272,0.945,281,1.362,349,1.235,377,2.478,390,3.032,391,4.686,404,1.932,463,1.274,538,4.543,545,1.932,547,1.932,579,2.605,583,2.605,657,1.422,666,3.89,672,4.817,673,2.318,723,3.754,768,6.079,769,2.605,772,4.402,777,2.605,780,2.605,783,5.482,794,4.295,799,4.402,821,5.228,824,2.605,828,2.605,834,5.106,836,4.402,876,2.605,879,3.754,901,4.402,902,4.402,903,2.605,904,2.605,919,2.605,927,2.318,930,2.318,932,2.318,935,2.605,938,2.605,942,2.318,998,2.605,1013,3.341,1041,1.369,1077,2.104,1188,1.62,1204,2.318,1242,1.168,1248,0.853,1254,1.369,1508,4.402,1520,3.754,1536,3.754,1577,3.041,1578,4.382,1579,3.041,1580,5.96,1581,3.041,1582,3.041,1583,3.041,1584,6.55,1585,3.041,1586,3.041,1587,3.041,1588,5.623,1589,3.041,1590,3.041,1591,3.041,1592,3.041,1593,4.382,1594,4.382,1595,3.041,1596,4.382,1597,3.041,1598,3.041,1599,3.041,1600,3.041,1601,6.399,1602,3.041,1603,5.138,1604,3.041,1605,5.623,1606,3.041,1607,3.041,1608,3.041,1609,3.041,1610,3.041,1611,3.041,1612,4.382,1613,4.382,1614,3.041,1615,5.623,1616,3.041,1617,3.041,1618,6.773,1619,5.138,1620,3.041,1621,4.382,1622,5.138,1623,3.041,1624,3.041,1625,4.382,1626,3.041,1627,3.041,1628,3.041,1629,3.041,1630,3.041,1631,3.041,1632,4.382,1633,5.138,1634,4.382,1635,3.041,1636,3.041,1637,4.382,1638,4.382,1639,4.382,1640,3.041,1641,4.382,1642,3.041,1643,3.041,1644,5.138,1645,3.041,1646,3.041,1647,4.382,1648,3.041,1649,3.041,1650,4.382,1651,3.041,1652,3.041,1653,3.041,1654,4.382,1655,3.041,1656,3.041,1657,3.041,1658,5.138,1659,4.382,1660,2.318,1661,3.041,1662,3.041,1663,3.041,1664,3.041,1665,3.041,1666,3.041,1667,3.041,1668,3.041,1669,3.041,1670,4.382,1671,5.623,1672,3.041,1673,3.041,1674,3.041,1675,4.382,1676,3.041,1677,5.96,1678,3.041,1679,3.041,1680,3.041,1681,3.041,1682,3.041,1683,3.041,1684,3.041,1685,6.208,1686,4.382,1687,3.041,1688,3.041,1689,3.041,1690,3.041,1691,3.041,1692,3.041,1693,3.041,1694,5.138,1695,3.041,1696,3.041,1697,4.382,1698,3.041,1699,3.041,1700,3.041,1701,3.041,1702,3.041,1703,3.041,1704,3.041,1705,4.382,1706,3.041,1707,3.041,1708,3.041,1709,3.041,1710,3.041,1711,3.041,1712,4.382,1713,4.382,1714,3.041,1715,3.041]],["title/modules.html",[2,2.389]],["body/modules.html",[1,3.105,2,2.73,8,0.017,53,0.017,54,0.017,189,3.916,194,3.598,195,3.598,196,3.598,201,5.551,202,3.916,1716,7.281,1717,7.281,1718,7.369,1719,5.661,1720,5.661]],["title/overview.html",[1721,4.243]],["body/overview.html",[1,3.921,2,2.128,3,2.9,4,3.781,5,3.781,6,3.781,7,2.567,8,0.02,9,3.325,10,2.421,11,2.421,53,0.015,54,0.015,56,3.026,57,2.266,134,2.128,169,2.86,171,2.86,174,3.026,177,2.86,179,3.026,181,2.86,183,2.004,184,2.86,186,2.524,189,5.12,190,3.781,191,3.781,192,3.781,193,3.781,194,4.314,195,4.753,196,4.788,234,2.421,318,3.781,319,3.781,320,2.265,547,2.805,565,3.781,567,3.781,568,3.781,636,2.805,652,3.198,927,3.364,930,3.364,932,3.364,1009,1.117,1489,3.781,1490,3.781,1491,3.781,1493,3.781,1721,3.781,1722,4.413]],["title/miscellaneous/variables.html",[1561,2.087,1660,3.321]],["body/miscellaneous/variables.html",[8,0.02,15,3.801,16,4.647,22,3.801,24,3.801,26,4.271,31,4.271,37,4.271,39,4.271,41,3.801,43,4.271,45,4.271,48,3.589,53,0.016,54,0.016,73,0.309,88,0.483,91,0.547,98,1.198,103,1.091,104,1.091,123,2.217,124,2.264,128,3.169,263,0.945,271,2.769,754,4.647,757,4.647,862,4.185,1108,4.647,1222,4.647,1515,4.271,1516,4.271,1517,5.223,1522,3.801,1526,5.223,1527,5.223,1528,4.271,1529,5.877,1530,4.271,1561,3.449,1563,5.223,1660,3.801,1723,4.986,1724,4.986,1725,4.986,1726,4.986,1727,4.986,1728,6.096,1729,6.096,1730,6.096,1731,4.986,1732,4.986]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":360,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["1.0.14",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":942,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"index.html":{}}}],["100",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["100).tofixed(0).tostring",{"_index":865,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["100,0.7",{"_index":1003,"title":{},"body":{"injectables/ImageService.html":{}}}],["10000",{"_index":400,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["11",{"_index":1035,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["12.2.0",{"_index":1536,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12.2.9",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["145px",{"_index":1106,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["16px",{"_index":582,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["19px",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["1].mcols",{"_index":551,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["1].mheight",{"_index":553,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["2",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1722,"title":{},"body":{"overview.html":{}}}],["200",{"_index":1198,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["24px",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["2px",{"_index":1098,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["3",{"_index":545,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["3.4.0",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["3.7.2",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["3px",{"_index":1095,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["4",{"_index":547,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{},"index.html":{},"overview.html":{}}}],["41vh",{"_index":523,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["4px",{"_index":1111,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["5",{"_index":919,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["50",{"_index":520,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/Tile.html":{}}}],["5000",{"_index":773,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["5px",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":927,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{},"overview.html":{}}}],["6.4.0",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["6.5",{"_index":1707,"title":{},"body":{"index.html":{}}}],["6.6.0",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["650px",{"_index":1161,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["7",{"_index":930,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{},"overview.html":{}}}],["8",{"_index":932,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{},"overview.html":{}}}],["82vh",{"_index":503,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["9",{"_index":935,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["90px",{"_index":411,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["_cachedimages",{"_index":944,"title":{},"body":{"injectables/ImageService.html":{}}}],["_cachedseries",{"_index":238,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["_cachedthumbnailimages",{"_index":945,"title":{},"body":{"injectables/ImageService.html":{}}}],["_cacheurls",{"_index":239,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["_data",{"_index":867,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["_data',data.data.url",{"_index":870,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["_queryurl",{"_index":693,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["_stop",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["aaaaa",{"_index":1034,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["abnormal",{"_index":805,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["above",{"_index":1684,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":581,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["accessors",{"_index":248,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"components/ThumbItemComponent.html":{}}}],["action",{"_index":798,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["action(setactivesplit",{"_index":1455,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setcategorylist",{"_index":1416,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setcurrentcategory",{"_index":1413,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setcurrentsplitoperation",{"_index":1451,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setfocusedsplit",{"_index":1419,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setimageurls",{"_index":1405,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setisimageloaded",{"_index":1398,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setisseriesloaded",{"_index":1402,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setselectedimagebyid",{"_index":1422,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setselectedimagebyurl",{"_index":1426,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setselectedseriesbyid",{"_index":1442,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setselectedsplitwindowid",{"_index":1445,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setseriesurls",{"_index":1409,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setsplitaction",{"_index":1439,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setsplitmode",{"_index":1429,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setsplitstate",{"_index":1432,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(setwebworkerworkingstatus",{"_index":1448,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["action(statusaction",{"_index":1392,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["activated",{"_index":465,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["active",{"_index":620,"title":{},"body":{"components/GridTemplateComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["activesplit",{"_index":420,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["add",{"_index":1246,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["add(ctx",{"_index":1393,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["addclass",{"_index":428,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["additional",{"_index":814,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["additionally",{"_index":822,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["advance",{"_index":1598,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":639,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["aims",{"_index":1590,"title":{},"body":{"index.html":{}}}],["align",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":780,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["angular",{"_index":1580,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/scrolling",{"_index":42,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["angular/common",{"_index":30,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["angular/compiler",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":25,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":32,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/material/icon",{"_index":44,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/material/menu",{"_index":40,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/material/progress",{"_index":27,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/material/radio",{"_index":23,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":38,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/material/tooltip",{"_index":46,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["angular/platform",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angularmaterials",{"_index":1,"title":{"modules/AngularMaterials.html":{}},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"modules.html":{},"overview.html":{}}}],["animal",{"_index":658,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"interfaces/StatusStateModel.html":{}}}],["another",{"_index":1622,"title":{},"body":{"index.html":{}}}],["app",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["app.component",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["app/carousel/carousel",{"_index":1243,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["app/thumbnail/series",{"_index":1244,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["app/utils/xmlhttpcomm",{"_index":1223,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["appcomponent",{"_index":56,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appgridtemplate",{"_index":628,"title":{},"body":{"directives/GridTemplateDirective.html":{}}}],["appgridtemplate]'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["applied",{"_index":1588,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1586,"title":{},"body":{"index.html":{}}}],["applying",{"_index":1619,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":189,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":202,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}}}],["arrow",{"_index":801,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["arrowleft",{"_index":709,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["arrowright",{"_index":707,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["assets/icon_split/${id}_black.svg",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icon_split/${id}_white.svg",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/json",{"_index":1152,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["assets/json/${this.category}.json",{"_index":734,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["assets/json/animal.json",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["assigned",{"_index":1656,"title":{},"body":{"index.html":{}}}],["assumed",{"_index":387,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["async",{"_index":757,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SeriesWorker.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1720,"title":{},"body":{"modules.html":{}}}],["await",{"_index":754,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SeriesWorker.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":1230,"title":{},"body":{"classes/SeriesWorker.html":{},"dependencies.html":{}}}],["axios.get(url",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["axioscommdata",{"_index":1517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baby",{"_index":660,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["backend",{"_index":1604,"title":{},"body":{"index.html":{}}}],["background",{"_index":1669,"title":{},"body":{"index.html":{}}}],["bar",{"_index":28,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{}}}],["based",{"_index":778,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["bbbbb",{"_index":1036,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["before",{"_index":813,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["being",{"_index":876,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["below",{"_index":386,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["blob",{"_index":271,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"interfaces/StatusStateModel.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":1100,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["body",{"_index":852,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["boolean",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1049,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["bordercolor",{"_index":1112,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["borderstyle",{"_index":1461,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["borrow",{"_index":779,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["bottom",{"_index":578,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["browse",{"_index":1718,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["bundle",{"_index":874,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["button",{"_index":802,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["bworker",{"_index":1291,"title":{},"body":{"injectables/SplitService.html":{}}}],["cache",{"_index":1188,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"index.html":{}}}],["cached",{"_index":777,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["cachedimages",{"_index":950,"title":{},"body":{"injectables/ImageService.html":{}}}],["cachedimages(data",{"_index":988,"title":{},"body":{"injectables/ImageService.html":{}}}],["cachedinstance",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cachedseries",{"_index":249,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["cachedthumbnailimages",{"_index":951,"title":{},"body":{"injectables/ImageService.html":{}}}],["cacheseriesservice",{"_index":233,"title":{"injectables/CacheSeriesService.html":{}},"body":{"injectables/CacheSeriesService.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["caching",{"_index":834,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["call",{"_index":555,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["carousel",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["carousel.service",{"_index":322,"title":{},"body":{"modules/CarouselModule.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["carousel/carousel",{"_index":34,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"modules/GridModule.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["carousel/carousel.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["carousel/carousel.service",{"_index":375,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["carousel/image.service",{"_index":376,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["carouselmaincomponent",{"_index":7,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["carouselmodule",{"_index":194,"title":{"modules/CarouselModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["carouselservice",{"_index":320,"title":{"injectables/CarouselService.html":{}},"body":{"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{},"overview.html":{}}}],["carried",{"_index":1639,"title":{},"body":{"index.html":{}}}],["case",{"_index":796,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["cat",{"_index":260,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{}}}],["cat)[0",{"_index":293,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["categories",{"_index":1593,"title":{},"body":{"index.html":{}}}],["category",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["category',data.category",{"_index":884,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["category:string",{"_index":1255,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["category_list",{"_index":240,"title":{},"body":{"injectables/CacheSeriesService.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{}}}],["category_list:['animal",{"_index":1352,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["categoryidx",{"_index":695,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["cdk",{"_index":404,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["cdkvirtualscrollviewport",{"_index":384,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["cdr",{"_index":431,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["center",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":776,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["changedetection",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["changedetectionstrategy",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["changedetectorref",{"_index":370,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["changes",{"_index":1077,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{},"index.html":{}}}],["changes.originalimage",{"_index":1479,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["changes.originalimage.currentvalue",{"_index":1480,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["changes.originalimage.currentvalue.blob",{"_index":1481,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["changes.selectedtemplate.currentvalue",{"_index":1093,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["changes.seriesimage",{"_index":1137,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["changes.seriesimage.currentvalue",{"_index":1138,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["changing",{"_index":1629,"title":{},"body":{"index.html":{}}}],["check",{"_index":671,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["checkandcacheimage",{"_index":946,"title":{},"body":{"injectables/ImageService.html":{}}}],["checkandcacheimage(data",{"_index":953,"title":{},"body":{"injectables/ImageService.html":{}}}],["checkandcacheseries",{"_index":241,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["checkandcacheseries(data",{"_index":254,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["checked",{"_index":1691,"title":{},"body":{"index.html":{}}}],["checkifadditionalloading(val",{"_index":833,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["checkifimagecached",{"_index":1523,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["checkifimagecached(instances",{"_index":1565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cidx",{"_index":983,"title":{},"body":{"injectables/ImageService.html":{}}}],["class",{"_index":52,"title":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["class:'selected_item",{"_index":459,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["classes",{"_index":1009,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"overview.html":{}}}],["cli",{"_index":1581,"title":{},"body":{"index.html":{}}}],["click",{"_index":1061,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["clicked",{"_index":800,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["clicking",{"_index":466,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["clinking",{"_index":716,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["cluster_angularmaterials",{"_index":4,"title":{},"body":{"modules/AngularMaterials.html":{},"overview.html":{}}}],["cluster_angularmaterials_declarations",{"_index":5,"title":{},"body":{"modules/AngularMaterials.html":{},"overview.html":{}}}],["cluster_angularmaterials_exports",{"_index":6,"title":{},"body":{"modules/AngularMaterials.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_carouselmodule",{"_index":318,"title":{},"body":{"modules/CarouselModule.html":{},"overview.html":{}}}],["cluster_carouselmodule_providers",{"_index":319,"title":{},"body":{"modules/CarouselModule.html":{},"overview.html":{}}}],["cluster_gridmodule",{"_index":565,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_declarations",{"_index":568,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_exports",{"_index":567,"title":{},"body":{"modules/GridModule.html":{},"overview.html":{}}}],["cluster_gridmodule_imports",{"_index":566,"title":{},"body":{"modules/GridModule.html":{}}}],["cluster_thumbnailmodule",{"_index":1489,"title":{},"body":{"modules/ThumbnailModule.html":{},"overview.html":{}}}],["cluster_thumbnailmodule_declarations",{"_index":1490,"title":{},"body":{"modules/ThumbnailModule.html":{},"overview.html":{}}}],["cluster_thumbnailmodule_exports",{"_index":1493,"title":{},"body":{"modules/ThumbnailModule.html":{},"overview.html":{}}}],["cluster_thumbnailmodule_imports",{"_index":1492,"title":{},"body":{"modules/ThumbnailModule.html":{}}}],["cluster_thumbnailmodule_providers",{"_index":1491,"title":{},"body":{"modules/ThumbnailModule.html":{},"overview.html":{}}}],["color",{"_index":1475,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["color.directive",{"_index":574,"title":{},"body":{"modules/GridModule.html":{}}}],["color.directive.ts",{"_index":1047,"title":{},"body":{"directives/SelectColorDirective.html":{},"coverage.html":{}}}],["color.directive.ts:10",{"_index":1068,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:11",{"_index":1064,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:13",{"_index":1079,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:16",{"_index":1076,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:25",{"_index":1069,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:26",{"_index":1070,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:27",{"_index":1073,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:32",{"_index":1071,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:36",{"_index":1072,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:41",{"_index":1078,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:8",{"_index":1065,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["color.directive.ts:9",{"_index":1066,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["cols",{"_index":515,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["column",{"_index":1162,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["combinelatest",{"_index":378,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["combines",{"_index":1585,"title":{},"body":{"index.html":{}}}],["comes",{"_index":896,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["commonmodule",{"_index":29,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["compensate",{"_index":1616,"title":{},"body":{"index.html":{}}}],["completecachedimage",{"_index":868,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["completed",{"_index":1665,"title":{},"body":{"index.html":{}}}],["completing",{"_index":872,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["component",{"_index":55,"title":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["components",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"overview.html":{}}}],["concatmap",{"_index":1149,"title":{},"body":{"injectables/SeriesItemService.html":{},"classes/SeriesWorker.html":{}}}],["concurrently",{"_index":1640,"title":{},"body":{"index.html":{}}}],["consists",{"_index":1649,"title":{},"body":{"index.html":{}}}],["console.error(error",{"_index":1217,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["console.log",{"_index":361,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["console.log('changes",{"_index":1131,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["console.log('this.currentimages",{"_index":443,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["console.log('this.originalimage",{"_index":1472,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["console.log('this.selectedimageid",{"_index":1478,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["console.log('this.worker[this.splitidx",{"_index":860,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["console.timeend('cccc",{"_index":989,"title":{},"body":{"injectables/ImageService.html":{}}}],["const",{"_index":47,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["constructor(carouselservice",{"_index":593,"title":{},"body":{"components/GridTemplateComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["constructor(cdr",{"_index":1116,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["constructor(http",{"_index":250,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{}}}],["constructor(imageservice",{"_index":329,"title":{},"body":{"injectables/CarouselService.html":{}}}],["constructor(payload",{"_index":1239,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["constructor(private",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"components/GridComponent.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"interfaces/Tile.html":{}}}],["constructor(public",{"_index":635,"title":{},"body":{"directives/GridTemplateDirective.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["constructor(store",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{}}}],["constructor(template",{"_index":631,"title":{},"body":{"directives/GridTemplateDirective.html":{}}}],["contains",{"_index":388,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["content",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["continuing",{"_index":1698,"title":{},"body":{"index.html":{}}}],["continuously",{"_index":829,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["control",{"_index":1673,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1496,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crawling",{"_index":1600,"title":{},"body":{"index.html":{}}}],["create",{"_index":1597,"title":{},"body":{"index.html":{}}}],["ct",{"_index":937,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["ctx.getstate",{"_index":1395,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["ctx.setstate(statemodel",{"_index":1397,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["current",{"_index":462,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbnailListComponent.html":{}}}],["currentcategory",{"_index":422,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["currentimageindex",{"_index":1292,"title":{},"body":{"injectables/SplitService.html":{}}}],["currentimageindex:any",{"_index":1306,"title":{},"body":{"injectables/SplitService.html":{}}}],["currentimages",{"_index":430,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["currentseries",{"_index":1141,"title":{},"body":{"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["currentsplitoperation",{"_index":1341,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["customize",{"_index":1642,"title":{},"body":{"index.html":{}}}],["customvirtualscrollstrategy",{"_index":363,"title":{"injectables/CustomVirtualScrollStrategy.html":{}},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["dat",{"_index":1156,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["dat.data[0].url",{"_index":1157,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["data",{"_index":257,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["data.blob",{"_index":887,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["data.blob.size",{"_index":883,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["data.blob.type",{"_index":882,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["data.category",{"_index":985,"title":{},"body":{"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["data.data.imageid",{"_index":864,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["data.data.url",{"_index":869,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["data.imageid",{"_index":987,"title":{},"body":{"injectables/ImageService.html":{}}}],["dataurl",{"_index":1574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decides",{"_index":1661,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":17,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["declarations:[carouselmaincomponent",{"_index":49,"title":{},"body":{"modules/AngularMaterials.html":{}}}],["decorators",{"_index":276,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["default",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1351,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["defer",{"_index":642,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SeriesWorker.html":{}}}],["defined",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["delay",{"_index":1221,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["delayed",{"_index":1625,"title":{},"body":{"index.html":{}}}],["demo",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1606,"title":{},"body":{"index.html":{}}}],["details",{"_index":1655,"title":{},"body":{"index.html":{}}}],["developed",{"_index":1628,"title":{},"body":{"index.html":{}}}],["development",{"_index":1715,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1675,"title":{},"body":{"index.html":{}}}],["differ",{"_index":1610,"title":{},"body":{"index.html":{}}}],["difficult",{"_index":1641,"title":{},"body":{"index.html":{}}}],["direction",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["directive",{"_index":164,"title":{"directives/GridTemplateDirective.html":{},"directives/SelectColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"overview.html":{}}}],["directives/grid",{"_index":570,"title":{},"body":{"modules/GridModule.html":{},"components/GridTemplateComponent.html":{}}}],["directives/select",{"_index":573,"title":{},"body":{"modules/GridModule.html":{}}}],["display",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["displayed",{"_index":783,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["displayfirstimage",{"_index":354,"title":{},"body":{"injectables/CarouselService.html":{}}}],["displaying",{"_index":1633,"title":{},"body":{"index.html":{}}}],["displays",{"_index":1695,"title":{},"body":{"index.html":{}}}],["displaysplitwindowimage(image",{"_index":789,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["displaythefirstimage",{"_index":556,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["document.getelementbyid(id",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["download",{"_index":851,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["downscaleimage",{"_index":979,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["downscaleimage(dataurl",{"_index":1570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downscaleimage(tdata.blob",{"_index":1001,"title":{},"body":{"injectables/ImageService.html":{}}}],["dowork",{"_index":1012,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["draaged",{"_index":450,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["dragged",{"_index":446,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["draggedinx",{"_index":429,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["draw",{"_index":1664,"title":{},"body":{"index.html":{}}}],["drawing",{"_index":1658,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":768,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["eidx",{"_index":732,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["el",{"_index":613,"title":{},"body":{"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{}}}],["element",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["element.getattribute('aria",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["element1",{"_index":518,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/SplitService.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{}}}],["element2",{"_index":521,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"injectables/SplitService.html":{},"interfaces/Tile.html":{}}}],["element2','element1",{"_index":924,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["element3",{"_index":524,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"injectables/SplitService.html":{},"interfaces/Tile.html":{}}}],["element3','element2",{"_index":928,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["element4",{"_index":526,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"injectables/SplitService.html":{},"interfaces/Tile.html":{}}}],["element4','element3",{"_index":929,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["elementid",{"_index":559,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["elementref",{"_index":640,"title":{},"body":{"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["elements",{"_index":1293,"title":{},"body":{"injectables/SplitService.html":{}}}],["emit",{"_index":905,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["empty",{"_index":643,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["enable",{"_index":1204,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"index.html":{}}}],["end",{"_index":903,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["environment",{"_index":1529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":310,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["error",{"_index":830,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["error(error",{"_index":832,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["ev",{"_index":499,"title":{},"body":{"components/GridComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["ev',ev",{"_index":560,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["ev.category",{"_index":473,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["ev.imageid",{"_index":471,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["even",{"_index":1626,"title":{},"body":{"index.html":{}}}],["event",{"_index":703,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["event.key",{"_index":706,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["eventemitter",{"_index":1067,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["existing",{"_index":1643,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":51,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{}}}],["exports",{"_index":18,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppRoutingModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["extends",{"_index":367,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["extract",{"_index":835,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["fab",{"_index":577,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["false",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"coverage.html":{},"index.html":{}}}],["file.then",{"_index":1004,"title":{},"body":{"injectables/ImageService.html":{}}}],["filereader",{"_index":308,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["fill",{"_index":1110,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["filter",{"_index":649,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{}}}],["filter((obj",{"_index":1030,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["filter((val",{"_index":925,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{}}}],["filter(val",{"_index":442,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["finalize",{"_index":1017,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["finished",{"_index":902,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["first",{"_index":794,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"index.html":{}}}],["fit",{"_index":1109,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["fixedsizevirtualscrollstrategy",{"_index":368,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["flex",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["focus",{"_index":793,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["focused",{"_index":1251,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["focusedsplit",{"_index":587,"title":{},"body":{"components/GridTemplateComponent.html":{},"interfaces/StatusStateModel.html":{}}}],["focusedsplitidx",{"_index":688,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["focusing",{"_index":1203,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["forest",{"_index":661,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["form.below",{"_index":1681,"title":{},"body":{"index.html":{}}}],["format",{"_index":1595,"title":{},"body":{"index.html":{}}}],["from(arr).pipe",{"_index":1228,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["from(m.urls).pipe",{"_index":1029,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["from(objlist).pipe",{"_index":1037,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["from(re).pipe",{"_index":1038,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["fromworker",{"_index":656,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["function",{"_index":1520,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functions",{"_index":1562,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":1579,"title":{},"body":{"index.html":{}}}],["getactivesplit(state",{"_index":1390,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getborderstyle",{"_index":1470,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["getcachedimages",{"_index":973,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcachedseries",{"_index":278,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getcachedseriesbycat",{"_index":242,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getcachedseriesbycat(cat",{"_index":258,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getcachedseriesbyurl",{"_index":243,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getcachedseriesbyurl(url",{"_index":261,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getcachedthumbnailimages",{"_index":977,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcacheimage",{"_index":947,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcacheimage(cat",{"_index":955,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcacheurls",{"_index":244,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["getcacheurlsbycategory",{"_index":948,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcacheurlsbycategory(cat",{"_index":958,"title":{},"body":{"injectables/ImageService.html":{}}}],["getcarouselimage",{"_index":1524,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcarouselimage(__namedparameters",{"_index":1567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcategorylist(state",{"_index":1368,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getcurrentcategory(state",{"_index":1366,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getcurrentsplitoperation",{"_index":690,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["getcurrentsplitoperation(state",{"_index":1388,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getfocusedsplit(state",{"_index":1370,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getimage",{"_index":1521,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getimage(dataurl",{"_index":1575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getimageurls",{"_index":418,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["getimageurls(state",{"_index":1362,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getisimageloaded",{"_index":675,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["getisimageloaded(state",{"_index":1358,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getisseriesloaded(state",{"_index":1360,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getnextimage",{"_index":325,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["getnextimage(cat",{"_index":333,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getprevimage",{"_index":326,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["getprevimage(cat",{"_index":335,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getselectedimagebyid",{"_index":327,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["getselectedimagebyid(carousel",{"_index":351,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getselectedimagebyid(cat",{"_index":337,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getselectedimagebyid(state",{"_index":1372,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getselectedimagebyurl",{"_index":328,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getselectedimagebyurl(state",{"_index":1374,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getselectedimagebyurl(url",{"_index":339,"title":{},"body":{"injectables/CarouselService.html":{}}}],["getselectedseriesbyid",{"_index":677,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["getselectedseriesbyid(state",{"_index":1382,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getselectedsplitwindowid(state",{"_index":1384,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getseriesobject",{"_index":1142,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["getseriesurls",{"_index":683,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["getseriesurls(state",{"_index":1364,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getsplitaction(state",{"_index":1380,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getsplitmode(state",{"_index":1376,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getsplitstate",{"_index":679,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["getsplitstate(state",{"_index":1378,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().currentsplitoperation",{"_index":1453,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().imageurls",{"_index":1407,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().isimageloaded",{"_index":1400,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().selectedimageid",{"_index":1424,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().seriesurls",{"_index":1411,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate().splitstate",{"_index":1434,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["getstate(state",{"_index":1357,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["gettemplate",{"_index":590,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["gettemplate(name",{"_index":595,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["getting",{"_index":1576,"title":{"index.html":{}},"body":{}}],["gettotalimagelist",{"_index":806,"title":{},"body":{"interfaces/ImageModel.html":{},"injectables/ImageService.html":{}}}],["gettotalimagelist(url",{"_index":960,"title":{},"body":{"injectables/ImageService.html":{}}}],["gettotalserieslist",{"_index":245,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["gettotalserieslist(url",{"_index":265,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["getwebworkerworkingstatus",{"_index":681,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["getwebworkerworkingstatus(state",{"_index":1386,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["global",{"_index":1659,"title":{},"body":{"index.html":{}}}],["google",{"_index":1602,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1719,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1099,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["grid",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["grid'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["grid.component",{"_index":572,"title":{},"body":{"modules/GridModule.html":{}}}],["grid/grid.module",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["grid/split.service",{"_index":344,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["gridcomponent",{"_index":169,"title":{"components/GridComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{},"overview.html":{}}}],["gridcontainer",{"_index":540,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["gridmodule",{"_index":195,"title":{"modules/GridModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GridModule.html":{},"modules.html":{},"overview.html":{}}}],["gridtemplate",{"_index":480,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["gridtemplatecomponent",{"_index":171,"title":{"components/GridTemplateComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{},"overview.html":{}}}],["gridtemplatedirective",{"_index":184,"title":{"directives/GridTemplateDirective.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["group",{"_index":1601,"title":{},"body":{"index.html":{}}}],["handlekey(event",{"_index":704,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["happiness",{"_index":662,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["height",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["height:100px",{"_index":1107,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["height:60px",{"_index":1460,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["horizontal",{"_index":1159,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["hostbinding",{"_index":1085,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostbinding('style.border",{"_index":1083,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostbinding('style.zindex",{"_index":1084,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostbindings",{"_index":1057,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostlistener",{"_index":641,"title":{},"body":{"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{}}}],["hostlistener('click",{"_index":1080,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostlistener('mouseleave",{"_index":1081,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostlistener('mouseover",{"_index":1082,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["hostlistener('window:keydown",{"_index":702,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["hostlisteners",{"_index":1060,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["house",{"_index":659,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["http",{"_index":253,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["httpclient",{"_index":251,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["httpclientmodule",{"_index":323,"title":{},"body":{"modules/CarouselModule.html":{}}}],["id",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["identifier",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1692,"title":{},"body":{"index.html":{}}}],["idx",{"_index":288,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["idx:number",{"_index":1249,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["if(this.worker[this.splitidx",{"_index":762,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["ignore",{"_index":296,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["image",{"_index":349,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["image.idx",{"_index":990,"title":{},"body":{"injectables/ImageService.html":{}}}],["image.imageid",{"_index":460,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["image.service",{"_index":342,"title":{},"body":{"injectables/CarouselService.html":{},"interfaces/ImageModel.html":{}}}],["image.subscribe((obj",{"_index":886,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["image.ts",{"_index":1519,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["image/jpeg",{"_index":1002,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagecount",{"_index":696,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["imaged",{"_index":1247,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["imageid",{"_index":350,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{}}}],["imagemodel",{"_index":345,"title":{"interfaces/ImageModel.html":{}},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["images",{"_index":821,"title":{},"body":{"interfaces/ImageModel.html":{},"dependencies.html":{},"index.html":{}}}],["imageservice",{"_index":330,"title":{"injectables/ImageService.html":{}},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["imagetype",{"_index":1571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["imageurls",{"_index":1342,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["img",{"_index":720,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["immediately",{"_index":772,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["implement",{"_index":1591,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":1634,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":1645,"title":{},"body":{"index.html":{}}}],["implements",{"_index":416,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{}}}],["import.meta.url",{"_index":844,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{}}}],["information",{"_index":1685,"title":{},"body":{"index.html":{}}}],["initial",{"_index":1206,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["injectable",{"_index":232,"title":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"injectables/SplitService.html":{}},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"injectables/SplitService.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["injectables",{"_index":234,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"injectables/SplitService.html":{},"overview.html":{}}}],["inline",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":371,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["input$.pipe",{"_index":1021,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["input('appgridtemplate",{"_index":634,"title":{},"body":{"directives/GridTemplateDirective.html":{}}}],["input('selectcolor",{"_index":1088,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["inputs",{"_index":630,"title":{},"body":{"directives/GridTemplateDirective.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["instances",{"_index":1566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":536,"title":{"interfaces/ImageModel.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{}},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["interfaces",{"_index":636,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{},"overview.html":{}}}],["isariaexpanded",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["isariaexpanded(id",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["isariaexpandedforcaret",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["isariaexpandedforcaret(id",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["isariaexpandedforcaret(id:string",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["isfinished",{"_index":909,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["isfinished$).pipe",{"_index":923,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["isfinishedrendering",{"_index":908,"title":{},"body":{"interfaces/ImageModel.html":{},"injectables/SplitService.html":{}}}],["isimageloaded",{"_index":1343,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["isseriesloaded",{"_index":1344,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["isstarted",{"_index":916,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["isstartedrendering",{"_index":906,"title":{},"body":{"interfaces/ImageModel.html":{},"injectables/SplitService.html":{}}}],["isthisurlcached",{"_index":246,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["isthisurlcached(url",{"_index":267,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["it's",{"_index":769,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["item",{"_index":464,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["item'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["item.component",{"_index":1495,"title":{},"body":{"modules/ThumbnailModule.html":{}}}],["item.component.ts",{"_index":1105,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:37",{"_index":1126,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:38",{"_index":1119,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:39",{"_index":1118,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["item.component.ts:40",{"_index":1120,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["item.component.ts:41",{"_index":1128,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:42",{"_index":1125,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:43",{"_index":1463,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.component.ts:44",{"_index":1124,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["item.component.ts:45",{"_index":1117,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["item.component.ts:47",{"_index":1462,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.component.ts:49",{"_index":1123,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:51",{"_index":1121,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:53",{"_index":1466,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.component.ts:55",{"_index":1464,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.component.ts:56",{"_index":1122,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["item.component.ts:60",{"_index":1471,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.component.ts:63",{"_index":1465,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["item.service",{"_index":655,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"modules/ThumbnailModule.html":{}}}],["item.service.ts",{"_index":1140,"title":{},"body":{"injectables/SeriesItemService.html":{},"coverage.html":{}}}],["item.service.ts:12",{"_index":1147,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item.service.ts:13",{"_index":1148,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item.service.ts:14",{"_index":1143,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item.service.ts:16",{"_index":1146,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item.service.ts:23",{"_index":1144,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item.service.ts:40",{"_index":1145,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["item/series",{"_index":654,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{}}}],["item/thumb",{"_index":1459,"title":{},"body":{"components/ThumbItemComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{}}}],["item_list",{"_index":425,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["items",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/StatusStateModel.html":{}}}],["itemsize",{"_index":401,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["itself",{"_index":1662,"title":{},"body":{"index.html":{}}}],["job",{"_index":824,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["jung",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["kept",{"_index":1652,"title":{},"body":{"index.html":{}}}],["key",{"_index":711,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["keyboard_arrow_left",{"_index":585,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["keyboard_arrow_right",{"_index":586,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["keyboardevent",{"_index":705,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["know",{"_index":911,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["labs/select",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{}}}],["last",{"_index":803,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["later",{"_index":1620,"title":{},"body":{"index.html":{}}}],["left",{"_index":579,"title":{},"body":{"components/GridTemplateComponent.html":{},"index.html":{}}}],["legend",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["length",{"_index":1027,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["less",{"_index":392,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["library",{"_index":1644,"title":{},"body":{"index.html":{}}}],["list",{"_index":33,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component",{"_index":285,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesItemComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{}}}],["list.component.ts",{"_index":366,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["list.component.ts:106",{"_index":1169,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:141",{"_index":1487,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["list.component.ts:143",{"_index":1171,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:152",{"_index":1484,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["list.component.ts:164",{"_index":1172,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:187",{"_index":1168,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:28",{"_index":369,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{}}}],["list.component.ts:78",{"_index":1483,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["list.component.ts:79",{"_index":1167,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:80",{"_index":1179,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:81",{"_index":1176,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:82",{"_index":1174,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:83",{"_index":1177,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:84",{"_index":1183,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:85",{"_index":1488,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["list.component.ts:86",{"_index":1181,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:87",{"_index":1182,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:88",{"_index":1173,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:89",{"_index":1175,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:90",{"_index":1178,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:91",{"_index":1180,"title":{},"body":{"components/SeriesListComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["list.component.ts:92",{"_index":1166,"title":{},"body":{"components/SeriesListComponent.html":{}}}],["list.component.ts:99",{"_index":1485,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["list/series",{"_index":284,"title":{},"body":{"injectables/CacheSeriesService.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{}}}],["list/thumbnail",{"_index":365,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{}}}],["literal",{"_index":274,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetSplitState.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{}}}],["load",{"_index":1614,"title":{},"body":{"index.html":{}}}],["loaded",{"_index":1248,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"index.html":{}}}],["loading",{"_index":672,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["loading.worker",{"_index":843,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["loading.worker.ts",{"_index":1011,"title":{},"body":{"classes/LoadingWorker.html":{},"coverage.html":{}}}],["loading.worker.ts:6",{"_index":1015,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["loadingworker",{"_index":1008,"title":{"classes/LoadingWorker.html":{}},"body":{"classes/LoadingWorker.html":{},"coverage.html":{}}}],["localstorage.clear",{"_index":1218,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["lot",{"_index":1613,"title":{},"body":{"index.html":{}}}],["love",{"_index":663,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["lr",{"_index":409,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["m.category",{"_index":1026,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["m.req",{"_index":1024,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["m.urls.filter((val:any",{"_index":1025,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["made",{"_index":1636,"title":{},"body":{"index.html":{}}}],["main",{"_index":666,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"index.html":{}}}],["main'},{'name",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["main.compoment",{"_index":352,"title":{},"body":{"injectables/CarouselService.html":{}}}],["main.component",{"_index":36,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"modules/GridModule.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["main.component.ts",{"_index":638,"title":{},"body":{"interfaces/ImageModel.html":{},"coverage.html":{}}}],["main/carousel",{"_index":35,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"modules/GridModule.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["maintain",{"_index":1672,"title":{},"body":{"index.html":{}}}],["makecachedimage(data",{"_index":881,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["makethefirstimage",{"_index":750,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["makingsplitwindow",{"_index":746,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["makingsplitwindowbygrid(eidx",{"_index":729,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["makingsplitwindowbyselectedseries(cidx",{"_index":743,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["management",{"_index":1711,"title":{},"body":{"index.html":{}}}],["map",{"_index":282,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"classes/SeriesWorker.html":{}}}],["margin",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":24,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":54,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1706,"title":{},"body":{"index.html":{}}}],["materials",{"_index":48,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["materials.ts",{"_index":16,"title":{},"body":{"modules/AngularMaterials.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":31,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":43,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":39,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":26,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":22,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":37,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":45,"title":{},"body":{"modules/AngularMaterials.html":{},"miscellaneous/variables.html":{}}}],["maxbufferpx",{"_index":403,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["mcols",{"_index":481,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["means",{"_index":875,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["memory",{"_index":396,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["merge",{"_index":379,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["mergemap",{"_index":1018,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["methods",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"injectables/SplitService.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["mheight",{"_index":482,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["middle",{"_index":1679,"title":{},"body":{"index.html":{}}}],["minbufferpx",{"_index":402,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["miscellaneous",{"_index":1561,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":407,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["module",{"_index":0,"title":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["module.ts",{"_index":1494,"title":{},"body":{"modules/ThumbnailModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"modules.html":{},"overview.html":{}}}],["mountain",{"_index":665,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["mouseleave",{"_index":1062,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["mouseover",{"_index":1063,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["move",{"_index":1195,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["ms",{"_index":1569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["msg",{"_index":850,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["mwidth",{"_index":514,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/functions.html":{}}}],["name).template",{"_index":623,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["naturally",{"_index":1699,"title":{},"body":{"index.html":{}}}],["need",{"_index":818,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["needed",{"_index":782,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["needs",{"_index":1646,"title":{},"body":{"index.html":{}}}],["new",{"_index":305,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["next",{"_index":879,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["nextimage",{"_index":856,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["ngafterviewinit",{"_index":855,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["ngmodule",{"_index":20,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["ngonchanges",{"_index":1051,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["ngonchanges(changes",{"_index":1074,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["ngondestroy",{"_index":476,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["ngoninit",{"_index":432,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["ngxs",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{},"index.html":{}}}],["ngxs/devtools",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{}}}],["ngxsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot([statusstate",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsselectsnapshotmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsselectsnapshotmodule.forroot",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsstoragepluginmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["nidx",{"_index":986,"title":{},"body":{"injectables/ImageService.html":{}}}],["nodule",{"_index":1194,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["non_selected_item",{"_index":1136,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["none_selected_item",{"_index":1133,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["nowrap",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["number",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":888,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{}}}],["obj.category",{"_index":1031,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["obj.url",{"_index":1039,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["object",{"_index":1108,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1000,"title":{},"body":{"injectables/ImageService.html":{}}}],["object{idx",{"_index":1033,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["obs.complete",{"_index":316,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["obs.error(err",{"_index":311,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["obs.next(reader.result",{"_index":314,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["observable",{"_index":272,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"injectables/SplitService.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{},"index.html":{}}}],["observable((obs",{"_index":306,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["of(empty).pipe",{"_index":921,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["of(m.req",{"_index":1028,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["of(this.splitservice.selectedelement).pipe(take(1",{"_index":742,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["of(val",{"_index":1209,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["of({req",{"_index":839,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["offset",{"_index":448,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["once",{"_index":1617,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":1048,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["onclick",{"_index":1052,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["onclickwindowsplit",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["onclickwindowsplit(no",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":372,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["one",{"_index":390,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["ongettemplate",{"_index":491,"title":{},"body":{"components/GridComponent.html":{}}}],["ongettemplate(name",{"_index":494,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["oninit",{"_index":373,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["onleftarrowbutton",{"_index":591,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["onleftarrowbutton(element",{"_index":599,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["onmouseleave",{"_index":1053,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["onmouseover",{"_index":1054,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["onrightarrowbutton",{"_index":592,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["onrightarrowbutton(element",{"_index":601,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["onselectitem",{"_index":1482,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["onselectitem(ev",{"_index":1486,"title":{},"body":{"components/ThumbnailListComponent.html":{}}}],["onselectitem(ev:imagemodel",{"_index":470,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["onselectseries",{"_index":456,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["onselectseries(ev",{"_index":1170,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["onselecttemplate",{"_index":355,"title":{},"body":{"injectables/CarouselService.html":{},"components/GridComponent.html":{}}}],["onselecttemplate(ev",{"_index":497,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["opened",{"_index":797,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["operates",{"_index":1694,"title":{},"body":{"index.html":{}}}],["operation",{"_index":1041,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"index.html":{}}}],["optional",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1632,"title":{},"body":{"index.html":{}}}],["oridata",{"_index":1224,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["oridata[idx].category",{"_index":1231,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["oridata[idx].url",{"_index":1232,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["oriented",{"_index":1712,"title":{},"body":{"index.html":{}}}],["originalimage",{"_index":698,"title":{},"body":{"interfaces/ImageModel.html":{},"components/ThumbItemComponent.html":{}}}],["os",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1086,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["outputs",{"_index":1055,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["overall",{"_index":1674,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1721,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1534,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1700,"title":{},"body":{"index.html":{}}}],["pages",{"_index":1702,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1654,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1690,"title":{},"body":{"index.html":{}}}],["patchstate({activesplit",{"_index":1457,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({category_list",{"_index":1418,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({currentcategory",{"_index":1415,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({currentsplitoperation",{"_index":1454,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({focusedsplit",{"_index":1421,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({imageurls",{"_index":1408,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({isimageloaded",{"_index":1401,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({isseriesloaded",{"_index":1404,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({selectedimageid",{"_index":1425,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({selectedimageurl",{"_index":1428,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({selectedseriesbyid",{"_index":1444,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({selectedsplitwindowid",{"_index":1447,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({seriesurls",{"_index":1412,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({splitaction",{"_index":1441,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({splitmode",{"_index":1431,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({splitstate",{"_index":1438,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["patchstate({webworkerworkingstatus",{"_index":1450,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["path",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1237,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["payload.category",{"_index":1436,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["payload.idx",{"_index":1435,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["performed",{"_index":1697,"title":{},"body":{"index.html":{}}}],["performing",{"_index":1589,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":389,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["plugin",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["points",{"_index":1657,"title":{},"body":{"index.html":{}}}],["position",{"_index":580,"title":{},"body":{"components/GridTemplateComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["possible",{"_index":1637,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":939,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["prev",{"_index":362,"title":{},"body":{"injectables/CarouselService.html":{}}}],["prevent",{"_index":1624,"title":{},"body":{"index.html":{}}}],["previmage",{"_index":857,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["previous",{"_index":901,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["previously",{"_index":1627,"title":{},"body":{"index.html":{}}}],["private",{"_index":237,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["process",{"_index":723,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["processing",{"_index":904,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["production",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1584,"title":{},"body":{"index.html":{}}}],["programming",{"_index":1709,"title":{},"body":{"index.html":{}}}],["progress",{"_index":697,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["project",{"_index":1578,"title":{},"body":{"index.html":{}}}],["promise",{"_index":774,"title":{},"body":{"interfaces/ImageModel.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":837,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["promise(resolve",{"_index":759,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["properties",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["protect",{"_index":804,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["provide",{"_index":414,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["providedin",{"_index":287,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"injectables/SplitService.html":{}}}],["providers",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/CarouselModule.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{}}}],["public",{"_index":629,"title":{},"body":{"directives/GridTemplateDirective.html":{},"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["quality",{"_index":1573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queryelement(el",{"_index":668,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["querylist",{"_index":608,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["queryurl",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["quickly",{"_index":1594,"title":{},"body":{"index.html":{}}}],["randomly",{"_index":1630,"title":{},"body":{"index.html":{}}}],["re",{"_index":1023,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["reactive",{"_index":1708,"title":{},"body":{"index.html":{}}}],["read",{"_index":538,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["reader",{"_index":307,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reader.onabort",{"_index":312,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reader.onerror",{"_index":309,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reader.onload",{"_index":313,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reader.onloadend",{"_index":315,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reader.readasdataurl(blob",{"_index":317,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["readfile",{"_index":247,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["readfile(blob",{"_index":269,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["reading",{"_index":1638,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":1238,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["ready",{"_index":877,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["real",{"_index":1596,"title":{},"body":{"index.html":{}}}],["received",{"_index":1688,"title":{},"body":{"index.html":{}}}],["receiving",{"_index":878,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["recognizes",{"_index":1687,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":1040,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["red",{"_index":1097,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/ThumbItemComponent.html":{}}}],["redux",{"_index":1710,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":1631,"title":{},"body":{"index.html":{}}}],["reject",{"_index":838,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["reject(error",{"_index":847,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["related",{"_index":1683,"title":{},"body":{"index.html":{}}}],["remained",{"_index":770,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["renderer2",{"_index":1087,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["rendering",{"_index":897,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["rendering$).pipe",{"_index":934,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["req",{"_index":1043,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["requestrenderingsplitwindow",{"_index":699,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["res",{"_index":991,"title":{},"body":{"injectables/ImageService.html":{},"classes/SeriesWorker.html":{}}}],["res.data",{"_index":1233,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["res.length",{"_index":817,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["res:any",{"_index":299,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["res['data",{"_index":300,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["res[0].image.blob",{"_index":994,"title":{},"body":{"injectables/ImageService.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"interfaces/ImageModel.html":{},"modules/ThumbnailModule.html":{},"overview.html":{}}}],["resetsplitwindowprocessing",{"_index":1295,"title":{},"body":{"injectables/SplitService.html":{}}}],["resolution",{"_index":1572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolve",{"_index":761,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["resolve(res",{"_index":846,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["responsetype",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rest",{"_index":1701,"title":{},"body":{"index.html":{}}}],["results",{"_index":53,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":995,"title":{},"body":{"injectables/ImageService.html":{}}}],["return",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"classes/SeriesWorker.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"interfaces/Tile.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SeriesWorker.html":{},"injectables/SplitService.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/GridTemplateComponent.html":{}}}],["rnumber",{"_index":1113,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["root",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"injectables/SplitService.html":{}}}],["root'},{'name",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["routermodule",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["rows",{"_index":516,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["runworker",{"_index":1016,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["runworker(loadingworker",{"_index":1045,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["runworker(seriesworker",{"_index":1234,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"injectables/SplitService.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":283,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["same",{"_index":1670,"title":{},"body":{"index.html":{}}}],["save",{"_index":998,"title":{},"body":{"injectables/ImageService.html":{},"index.html":{}}}],["savecacheimage(data",{"_index":890,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["saved",{"_index":1693,"title":{},"body":{"index.html":{}}}],["saving",{"_index":1668,"title":{},"body":{"index.html":{}}}],["scale",{"_index":981,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scraper",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["screen",{"_index":1677,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":405,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["scrollbar",{"_index":445,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["scrolling",{"_index":398,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["scrollingmodule",{"_index":41,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["sea','banana",{"_index":664,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["second",{"_index":1667,"title":{},"body":{"index.html":{}}}],["select",{"_index":377,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["select(statusstate.getactivesplit",{"_index":691,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["select(statusstate.getcurrentcategory",{"_index":421,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["select(statusstate.getcurrentsplitoperation",{"_index":689,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["select(statusstate.getfocusedsplit",{"_index":604,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["select(statusstate.getimageurls",{"_index":417,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["select(statusstate.getisimageloaded",{"_index":674,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["select(statusstate.getselectedimagebyid",{"_index":346,"title":{},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["select(statusstate.getselectedseriesbyid",{"_index":676,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["select(statusstate.getselectedsplitwindowid",{"_index":505,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["select(statusstate.getseriesurls",{"_index":682,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["select(statusstate.getsplitmode",{"_index":509,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["selectable",{"_index":1623,"title":{},"body":{"index.html":{}}}],["selectcolor",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["selectcolordirective",{"_index":186,"title":{"directives/SelectColorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selected",{"_index":463,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["selected_item",{"_index":474,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["selectedbtn",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedelement",{"_index":1294,"title":{},"body":{"injectables/SplitService.html":{}}}],["selectedimageid",{"_index":1345,"title":{},"body":{"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{}}}],["selectedimageurl",{"_index":1346,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["selectedseriesbyid",{"_index":1114,"title":{},"body":{"components/SeriesItemComponent.html":{},"interfaces/StatusStateModel.html":{}}}],["selectedsplit",{"_index":588,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["selectedsplitwindow",{"_index":700,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selectedsplitwindowid",{"_index":483,"title":{},"body":{"components/GridComponent.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{}}}],["selectedtemplate",{"_index":484,"title":{},"body":{"components/GridComponent.html":{},"directives/SelectColorDirective.html":{},"interfaces/Tile.html":{}}}],["selectedtemplate:string",{"_index":1090,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["selector",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["selects",{"_index":1621,"title":{},"body":{"index.html":{}}}],["selectsnapshot",{"_index":286,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["selectsnapshot(statusstate.getactivesplit",{"_index":419,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["selectsnapshot(statusstate.getcategorylist",{"_index":277,"title":{},"body":{"injectables/CacheSeriesService.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["selectsnapshot(statusstate.getcurrentcategory",{"_index":341,"title":{},"body":{"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/Tile.html":{}}}],["selectsnapshot(statusstate.getfocusedsplit",{"_index":687,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selectsnapshot(statusstate.getselectedimagebyid",{"_index":1467,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["selectsnapshot(statusstate.getselectedseriesbyid",{"_index":1127,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["selectsnapshot(statusstate.getsplitaction",{"_index":685,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selectsnapshot(statusstate.getsplitmode",{"_index":684,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selectsnapshot(statusstate.getsplitstate",{"_index":678,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selectsnapshot(statusstate.getwebworkerworkingstatus",{"_index":680,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["selecttemplate",{"_index":1056,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["selement",{"_index":589,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["send",{"_index":820,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["sent",{"_index":873,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["separate",{"_index":1603,"title":{},"body":{"index.html":{}}}],["separated",{"_index":1678,"title":{},"body":{"index.html":{}}}],["separately",{"_index":1680,"title":{},"body":{"index.html":{}}}],["seq",{"_index":1682,"title":{},"body":{"index.html":{}}}],["series",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"index.html":{}}}],["series.service",{"_index":534,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/Tile.html":{}}}],["series.service.ts",{"_index":236,"title":{},"body":{"injectables/CacheSeriesService.html":{},"coverage.html":{}}}],["series.service.ts:14",{"_index":275,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:19",{"_index":273,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:20",{"_index":252,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:23",{"_index":268,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:26",{"_index":259,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:30",{"_index":264,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:35",{"_index":279,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:38",{"_index":266,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:44",{"_index":262,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:48",{"_index":256,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.service.ts:51",{"_index":270,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series.subscribe((obj",{"_index":1213,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["series.url",{"_index":302,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["series_item",{"_index":724,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["seriesid",{"_index":1150,"title":{},"body":{"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{}}}],["seriesimage",{"_index":1115,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["seriesitemcomponent",{"_index":174,"title":{"components/SeriesItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"overview.html":{}}}],["seriesitemservice",{"_index":652,"title":{"injectables/SeriesItemService.html":{}},"body":{"interfaces/ImageModel.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"overview.html":{}}}],["serieslistcomponent",{"_index":177,"title":{"components/SeriesListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"overview.html":{}}}],["seriesmodel",{"_index":255,"title":{"interfaces/SeriesModel.html":{}},"body":{"injectables/CacheSeriesService.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["seriesservice",{"_index":1165,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["seriesurls",{"_index":1163,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{}}}],["seriesworker",{"_index":1164,"title":{"classes/SeriesWorker.html":{}},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"coverage.html":{}}}],["server",{"_index":1605,"title":{},"body":{"index.html":{}}}],["service",{"_index":1653,"title":{},"body":{"index.html":{}}}],["set",{"_index":667,"title":{},"body":{"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"components/ThumbItemComponent.html":{}}}],["setactivesplit",{"_index":1235,"title":{"classes/SetActiveSplit.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setactivesplit({patchstate,getstate",{"_index":1456,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setaddclass(v",{"_index":1468,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["setcachedimages(data",{"_index":975,"title":{},"body":{"injectables/ImageService.html":{}}}],["setcacheurl",{"_index":949,"title":{},"body":{"injectables/ImageService.html":{}}}],["setcacheurl(data",{"_index":965,"title":{},"body":{"injectables/ImageService.html":{}}}],["setcacheurl(data:any",{"_index":982,"title":{},"body":{"injectables/ImageService.html":{}}}],["setcategorylist",{"_index":1250,"title":{"classes/SetCategoryList.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setcategorylist({patchstate,getstate",{"_index":1417,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setcurrentcategory",{"_index":1184,"title":{"classes/SetCurrentCategory.html":{}},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setcurrentcategory('animal",{"_index":1189,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setcurrentcategory(ev.category",{"_index":1201,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setcurrentcategory({patchstate,getstate",{"_index":1414,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setcurrentsplitoperation",{"_index":645,"title":{"classes/SetCurrentSplitOperation.html":{}},"body":{"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setcurrentsplitoperation({element",{"_index":940,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["setcurrentsplitoperation({patchstate,getstate",{"_index":1452,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setfocusedsplit",{"_index":532,"title":{"classes/SetFocusedSplit.html":{}},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["setfocusedsplit(idx",{"_index":562,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/Tile.html":{}}}],["setfocusedsplit({patchstate,getstate",{"_index":1420,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setimageurls",{"_index":646,"title":{"classes/SetImageUrls.html":{}},"body":{"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setimageurls([data.url",{"_index":892,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["setimageurls({patchstate,getstate",{"_index":1406,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setisimageloaded",{"_index":647,"title":{"classes/SetIsImageLoaded.html":{}},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setisimageloaded({idx",{"_index":1205,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setisimageloaded({idx:0",{"_index":825,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["setisimageloaded({idx:data.imageid",{"_index":894,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["setisimageloaded({patchstate,getstate",{"_index":1399,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setisseriesloaded",{"_index":1185,"title":{"classes/SetIsSeriesLoaded.html":{}},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setisseriesloaded(true",{"_index":1215,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setisseriesloaded({patchstate,getstate",{"_index":1403,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setselectedimagebyid",{"_index":343,"title":{"classes/SetSelectedImageById.html":{}},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"coverage.html":{}}}],["setselectedimagebyid(ev",{"_index":472,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["setselectedimagebyid(image",{"_index":356,"title":{},"body":{"injectables/CarouselService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setselectedimagebyid({patchstate,getstate",{"_index":1423,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setselectedimagebyurl",{"_index":1252,"title":{"classes/SetSelectedImageByUrl.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setselectedimagebyurl({patchstate,getstate",{"_index":1427,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setselectedseriesbyid",{"_index":1186,"title":{"classes/SetSelectedSeriesById.html":{}},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setselectedseriesbyid(ev.seriesid",{"_index":1202,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setselectedseriesbyid({patchstate,getstate",{"_index":1443,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setselectedsplitwindow(carousel",{"_index":353,"title":{},"body":{"injectables/CarouselService.html":{}}}],["setselectedsplitwindowid",{"_index":648,"title":{"classes/SetSelectedSplitWindowId.html":{}},"body":{"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setselectedsplitwindowid('element1",{"_index":795,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["setselectedsplitwindowid({patchstate,getstate",{"_index":1446,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setseriesurls",{"_index":1187,"title":{"classes/SetSeriesUrls.html":{}},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setseriesurls([data.url",{"_index":1216,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setseriesurls({patchstate,getstate",{"_index":1410,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setsplitaction",{"_index":383,"title":{"classes/SetSplitAction.html":{}},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["setsplitaction(false",{"_index":475,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["setsplitaction(true",{"_index":554,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["setsplitaction({patchstate,getstate",{"_index":1440,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setsplitmode",{"_index":112,"title":{"classes/SetSplitMode.html":{}},"body":{"components/AppComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setsplitmode(no",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["setsplitmode({patchstate,getstate",{"_index":1430,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["setsplitstate",{"_index":1253,"title":{"classes/SetSplitState.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setsplitstate({patchstate,getstate",{"_index":1433,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["settimeout",{"_index":467,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["setting",{"_index":1200,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["setwebworkerworkingstatus",{"_index":1256,"title":{"classes/SetWebworkerWorkingStatus.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["setwebworkerworkingstatus({patchstate,getstate",{"_index":1449,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["shared/angular",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{}}}],["sharing",{"_index":395,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["show",{"_index":893,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["shuffled",{"_index":394,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["side",{"_index":1676,"title":{},"body":{"index.html":{}}}],["signal",{"_index":871,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["signalfinished",{"_index":758,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["significantly",{"_index":1611,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":1075,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["situation",{"_index":1608,"title":{},"body":{"index.html":{}}}],["skip",{"_index":531,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/Tile.html":{}}}],["skip(1",{"_index":726,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["sleep",{"_index":1525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sleep(ms",{"_index":1568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["smooth",{"_index":1197,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["smooth'),200",{"_index":469,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["snapshot",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"dependencies.html":{}}}],["solid",{"_index":1096,"title":{},"body":{"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["soon",{"_index":907,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["sort",{"_index":1635,"title":{},"body":{"index.html":{}}}],["sorting",{"_index":1704,"title":{},"body":{"index.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AngularMaterials.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheSeriesService.html":{},"modules/CarouselModule.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"interfaces/Tile.html":{}}}],["spectator",{"_index":1714,"title":{},"body":{"index.html":{}}}],["spectator211009",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["speed",{"_index":1609,"title":{},"body":{"index.html":{}}}],["split",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"index.html":{}}}],["split.service",{"_index":535,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/Tile.html":{}}}],["split1",{"_index":1353,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["split2",{"_index":1354,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["split3",{"_index":1355,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["split4",{"_index":1356,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["split_menu",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["splitaction",{"_index":686,"title":{},"body":{"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{}}}],["splitidx",{"_index":694,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["splitmode",{"_index":485,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/StatusStateModel.html":{},"interfaces/Tile.html":{}}}],["splitservice",{"_index":331,"title":{"injectables/SplitService.html":{}},"body":{"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["splitstate",{"_index":1347,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["splitting",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["splitwindowprocess1",{"_index":895,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["splitwindowprocess2",{"_index":931,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["splitwindowspectator211009",{"_index":1577,"title":{},"body":{"index.html":{}}}],["src/.../angular",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../axioscomm.ts",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../carousel",{"_index":1563,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../down",{"_index":1564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../xmlhttpcomm.ts",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/carousel/carousel",{"_index":637,"title":{},"body":{"interfaces/ImageModel.html":{},"coverage.html":{}}}],["src/app/carousel/carousel.module.ts",{"_index":321,"title":{},"body":{"modules/CarouselModule.html":{}}}],["src/app/carousel/carousel.service.ts",{"_index":324,"title":{},"body":{"injectables/CarouselService.html":{},"coverage.html":{}}}],["src/app/carousel/carousel.service.ts:15",{"_index":332,"title":{},"body":{"injectables/CarouselService.html":{}}}],["src/app/carousel/carousel.service.ts:21",{"_index":334,"title":{},"body":{"injectables/CarouselService.html":{}}}],["src/app/carousel/carousel.service.ts:43",{"_index":336,"title":{},"body":{"injectables/CarouselService.html":{}}}],["src/app/carousel/carousel.service.ts:59",{"_index":340,"title":{},"body":{"injectables/CarouselService.html":{}}}],["src/app/carousel/carousel.service.ts:62",{"_index":338,"title":{},"body":{"injectables/CarouselService.html":{}}}],["src/app/carousel/image.service.ts",{"_index":943,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{}}}],["src/app/carousel/image.service.ts:107",{"_index":964,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:119",{"_index":963,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:15",{"_index":971,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:16",{"_index":972,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:17",{"_index":969,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:22",{"_index":967,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:27",{"_index":968,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:32",{"_index":970,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:33",{"_index":952,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:36",{"_index":962,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:39",{"_index":966,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:48",{"_index":957,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:51",{"_index":959,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:55",{"_index":976,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:62",{"_index":974,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:65",{"_index":978,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:68",{"_index":961,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:79",{"_index":956,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/carousel/image.service.ts:90",{"_index":954,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/grid/directives/grid",{"_index":626,"title":{},"body":{"directives/GridTemplateDirective.html":{},"coverage.html":{}}}],["src/app/grid/directives/select",{"_index":1046,"title":{},"body":{"directives/SelectColorDirective.html":{},"coverage.html":{}}}],["src/app/grid/grid",{"_index":575,"title":{},"body":{"components/GridTemplateComponent.html":{},"coverage.html":{}}}],["src/app/grid/grid.component.ts",{"_index":479,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["src/app/grid/grid.component.ts:121",{"_index":495,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:124",{"_index":498,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:54",{"_index":528,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:55",{"_index":502,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:56",{"_index":504,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:57",{"_index":519,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:60",{"_index":522,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:64",{"_index":525,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:69",{"_index":527,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:75",{"_index":513,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:77",{"_index":508,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:79",{"_index":510,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:80",{"_index":506,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:81",{"_index":500,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:83",{"_index":492,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.component.ts:92",{"_index":493,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid/grid.module.ts",{"_index":569,"title":{},"body":{"modules/GridModule.html":{}}}],["src/app/grid/split.service.ts",{"_index":1290,"title":{},"body":{"injectables/SplitService.html":{},"coverage.html":{}}}],["src/app/grid/split.service.ts:10",{"_index":1300,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:11",{"_index":1305,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:12",{"_index":1299,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:14",{"_index":1301,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:15",{"_index":1302,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:16",{"_index":1303,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:17",{"_index":1296,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:21",{"_index":1297,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/grid/split.service.ts:8",{"_index":1298,"title":{},"body":{"injectables/SplitService.html":{}}}],["src/app/shared/angular",{"_index":15,"title":{},"body":{"modules/AngularMaterials.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/thumbnail/cache",{"_index":235,"title":{},"body":{"injectables/CacheSeriesService.html":{},"coverage.html":{}}}],["src/app/thumbnail/series",{"_index":1104,"title":{},"body":{"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"coverage.html":{}}}],["src/app/thumbnail/thumb",{"_index":1458,"title":{},"body":{"components/ThumbItemComponent.html":{},"coverage.html":{}}}],["src/app/thumbnail/thumbnail",{"_index":364,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{}}}],["src/app/utils/axioscomm.ts",{"_index":1516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/down",{"_index":1518,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/utils/xmlhttpcomm.ts",{"_index":1515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/workers/additional",{"_index":1010,"title":{},"body":{"classes/LoadingWorker.html":{},"coverage.html":{}}}],["src/assets/workers/carousel",{"_index":1522,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/assets/workers/series",{"_index":1219,"title":{},"body":{"classes/SeriesWorker.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/store/status/status.actions.ts",{"_index":1236,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"coverage.html":{}}}],["src/store/status/status.actions.ts:10",{"_index":1269,"title":{},"body":{"classes/SetIsImageLoaded.html":{}}}],["src/store/status/status.actions.ts:13",{"_index":1270,"title":{},"body":{"classes/SetIsSeriesLoaded.html":{}}}],["src/store/status/status.actions.ts:14",{"_index":1271,"title":{},"body":{"classes/SetIsSeriesLoaded.html":{}}}],["src/store/status/status.actions.ts:17",{"_index":1266,"title":{},"body":{"classes/SetImageUrls.html":{}}}],["src/store/status/status.actions.ts:18",{"_index":1267,"title":{},"body":{"classes/SetImageUrls.html":{}}}],["src/store/status/status.actions.ts:21",{"_index":1280,"title":{},"body":{"classes/SetSeriesUrls.html":{}}}],["src/store/status/status.actions.ts:22",{"_index":1281,"title":{},"body":{"classes/SetSeriesUrls.html":{}}}],["src/store/status/status.actions.ts:25",{"_index":1260,"title":{},"body":{"classes/SetCurrentCategory.html":{}}}],["src/store/status/status.actions.ts:26",{"_index":1261,"title":{},"body":{"classes/SetCurrentCategory.html":{}}}],["src/store/status/status.actions.ts:29",{"_index":1258,"title":{},"body":{"classes/SetCategoryList.html":{}}}],["src/store/status/status.actions.ts:30",{"_index":1259,"title":{},"body":{"classes/SetCategoryList.html":{}}}],["src/store/status/status.actions.ts:33",{"_index":1264,"title":{},"body":{"classes/SetFocusedSplit.html":{}}}],["src/store/status/status.actions.ts:34",{"_index":1265,"title":{},"body":{"classes/SetFocusedSplit.html":{}}}],["src/store/status/status.actions.ts:37",{"_index":1272,"title":{},"body":{"classes/SetSelectedImageById.html":{}}}],["src/store/status/status.actions.ts:38",{"_index":1273,"title":{},"body":{"classes/SetSelectedImageById.html":{}}}],["src/store/status/status.actions.ts:41",{"_index":1274,"title":{},"body":{"classes/SetSelectedImageByUrl.html":{}}}],["src/store/status/status.actions.ts:42",{"_index":1275,"title":{},"body":{"classes/SetSelectedImageByUrl.html":{}}}],["src/store/status/status.actions.ts:45",{"_index":1284,"title":{},"body":{"classes/SetSplitMode.html":{}}}],["src/store/status/status.actions.ts:46",{"_index":1285,"title":{},"body":{"classes/SetSplitMode.html":{}}}],["src/store/status/status.actions.ts:49",{"_index":1286,"title":{},"body":{"classes/SetSplitState.html":{}}}],["src/store/status/status.actions.ts:5",{"_index":1337,"title":{},"body":{"classes/StatusAction.html":{}}}],["src/store/status/status.actions.ts:50",{"_index":1287,"title":{},"body":{"classes/SetSplitState.html":{}}}],["src/store/status/status.actions.ts:53",{"_index":1282,"title":{},"body":{"classes/SetSplitAction.html":{}}}],["src/store/status/status.actions.ts:54",{"_index":1283,"title":{},"body":{"classes/SetSplitAction.html":{}}}],["src/store/status/status.actions.ts:57",{"_index":1276,"title":{},"body":{"classes/SetSelectedSeriesById.html":{}}}],["src/store/status/status.actions.ts:58",{"_index":1277,"title":{},"body":{"classes/SetSelectedSeriesById.html":{}}}],["src/store/status/status.actions.ts:6",{"_index":1338,"title":{},"body":{"classes/StatusAction.html":{}}}],["src/store/status/status.actions.ts:61",{"_index":1278,"title":{},"body":{"classes/SetSelectedSplitWindowId.html":{}}}],["src/store/status/status.actions.ts:62",{"_index":1279,"title":{},"body":{"classes/SetSelectedSplitWindowId.html":{}}}],["src/store/status/status.actions.ts:65",{"_index":1288,"title":{},"body":{"classes/SetWebworkerWorkingStatus.html":{}}}],["src/store/status/status.actions.ts:66",{"_index":1289,"title":{},"body":{"classes/SetWebworkerWorkingStatus.html":{}}}],["src/store/status/status.actions.ts:69",{"_index":1262,"title":{},"body":{"classes/SetCurrentSplitOperation.html":{}}}],["src/store/status/status.actions.ts:70",{"_index":1263,"title":{},"body":{"classes/SetCurrentSplitOperation.html":{}}}],["src/store/status/status.actions.ts:73",{"_index":1240,"title":{},"body":{"classes/SetActiveSplit.html":{}}}],["src/store/status/status.actions.ts:74",{"_index":1241,"title":{},"body":{"classes/SetActiveSplit.html":{}}}],["src/store/status/status.actions.ts:9",{"_index":1268,"title":{},"body":{"classes/SetIsImageLoaded.html":{}}}],["src/store/status/status.state.ts",{"_index":1340,"title":{},"body":{"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["start",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"index.html":{}}}],["started",{"_index":673,"title":{"index.html":{}},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["starts",{"_index":1647,"title":{},"body":{"index.html":{}}}],["state",{"_index":1254,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"index.html":{}}}],["state.activesplit",{"_index":1391,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.category_list",{"_index":1369,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.currentcategory",{"_index":1367,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.currentsplitoperation",{"_index":1389,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.focusedsplit",{"_index":1371,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.imageurls",{"_index":1363,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.isimageloaded",{"_index":1359,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.isseriesloaded",{"_index":1361,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.selectedimageid",{"_index":1373,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.selectedimageurl",{"_index":1375,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.selectedseriesbyid",{"_index":1383,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.selectedsplitwindowid",{"_index":1385,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.seriesurls",{"_index":1365,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.splitaction",{"_index":1381,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.splitmode",{"_index":1377,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.splitstate",{"_index":1379,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state.webworkerworkingstatus",{"_index":1387,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["state[idx",{"_index":1437,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["statecontext",{"_index":1349,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["statements",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["statemodel",{"_index":1394,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["statemodel.items",{"_index":1396,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["static",{"_index":424,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["status",{"_index":1242,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"index.html":{}}}],["status.actions",{"_index":1350,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["statusaction",{"_index":1245,"title":{"classes/StatusAction.html":{}},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["statusstate",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["statusstatemodel",{"_index":1339,"title":{"interfaces/StatusStateModel.html":{}},"body":{"interfaces/StatusStateModel.html":{},"coverage.html":{}}}],["stemplate",{"_index":1089,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["step",{"_index":1689,"title":{},"body":{"index.html":{}}}],["store",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"index.html":{}}}],["store/status/status.actions",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["store/status/status.state",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["stored",{"_index":1618,"title":{},"body":{"index.html":{}}}],["stores",{"_index":1599,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style.border",{"_index":1058,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["style.zindex",{"_index":1059,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["styles",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["styleurls",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":380,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["subscribe",{"_index":438,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["subscribe(([temp",{"_index":936,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["subscribe((data",{"_index":1212,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["subscribe((id",{"_index":727,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["subscribe((val",{"_index":808,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["subscribe(async",{"_index":753,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["subscribe(image",{"_index":719,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["subscribe(res",{"_index":845,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["summary",{"_index":1583,"title":{},"body":{"index.html":{}}}],["super(90",{"_index":399,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["support",{"_index":1716,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1717,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":650,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["switchmap((arr",{"_index":1227,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["switchmap((m",{"_index":1022,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["switchmap((objlist",{"_index":1032,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["switchmap((val",{"_index":917,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["switchmap((val:any",{"_index":912,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["synchronize",{"_index":461,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["table",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":651,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["take(1",{"_index":915,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["takelast",{"_index":1019,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["takelast(1",{"_index":1044,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["takes",{"_index":1612,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":381,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["takeuntil(this.unsubscribe",{"_index":437,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["takeuntil(this.unsubscribe$)).subscribe((val",{"_index":542,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["tap",{"_index":382,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"classes/LoadingWorker.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["tap((req",{"_index":1042,"title":{},"body":{"classes/LoadingWorker.html":{}}}],["tap((url",{"_index":1191,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["tap(va",{"_index":1225,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["tb",{"_index":1160,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["tdata",{"_index":999,"title":{},"body":{"injectables/ImageService.html":{}}}],["tdata.blob",{"_index":1005,"title":{},"body":{"injectables/ImageService.html":{}}}],["tdata.category",{"_index":1007,"title":{},"body":{"injectables/ImageService.html":{}}}],["tdd",{"_index":1713,"title":{},"body":{"index.html":{}}}],["technique",{"_index":781,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["technologies",{"_index":1587,"title":{},"body":{"index.html":{}}}],["technology",{"_index":1615,"title":{},"body":{"index.html":{}}}],["template",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["template'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["template.component",{"_index":530,"title":{},"body":{"components/GridComponent.html":{},"modules/GridModule.html":{},"interfaces/Tile.html":{}}}],["template.component.ts",{"_index":576,"title":{},"body":{"components/GridTemplateComponent.html":{},"coverage.html":{}}}],["template.component.ts:115",{"_index":610,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:116",{"_index":605,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:117",{"_index":603,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:118",{"_index":606,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:120",{"_index":607,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:121",{"_index":611,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:122",{"_index":594,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:129",{"_index":598,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:144",{"_index":596,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:147",{"_index":600,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:154",{"_index":602,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.component.ts:160",{"_index":597,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["template.directive",{"_index":571,"title":{},"body":{"modules/GridModule.html":{},"components/GridTemplateComponent.html":{}}}],["template.directive.ts",{"_index":627,"title":{},"body":{"directives/GridTemplateDirective.html":{},"coverage.html":{}}}],["template.directive.ts:7",{"_index":632,"title":{},"body":{"directives/GridTemplateDirective.html":{}}}],["template.directive.ts:9",{"_index":633,"title":{},"body":{"directives/GridTemplateDirective.html":{}}}],["template/grid",{"_index":529,"title":{},"body":{"components/GridComponent.html":{},"modules/GridModule.html":{},"components/GridTemplateComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["templatename",{"_index":517,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["templateref",{"_index":496,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/Tile.html":{}}}],["templateurl",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["tempobservable",{"_index":701,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["tend",{"_index":393,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["terimnate",{"_index":766,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["terminated",{"_index":771,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["then(val",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["therefore",{"_index":1650,"title":{},"body":{"index.html":{}}}],["this._cachedimages.filter(val",{"_index":992,"title":{},"body":{"injectables/ImageService.html":{}}}],["this._cachedimages.push({idx",{"_index":997,"title":{},"body":{"injectables/ImageService.html":{}}}],["this._cachedseries",{"_index":297,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this._cachedseries.filter(series",{"_index":301,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this._cachedseries.filter(val",{"_index":291,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this._cachedseries.push(data",{"_index":304,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this._cachedthumbnailimages.push({idx",{"_index":1006,"title":{},"body":{"injectables/ImageService.html":{}}}],["this._cacheurls",{"_index":294,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this._cacheurls.find(val",{"_index":289,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{}}}],["this._queryurl",{"_index":733,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this._queryurl.split('.')[0].split('/')[2",{"_index":809,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.addclass",{"_index":458,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.border",{"_index":1094,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["this.bordercolor",{"_index":1132,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["this.cacheseriesservice.cachedseries",{"_index":1193,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.cacheseriesservice.checkandcacheseries(data",{"_index":1214,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.cacheseriesservice.getcachedseriesbycat(this.category).blob",{"_index":787,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.carouselservice.getnextimage(this.currentcategory",{"_index":563,"title":{},"body":{"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["this.carouselservice.getprevimage(this.currentcategory",{"_index":625,"title":{},"body":{"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{}}}],["this.carouselservice.getselectedimagebyid(image.category",{"_index":721,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.carouselservice.getselectedimagebyid(this.category",{"_index":785,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.category",{"_index":435,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.category_list).pipe",{"_index":1153,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["this.category_list.findindex",{"_index":984,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.category_list.findindex(val",{"_index":736,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.category_list[cidx",{"_index":744,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.category_list[index",{"_index":1158,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["this.categoryidx",{"_index":735,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.cdr.detectchanges",{"_index":444,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1130,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["this.checkifadditionalloading(val",{"_index":815,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.currentcategory$.pipe().subscribe(val",{"_index":434,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.currentimageindex",{"_index":359,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.currentimageindex[this.elements[0",{"_index":1307,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.currentimageindex[this.elements[1",{"_index":1308,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.currentimageindex[this.elements[2",{"_index":1309,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.currentimageindex[this.elements[3",{"_index":1310,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.currentimages",{"_index":439,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.currentseries",{"_index":1192,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.displaysplitwindowimage(image",{"_index":788,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.displaysplitwindowimage(img",{"_index":722,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.displaysplitwindowimage(timage",{"_index":786,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.displaythefirstimage",{"_index":755,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.draggedinx",{"_index":451,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.elements[0",{"_index":1304,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.focusedsplit$.pipe",{"_index":615,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.focusedsplitidx",{"_index":790,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.getcurrentsplitoperation$.pipe",{"_index":910,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.getimageurls$.pipe",{"_index":433,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.getisimageloaded",{"_index":751,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.getisimageloaded$.pipe(skip(1),take(1",{"_index":752,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.getselectedimagebyid$.pipe",{"_index":457,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.getselectedimagebyid$.pipe(skip(1",{"_index":718,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.getselectedseriesbyid$.pipe",{"_index":725,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.getsplitstate[eidx",{"_index":730,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.gettotalimagelist",{"_index":748,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.gridtemplate.gettemplate(name",{"_index":558,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.http.get(url",{"_index":1155,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["this.http.get(url).pipe",{"_index":298,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["this.idx",{"_index":453,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.image",{"_index":1139,"title":{},"body":{"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["this.image.nativeelement.src",{"_index":791,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["this.imagecount[this.categoryidx",{"_index":819,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.imageservice.cachedthumbnailimages.map(val",{"_index":440,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.imageservice.checkandcacheimage(data",{"_index":891,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.imageservice.getcacheimage(cat",{"_index":357,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.imageservice.getcacheimage(this.category",{"_index":358,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.imageservice.getcacheurls",{"_index":811,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.imageservice.getcacheurlsbycategory(cat).length",{"_index":347,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.imageservice.gettotalimagelist(this._queryurl",{"_index":807,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.imageservice.readfile(data.blob",{"_index":885,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.isfinishedrendering",{"_index":1311,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering$[this.elements[0",{"_index":1317,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering$[this.elements[1",{"_index":1319,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering$[this.elements[2",{"_index":1321,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering$[this.elements[3",{"_index":1323,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[0",{"_index":1313,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[0]].asobservable",{"_index":1318,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[1",{"_index":1314,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[1]].asobservable",{"_index":1320,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[2",{"_index":1315,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[2]].asobservable",{"_index":1322,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[3",{"_index":1316,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isfinishedrendering[this.elements[3]].asobservable",{"_index":1324,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering",{"_index":1312,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering$[this.elements[0",{"_index":1329,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering$[this.elements[1",{"_index":1331,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering$[this.elements[2",{"_index":1333,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering$[this.elements[3",{"_index":1335,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[0",{"_index":1325,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[0]].asobservable",{"_index":1330,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[1",{"_index":1326,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[1]].asobservable",{"_index":1332,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[2",{"_index":1327,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[2]].asobservable",{"_index":1334,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[3",{"_index":1328,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.isstartedrendering[this.elements[3]].asobservable",{"_index":1336,"title":{},"body":{"injectables/SplitService.html":{}}}],["this.makecachedimage(data.data",{"_index":866,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.makethefirstimage",{"_index":749,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.makingsplitwindow",{"_index":745,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.makingsplitwindowbygrid(idx",{"_index":669,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.makingsplitwindowbyselectedseries(id",{"_index":728,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.makingsplitwindowbyselectedseries(this.categoryidx",{"_index":941,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.mcols",{"_index":549,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.mheight",{"_index":552,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.nextimage",{"_index":708,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.onselecttemplate(val",{"_index":557,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.originalimage",{"_index":792,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.originalimage.blob",{"_index":1474,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["this.originalimage.imageid",{"_index":1473,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["this.previmage",{"_index":710,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.progress[this.categoryidx",{"_index":826,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.requestrenderingsplitwindow",{"_index":740,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.requestrenderingsplitwindow$[this.splitservice.selectedelement",{"_index":741,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.savecacheimage(data",{"_index":889,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.selectedimageid.imageid",{"_index":1476,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["this.selectedseriesbyid",{"_index":1134,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["this.selectedsplit[0",{"_index":614,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.selectedsplit[1",{"_index":616,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.selectedsplit[2",{"_index":617,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.selectedsplit[3",{"_index":618,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.selectedsplit[val",{"_index":619,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.selectedtemplate",{"_index":561,"title":{},"body":{"components/GridComponent.html":{},"directives/SelectColorDirective.html":{},"interfaces/Tile.html":{}}}],["this.selecttemplate.emit(this.stemplate",{"_index":1101,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["this.seriesimage.blob",{"_index":1129,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["this.seriesimage.seriesid",{"_index":1135,"title":{},"body":{"components/SeriesItemComponent.html":{}}}],["this.seriesservice.getseriesobject",{"_index":1208,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.seriesurls$.pipe",{"_index":1190,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.seriesworker",{"_index":1210,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.setcacheurl(data",{"_index":996,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.signalfinished",{"_index":756,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitaction",{"_index":767,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitidx",{"_index":731,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitmode",{"_index":738,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitmode$.pipe(skip(1",{"_index":541,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.splitservice.bworker",{"_index":840,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.currentimageindex[element",{"_index":348,"title":{},"body":{"injectables/CarouselService.html":{}}}],["this.splitservice.currentimageindex[this.splitservice.selectedelement",{"_index":1199,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.splitservice.elements.findindex(val",{"_index":624,"title":{},"body":{"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{}}}],["this.splitservice.elements[eidx",{"_index":737,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.isfinishedrendering$[val.element].pipe(take(1",{"_index":914,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.isfinishedrendering[this.splitservice.selectedelement].next(this.splitservice.selectedelement",{"_index":760,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.isstartedrendering$[val.element].pipe(take(1",{"_index":918,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.isstartedrendering[this.splitservice.selectedelement].next(this.splitservice.selectedelement",{"_index":775,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.resetsplitwindowprocessing",{"_index":739,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitservice.selectedelement",{"_index":564,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["this.splitwindowprocess1",{"_index":713,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.splitwindowprocess2",{"_index":714,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.stemplate",{"_index":1092,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["this.store.dispatch(new",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["this.templateref.toarray().find",{"_index":621,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["this.tempobservable",{"_index":920,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.tiles",{"_index":543,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles1",{"_index":512,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles2",{"_index":544,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles3",{"_index":546,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles4",{"_index":548,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles[0].templatename",{"_index":507,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.tiles[this.tiles.length",{"_index":550,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["this.unsubscribe$.complete",{"_index":1103,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["this.unsubscribe$.next",{"_index":1102,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["this.unsubscribe.asobservable",{"_index":427,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.unsubscribe.complete",{"_index":478,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.unsubscribe.next",{"_index":477,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.viewport.elementscrolled().subscribe(event",{"_index":452,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.viewport.measurescrolloffset",{"_index":454,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.viewport.scrolledindexchange.pipe(takeuntil(this.unsubscribe$)).subscribe(val",{"_index":449,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["this.viewport.scrolltoindex(image.imageid",{"_index":468,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["this.viewport.scrolltoindex(val",{"_index":1196,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.webworkerpostmessage(res",{"_index":823,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.webworkerprocess",{"_index":747,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["this.worker[this.categoryidx].postmessage(data",{"_index":854,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.worker[this.splitidx",{"_index":764,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.worker[this.splitidx].onmessage",{"_index":863,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.worker[this.splitidx].postmessage(data",{"_index":853,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.worker[this.splitidx].postmessage(json.parse(json.stringify(_data",{"_index":880,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["this.worker[this.splitidx].terminate",{"_index":763,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["through",{"_index":1671,"title":{},"body":{"index.html":{}}}],["throw",{"_index":831,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["thumb",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{}}}],["thumbitemcomponent",{"_index":179,"title":{"components/ThumbItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnail",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"dependencies.html":{},"index.html":{}}}],["thumbnail/cache",{"_index":533,"title":{},"body":{"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/Tile.html":{}}}],["thumbnail/series",{"_index":653,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["thumbnail/thumbnail",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["thumbnail_item",{"_index":717,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["thumbnaillistcomponent",{"_index":181,"title":{"components/ThumbnailListComponent.html":{}},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"modules/ThumbnailModule.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnailmodule",{"_index":196,"title":{"modules/ThumbnailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ThumbnailModule.html":{},"modules.html":{},"overview.html":{}}}],["thumbnails",{"_index":1696,"title":{},"body":{"index.html":{}}}],["tile",{"_index":511,"title":{"interfaces/Tile.html":{}},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{}}}],["tiles",{"_index":486,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["tiles1",{"_index":487,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["tiles2",{"_index":488,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["tiles3",{"_index":489,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["tiles4",{"_index":490,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["timage",{"_index":784,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["time",{"_index":391,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{},"index.html":{}}}],["title",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/CarouselService.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"interfaces/StatusStateModel.html":{}}}],["toarray",{"_index":1020,"title":{},"body":{"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{}}}],["tool",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["top",{"_index":583,"title":{},"body":{"components/GridTemplateComponent.html":{},"index.html":{}}}],["traffic",{"_index":1607,"title":{},"body":{"index.html":{}}}],["transmitted",{"_index":1686,"title":{},"body":{"index.html":{}}}],["tree",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["triggered",{"_index":455,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["triggering",{"_index":827,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["true",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":812,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["ts",{"_index":295,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["tslib",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"directives/GridTemplateDirective.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":859,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["uncategorically",{"_index":1703,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":765,"title":{},"body":{"interfaces/ImageModel.html":{},"injectables/SplitService.html":{}}}],["unique",{"_index":1651,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":426,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["until",{"_index":900,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["update",{"_index":447,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["updated",{"_index":828,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["url",{"_index":263,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CarouselService.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["url('src/assets/workers/additional",{"_index":842,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["url('src/assets/workers/carousel",{"_index":861,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["url('src/assets/workers/series",{"_index":1211,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["url)[0",{"_index":303,"title":{},"body":{"injectables/CacheSeriesService.html":{}}}],["url_base",{"_index":1151,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["url_base}${cat}.json",{"_index":1154,"title":{},"body":{"injectables/SeriesItemService.html":{}}}],["urls",{"_index":810,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"interfaces/StatusStateModel.html":{}}}],["urls).then((res",{"_index":816,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["usage",{"_index":397,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["useclass",{"_index":415,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["user",{"_index":799,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["using",{"_index":836,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["utils/down",{"_index":980,"title":{},"body":{"injectables/ImageService.html":{}}}],["v",{"_index":1469,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["va",{"_index":1226,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["val",{"_index":436,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["val.category",{"_index":292,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"components/ThumbnailListComponent.html":{}}}],["val.data",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["val.element",{"_index":913,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["val.idx",{"_index":993,"title":{},"body":{"injectables/ImageService.html":{}}}],["val.image",{"_index":441,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["val.length",{"_index":849,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["val.url",{"_index":290,"title":{},"body":{"injectables/CacheSeriesService.html":{},"injectables/ImageService.html":{},"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["val[1",{"_index":926,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["value",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"injectables/SplitService.html":{},"classes/StatusAction.html":{},"components/ThumbnailListComponent.html":{},"miscellaneous/variables.html":{}}}],["value',event.key",{"_index":712,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["values",{"_index":1207,"title":{},"body":{"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["variable",{"_index":1508,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1660,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1592,"title":{},"body":{"index.html":{}}}],["ver",{"_index":1705,"title":{},"body":{"index.html":{}}}],["version",{"_index":1582,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":408,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["viewchild",{"_index":374,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["viewchild('gridcontainer",{"_index":537,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["viewchild('gridtemplate",{"_index":501,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["viewchild('img",{"_index":670,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesItemComponent.html":{},"components/ThumbItemComponent.html":{}}}],["viewchild(cdkvirtualscrollviewport",{"_index":423,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["viewchildren",{"_index":612,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["viewchildren(gridtemplatedirective",{"_index":609,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["viewcontainerref",{"_index":539,"title":{},"body":{"components/GridComponent.html":{},"interfaces/Tile.html":{}}}],["viewer",{"_index":938,"title":{},"body":{"interfaces/ImageModel.html":{},"index.html":{}}}],["viewport",{"_index":410,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["virtual",{"_index":412,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["virtual_scroll_strategy",{"_index":385,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/ThumbnailListComponent.html":{}}}],["void",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheSeriesService.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/GridComponent.html":{},"components/GridTemplateComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"directives/SelectColorDirective.html":{},"components/SeriesItemComponent.html":{},"injectables/SeriesItemService.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"injectables/SplitService.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{},"interfaces/Tile.html":{}}}],["wait",{"_index":899,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["waits",{"_index":1666,"title":{},"body":{"index.html":{}}}],["webworker",{"_index":657,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/LoadingWorker.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SeriesWorker.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"dependencies.html":{},"index.html":{}}}],["webworkerpostmessage(val",{"_index":848,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["webworkerprocess",{"_index":858,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["webworkerworkingstatus",{"_index":1348,"title":{},"body":{"interfaces/StatusStateModel.html":{}}}],["whenever",{"_index":715,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["whether",{"_index":1663,"title":{},"body":{"index.html":{}}}],["width",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesItemComponent.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbItemComponent.html":{},"components/ThumbnailListComponent.html":{}}}],["window",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{},"index.html":{}}}],["window_layout",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["windows",{"_index":898,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["wonsup",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["work",{"_index":1013,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{},"index.html":{}}}],["work(input",{"_index":1014,"title":{},"body":{"classes/LoadingWorker.html":{},"classes/SeriesWorker.html":{}}}],["worker",{"_index":692,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["worker(new",{"_index":841,"title":{},"body":{"interfaces/ImageModel.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{}}}],["worker.ts",{"_index":862,"title":{},"body":{"interfaces/ImageModel.html":{},"classes/SeriesWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["worker.ts:8",{"_index":1220,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["working",{"_index":1648,"title":{},"body":{"index.html":{}}}],["workingstatus",{"_index":1257,"title":{},"body":{"classes/SetActiveSplit.html":{},"classes/SetCategoryList.html":{},"classes/SetCurrentCategory.html":{},"classes/SetCurrentSplitOperation.html":{},"classes/SetFocusedSplit.html":{},"classes/SetImageUrls.html":{},"classes/SetIsImageLoaded.html":{},"classes/SetIsSeriesLoaded.html":{},"classes/SetSelectedImageById.html":{},"classes/SetSelectedImageByUrl.html":{},"classes/SetSelectedSeriesById.html":{},"classes/SetSelectedSplitWindowId.html":{},"classes/SetSeriesUrls.html":{},"classes/SetSplitAction.html":{},"classes/SetSplitMode.html":{},"classes/SetSplitState.html":{},"classes/SetWebworkerWorkingStatus.html":{},"classes/StatusAction.html":{}}}],["wrap",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["wrapper",{"_index":413,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["writing",{"_index":406,"title":{},"body":{"injectables/CustomVirtualScrollStrategy.html":{},"components/SeriesListComponent.html":{},"interfaces/SeriesModel.html":{},"components/ThumbnailListComponent.html":{}}}],["wsjung",{"_index":1091,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["x",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/GridTemplateComponent.html":{}}}],["x.name",{"_index":622,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["xmlhttpcomm",{"_index":1222,"title":{},"body":{"classes/SeriesWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["xmlhttpcomm(url",{"_index":1229,"title":{},"body":{"classes/SeriesWorker.html":{}}}],["yellow",{"_index":1477,"title":{},"body":{"components/ThumbItemComponent.html":{}}}],["z",{"_index":584,"title":{},"body":{"components/GridTemplateComponent.html":{}}}],["zindex",{"_index":1050,"title":{},"body":{"directives/SelectColorDirective.html":{}}}],["zip",{"_index":644,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["zip(isstarted",{"_index":922,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["zip(this.tempobservable",{"_index":933,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["zone.js",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AngularMaterials.html":{},"modules/AppModule.html":{},"modules/CarouselModule.html":{},"modules/GridModule.html":{},"modules/ThumbnailModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AngularMaterials.html":{"url":"modules/AngularMaterials.html","title":"module - AngularMaterials","body":"\n                   \n\n\n\n\n    Modules\n    AngularMaterials\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AngularMaterials\n\n\n\ncluster_AngularMaterials_declarations\n\n\n\ncluster_AngularMaterials_exports\n\n\n\n\nCarouselMainComponent\n\nCarouselMainComponent\n\n\n\nAngularMaterials\n\nAngularMaterials\n\nAngularMaterials -->\n\nCarouselMainComponent->AngularMaterials\n\n\n\n\n\nCarouselMainComponent \n\nCarouselMainComponent \n\nCarouselMainComponent  -->\n\nAngularMaterials->CarouselMainComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/angular-materials.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CarouselMainComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CarouselMainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {CommonModule} from \"@angular/common\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {CarouselMainComponent} from \"../carousel/carousel-main/carousel-main.component\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nconst materials = [\n  MatRadioModule,\n  MatButtonModule,\n  MatProgressBarModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatMenuModule,\n  ScrollingModule,\n  MatIconModule,\n  MatTooltipModule\n]\n\n@NgModule({\n  declarations:[CarouselMainComponent],\n  imports:[\n    CommonModule,\n    ...materials\n  ],\n  exports:[\n    ...materials,\n    CarouselMainComponent\n  ]\n})\nexport class AngularMaterials{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAriaExpanded\n                            \n                            \n                                isAriaExpandedForCaret\n                            \n                            \n                                onClickWindowSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAriaExpanded\n                        \n                    \n                \n            \n            \n                \nisAriaExpanded(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAriaExpandedForCaret\n                        \n                    \n                \n            \n            \n                \nisAriaExpandedForCaret(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { selectedBtn: boolean; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickWindowSplit\n                        \n                    \n                \n            \n            \n                \nonClickWindowSplit(no: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    no\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        queryUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/json/animal.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'split-window-spectator211009'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {Store} from \"@ngxs/store\";\nimport {SetSplitMode} from \"../store/status/status.actions\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'split-window-spectator211009';\n  queryUrl = 'assets/json/animal.json';\n  constructor(private store: Store) {\n  }\n  onClickWindowSplit(no: number) {\n    this.store.dispatch(new SetSplitMode(no));\n  }\n  isAriaExpanded( id: string) {\n    var element = document.getElementById(id)\n    var x = element.getAttribute('aria-expanded');\n\n    return x === 'true'?\n      `assets/icon_split/${id}_black.svg`\n      : `assets/icon_split/${id}_white.svg`;\n\n  }\n  isAriaExpandedForCaret(id:string) {\n    var element = document.getElementById(id);\n    var x = element.getAttribute('aria-expanded');\n\n    return x === 'true'? {'selectedBtn': true} : {'selectedBtn': false};\n  }\n\n}\n\n    \n\n    \n        \n  \n    Splitting window for demo. ( by Wonsup Jung ) \n    \n      \n        \n          \n            \n            \n          \n          \n            \n              \n                 -->\n                \n                1\n              \n            \n            \n              \n                \n                1 x 1\n              \n            \n            \n              \n                 -->\n                \n                1 x 2\n              \n            \n            \n              \n                \n                2 x 2\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n-->\n      \n        \n          Category\n        \n        \n        \n          \n        \n      \n    \n  \n\n\n-->\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .tool-bar{\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  /*align-content: stretch;*/\n  align-items: flex-start;\n  width: 100%;\n}\n.window_layout{\n  width: 24px;\n  height: 24px;\n  margin-right: 19px;\n  display: inline-block;\n}\n\n.split_menu {\n  display: flex;\n  flex-direction : row;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Splitting window for demo. ( by Wonsup Jung )                                                                                                                    -->                                1                                                                                    1 x 1                                                                     -->                                1 x 2                                                                                    2 x 2                                                                                              -->                        Category                                                      -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAngularMaterials\n\nAngularMaterials\n\nAppModule -->\n\nAngularMaterials->AppModule\n\n\n\n\n\nCarouselModule\n\nCarouselModule\n\nAppModule -->\n\nCarouselModule->AppModule\n\n\n\n\n\nGridModule\n\nGridModule\n\nAppModule -->\n\nGridModule->AppModule\n\n\n\n\n\nThumbnailModule\n\nThumbnailModule\n\nAppModule -->\n\nThumbnailModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AngularMaterials\n                        \n                        \n                            CarouselModule\n                        \n                        \n                            GridModule\n                        \n                        \n                            ThumbnailModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CarouselMainComponent } from './carousel/carousel-main/carousel-main.component';\nimport {CarouselModule} from \"./carousel/carousel.module\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {NgxsModule} from \"@ngxs/store\";\nimport {StatusState} from \"../store/status/status.state\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {NgxsSelectSnapshotModule} from \"@ngxs-labs/select-snapshot\";\nimport {NgxsStoragePluginModule} from \"@ngxs/storage-plugin\";\nimport {GridModule} from \"./grid/grid.module\";\nimport {AngularMaterials} from \"./shared/angular-materials\";\nimport {ThumbnailModule} from \"./thumbnail/thumbnail-module\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n    ],\n    imports: [\n        BrowserModule,\n        // AppRoutingModule,\n        BrowserAnimationsModule,\n        CarouselModule,\n        AngularMaterials,\n        NgxsModule.forRoot([StatusState]),\n        NgxsSelectSnapshotModule.forRoot(),\n        // NgxsStoragePluginModule.forRoot(),\n        GridModule,\n        ThumbnailModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {CarouselMainComponent} from \"./carousel/carousel-main/carousel-main.component\";\n\nconst routes: Routes = [\n  {path:'', component: CarouselMainComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheSeriesService.html":{"url":"injectables/CacheSeriesService.html","title":"injectable - CacheSeriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheSeriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/thumbnail/cache-series.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cachedSeries\n                            \n                            \n                                    Private\n                                _cacheUrls\n                            \n                            \n                                category_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAndCacheSeries\n                            \n                            \n                                getCachedSeriesByCat\n                            \n                            \n                                getCachedSeriesByUrl\n                            \n                            \n                                getCacheUrls\n                            \n                            \n                                getTotalSeriesList\n                            \n                            \n                                isThisUrlCached\n                            \n                            \n                                readFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cachedSeries\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/cache-series.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAndCacheSeries\n                        \n                    \n                \n            \n            \n                \ncheckAndCacheSeries(data: SeriesModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SeriesModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedSeriesByCat\n                        \n                    \n                \n            \n            \n                \ngetCachedSeriesByCat(cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedSeriesByUrl\n                        \n                    \n                \n            \n            \n                \ngetCachedSeriesByUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheUrls\n                        \n                    \n                \n            \n            \n                \ngetCacheUrls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalSeriesList\n                        \n                    \n                \n            \n            \n                \ngetTotalSeriesList(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isThisUrlCached\n                        \n                    \n                \n            \n            \n                \nisThisUrlCached(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(blob: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/cache-series.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _cachedSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeriesModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/cache-series.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _cacheUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/cache-series.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCategoryList)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/cache-series.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cachedSeries\n                    \n                \n\n                \n                    \n                        getcachedSeries()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thumbnail/cache-series.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {SeriesModel} from \"./series-list/series-list.component\";\nimport {StatusState} from \"../../store/status/status.state\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheSeriesService {\n\n  private _cacheUrls: {\n    idx: number,\n    category: string,\n    url: string\n  }[] = [];\n  private _cachedSeries: SeriesModel[] =[];\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  constructor(private http: HttpClient) { }\n\n  isThisUrlCached(url: string) {\n    return this._cacheUrls.find(val => val.url === url);\n  }\n  getCachedSeriesByCat(cat: string) { // data: SeriesModel\n    return  this._cachedSeries.filter(val => val.category === cat)[0];\n  }\n\n  getCacheUrls() {\n    return this._cacheUrls;\n  }\n\n  // @ts-ignore\n  get cachedSeries(): SeriesModel[] {\n    return this._cachedSeries;\n  }\n  getTotalSeriesList(url: string) {\n    return this.http.get(url).pipe(\n      map ( (res:any) => res['data']),\n    )\n  }\n\n  getCachedSeriesByUrl(url: string) {\n    return this._cachedSeries.filter(series => series.url === url)[0];\n  }\n\n  checkAndCacheSeries(data: SeriesModel) {\n    this._cachedSeries.push(data);\n  }\n  readFile (blob: any): Observable  {\n    return new Observable((obs: any) => {\n      const reader = new FileReader();\n\n      reader.onerror = err => obs.error(err);\n      reader.onabort = err => obs.error(err);\n      reader.onload = () => obs.next(reader.result);\n      reader.onloadend = () => obs.complete();\n\n      return reader.readAsDataURL(blob);\n    });\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CarouselModule.html":{"url":"modules/CarouselModule.html","title":"module - CarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    CarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CarouselModule\n\n\n\ncluster_CarouselModule_providers\n\n\n\n\nCarouselService\n\nCarouselService\n\n\n\nCarouselModule\n\nCarouselModule\n\nCarouselModule -->\n\nCarouselService->CarouselModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/carousel/carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CarouselService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {CarouselService} from \"./carousel.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [CarouselService]\n})\nexport class CarouselModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarouselService.html":{"url":"injectables/CarouselService.html","title":"injectable - CarouselService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarouselService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/carousel/carousel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextImage\n                            \n                            \n                                getPrevImage\n                            \n                            \n                                getSelectedImageById\n                            \n                            \n                                getSelectedImageByUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageService: ImageService, splitService: SplitService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/carousel/carousel.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splitService\n                                                  \n                                                        \n                                                                        SplitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextImage\n                        \n                    \n                \n            \n            \n                \ngetNextImage(cat: string, element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/carousel.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrevImage\n                        \n                    \n                \n            \n            \n                \ngetPrevImage(cat: string, element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/carousel.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedImageById\n                        \n                    \n                \n            \n            \n                \ngetSelectedImageById(cat: string, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/carousel.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedImageByUrl\n                        \n                    \n                \n            \n            \n                \ngetSelectedImageByUrl(url: string, element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/carousel.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCurrentCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/carousel.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {ImageService} from \"./image.service\";\nimport {Store} from \"@ngxs/store\";\nimport {SetSelectedImageById} from \"../../store/status/status.actions\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {StatusState} from \"../../store/status/status.state\";\nimport {SplitService} from \"../grid/split.service\";\nimport {ImageModel} from \"./carousel-main/carousel-main.component\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarouselService {\n  // @Select(StatusState.getSelectedImageById) getSelectedImageById$: Observable;\n  @SelectSnapshot(StatusState.getCurrentCategory) category: string;\n  constructor(\n    private imageService: ImageService,\n    private splitService: SplitService,\n    private store: Store\n    ) {}\n  getNextImage(cat: string, element: any) {\n    if( this.imageService.getCacheUrlsByCategory(cat).length > this.splitService.currentImageIndex[element] + 1) {\n      this.splitService.currentImageIndex[element] = this.splitService.currentImageIndex[element] + 1;\n    }\n    const image: ImageModel = {\n      imageId: this.splitService.currentImageIndex[element],\n      category: cat,\n      url: '',\n      blob: '',\n      title: ''\n    }\n    /**\n     * new SetSelectedImageById --> getSelectedImageById(carousel-main.compoment)\n     * new SetSelectedSplitWindow(carousel-main.component displayFirstImage)\n     * --> onSelectTemplate (grid component)\n     * */\n\n    this.store.dispatch(new SetSelectedImageById(image));\n    //\n    return this.imageService.getCacheImage(cat, this.splitService.currentImageIndex[element]);\n    // return this.imageService.getCacheImage(this.category, this.currentImageIndex);\n  }\n  getPrevImage(cat: string, element: any) {\n    if( this.splitService.currentImageIndex[element] > 0) {\n      this.splitService.currentImageIndex[element] = this.splitService.currentImageIndex[element] - 1;\n    }\n    // console.log('-- prev this.currentImageIndex', this.currentImageIndex )\n    const image: ImageModel = {\n      imageId: this.splitService.currentImageIndex[element],\n      category: cat,\n      url: '',\n      blob: '',\n      title: ''\n    }\n\n    this.store.dispatch(new SetSelectedImageById(image));\n    return this.imageService.getCacheImage(this.category, this.splitService.currentImageIndex[element]);\n  }\n  getSelectedImageByUrl(url: string, element: any) {\n    return this.imageService.getCacheImage(this.category, this.splitService.currentImageIndex[element])\n  }\n  getSelectedImageById(cat: string, idx: number) {\n    return this.imageService.getCacheImage(cat, idx)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomVirtualScrollStrategy.html":{"url":"injectables/CustomVirtualScrollStrategy.html","title":"injectable - CustomVirtualScrollStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomVirtualScrollStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    FixedSizeVirtualScrollStrategy\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Injectable,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {ImageService} from \"../../carousel/image.service\";\nimport {ImageModel} from \"../../carousel/carousel-main/carousel-main.component\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {combineLatest, merge, Observable, Subject} from \"rxjs\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {takeUntil, tap} from \"rxjs/operators\";\nimport {SetSelectedImageById, SetSplitAction} from \"../../../store/status/status.actions\";\nimport {\n  CdkVirtualScrollViewport,\n  FixedSizeVirtualScrollStrategy,\n  VIRTUAL_SCROLL_STRATEGY\n} from \"@angular/cdk/scrolling\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {SplitService} from \"../../grid/split.service\";\n\n@Injectable()\nexport class CustomVirtualScrollStrategy extends FixedSizeVirtualScrollStrategy {\n  constructor() {\n    /** Below value is assumed, that could contains at most 100 image pixel data at one time.\n     * If less than this value, the image data tend to be shuffled by sharing memory usage while scrolling  */\n    super(90, 10000, 10000); // (itemSize, minBufferPx, maxBufferPx)\n  }\n}\n\n\n@Component({\n  selector: 'app-thumbnail-list',\n  template: `\n    \n      \n        \n          \n\n            \n            \n\n          \n        \n      \n\n    \n  `,\n  styles: [`\n    .cdk-scroll-source {\n      writing-mode: vertical-lr;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 90px;\n      width: 100%;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: row;\n    }\n  `\n  ],\n  providers: [{provide: VIRTUAL_SCROLL_STRATEGY, useClass: CustomVirtualScrollStrategy}],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class ThumbnailListComponent implements OnInit, OnDestroy {\n\n  @Input() category: string;\n  @Select(StatusState.getImageUrls)  getImageUrls$: Observable;\n  @SelectSnapshot(StatusState.getActiveSplit)  activeSplit: number;\n  @Select(StatusState.getSelectedImageById)  getSelectedImageById$: Observable;\n  @Select(StatusState.getCurrentCategory) currentCategory$: Observable;\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) viewPort: CdkVirtualScrollViewport;\n\n  item_list: ImageModel[] = [];\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  addClass: {} = {};\n  draggedInx = 0;\n  idx = 0;\n  currentImages: ImageModel[] = [];\n  constructor(\n    private carouselService: CarouselService,\n    private imageService: ImageService,\n    private store: Store,\n    private cdr: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n\n    // this.getImageUrls$.pipe(\n    this.currentCategory$.pipe().subscribe(val => {\n      this.category = val;\n       // console.log('-- category -1', val)\n    });\n    this.getImageUrls$.pipe(\n      takeUntil(this.unsubscribe$),\n    ).subscribe(() => {\n      this.currentImages = this.imageService.cachedThumbnailImages.map(val => val.image)\n        .filter(val => val.category === this.category);\n\n         // console.log('this.currentImages -2', this.category)\n      this.cdr.detectChanges();\n    });\n    /** When scrollbar is dragged,  then update thumbnail-list scroll offset */\n    this.viewPort.scrolledIndexChange.pipe(takeUntil(this.unsubscribe$)).subscribe(val => {\n      // console.log(' draaged value', val)\n      this.draggedInx = val;\n    });\n    this.viewPort.elementScrolled().subscribe(event => {\n      this.idx = this.viewPort.measureScrollOffset();\n      // console.log(' idx', this.idx)\n    });\n    /**\n     * Triggered from series-list.component ( onSelectSeries),\n     *      carousel.service (getPrevImage, getNextImage)\n     */\n    this.getSelectedImageById$.pipe(\n      takeUntil(this.unsubscribe$)\n    ).subscribe( image => {\n      this.addClass = {\n        class:'selected_item',\n        imageId: image.imageId\n      }\n      this.cdr.detectChanges();\n      // To synchronize with the current selected item, after when it is activated by clicking item-list\n       setTimeout(() => this.viewPort.scrollToIndex(image.imageId, 'smooth'),200);\n    })\n\n  }\n  onSelectItem(ev:ImageModel) {\n    // console.log( '--- thumbnail-list id', ev.imageId )\n    this.store.dispatch(new SetSelectedImageById(ev));\n    this.category = ev.category;\n    this.addClass = {\n      class: 'selected_item',\n      index: ev.imageId\n    }\n    this.store.dispatch(new SetSplitAction(false));\n\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grid/grid.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n      \n\n    \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCategory\n                            \n                            \n                                gridTemplate\n                            \n                            \n                                mcols\n                            \n                            \n                                mheight\n                            \n                            \n                                selectedSplitWindowId$\n                            \n                            \n                                selectedTemplate\n                            \n                            \n                                splitMode$\n                            \n                            \n                                tiles\n                            \n                            \n                                tiles1\n                            \n                            \n                                tiles2\n                            \n                            \n                                tiles3\n                            \n                            \n                                tiles4\n                            \n                            \n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onGetTemplate\n                            \n                            \n                                onSelectTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cacheSeriesService: CacheSeriesService, carouselService: CarouselService, splitService: SplitService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grid/grid.component.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheSeriesService\n                                                  \n                                                        \n                                                                        CacheSeriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carouselService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splitService\n                                                  \n                                                        \n                                                                        SplitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGetTemplate\n                        \n                    \n                \n            \n            \n                \nonGetTemplate(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TemplateRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectTemplate\n                        \n                    \n                \n            \n            \n                \nonSelectTemplate(ev: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCurrentCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GridTemplateComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('gridTemplate', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mcols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mheight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '82vh'\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSplitWindowId$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getSelectedSplitWindowId)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.tiles[0].templateName\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitMode$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getSplitMode)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tile[]\n\n                    \n                \n                \n                    \n                        Default value : [...this.tiles1]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tiles1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tile[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {mcols: 1, mheight: '82vh', mwidth: '100%', cols: 1, rows: 1, templateName: 'element1'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tiles2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tile[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tiles3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tile[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 2, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tiles4\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tile[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element4'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Observable, Subject} from \"rxjs\";\nimport {GridTemplateComponent} from \"./grid-template/grid-template.component\";\nimport {skip, takeUntil, tap} from \"rxjs/operators\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {StatusState} from \"../../store/status/status.state\";\nimport {\n  SetFocusedSplit,\n  SetSplitAction,\n} from \"../../store/status/status.actions\";\nimport {CacheSeriesService} from \"../thumbnail/cache-series.service\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {CarouselService} from \"../carousel/carousel.service\";\nimport {SplitService} from \"./split.service\";\nexport interface Tile {\n  mcols: number;\n  mheight: string;\n  mwidth: string;\n  cols: number;\n  rows: number;\n  templateName: string;\n}\n\n@Component({\n  selector: 'app-grid',\n  template: `\n    \n      \n        \n          \n            \n          \n\n        \n      \n      \n    \n  `,\n  styles: [\n  ]\n})\nexport class GridComponent implements OnInit {\n\n  unsubscribe$ = new Subject();\n  mcols = 1;\n  mheight = '82vh';\n  tiles1: Tile[] = [\n    {mcols: 1, mheight: '82vh', mwidth: '100%', cols: 1, rows: 1, templateName: 'element1'},\n  ];\n  tiles2: Tile[] = [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n  ];\n  tiles3: Tile[] = [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 2, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n  ];\n  tiles4: Tile[] = [\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element4'},\n  ];\n  tiles: Tile[] = [...this.tiles1];\n\n  selectedTemplate: string = this.tiles[0].templateName;\n  // @ViewChild('gridContainer', {read: ViewContainerRef}) gridContainer: ViewContainerRef;\n  @Select(StatusState.getSplitMode) splitMode$: Observable;\n  @Select(StatusState.getSelectedSplitWindowId) selectedSplitWindowId$: Observable;\n  @SelectSnapshot(StatusState.getCurrentCategory) currentCategory: string;\n\n  @ViewChild('gridTemplate', { static: true }) gridTemplate: GridTemplateComponent;\n\n  constructor(private store: Store,\n              private cacheSeriesService: CacheSeriesService,\n              private carouselService: CarouselService,\n              private splitService: SplitService\n\n  ) { }\n\n  ngOnInit(): void {\n    /** Triggered from app.component.html */\n    this.splitMode$.pipe(skip(1), takeUntil(this.unsubscribe$)).subscribe((val)=> {\n      // console.log('****************** splitMode$', val)\n      if (val === 1) {\n        this.tiles = [...this.tiles1];\n      } else if (val === 2) {\n        this.tiles = [...this.tiles2];\n      } else if( val === 3) {\n        this.tiles = [...this.tiles3];\n      } else if( val === 4)  {\n        this.tiles = [...this.tiles4];\n      }\n      this.mcols = this.tiles[this.tiles.length - 1].mcols;\n      this.mheight = this.tiles[this.tiles.length - 1].mheight;\n      // console.log(' mcols mheight', this.mcols, this.mheight)\n\n      this.store.dispatch(new SetSplitAction(true));\n\n    });\n    /** Call from displayTheFirstImage  {\n      this.onSelectTemplate(val)\n    });\n\n  }\n  onGetTemplate(name: string): TemplateRef {\n    return this.gridTemplate.getTemplate(name);\n  }\n  onSelectTemplate(ev: any) {\n    // const elementId = ev;\n    // console.log('-- ev',ev)\n    this.selectedTemplate = ev;\n    let idx;\n    if( ev === 'element1' ) idx = 0;\n    if( ev === 'element2' ) idx = 1;\n    if( ev === 'element3' ) idx = 2;\n    if( ev === 'element4' ) idx = 3;\n    this.store.dispatch(new SetFocusedSplit(idx));\n    this.store.dispatch(new SetSplitAction(false));\n    //\n    // this.carouselService.getNextImage(this.currentCategory, this.splitService.selectedElement);\n    this.splitService.selectedElement = ev;\n\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridModule.html":{"url":"modules/GridModule.html","title":"module - GridModule","body":"\n                   \n\n\n\n\n    Modules\n    GridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GridModule\n\n\n\ncluster_GridModule_imports\n\n\n\ncluster_GridModule_exports\n\n\n\ncluster_GridModule_declarations\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nGridTemplateComponent\n\nGridTemplateComponent\n\nGridModule -->\n\nGridTemplateComponent->GridModule\n\n\n\n\n\nGridTemplateDirective\n\nGridTemplateDirective\n\nGridModule -->\n\nGridTemplateDirective->GridModule\n\n\n\n\n\nSelectColorDirective\n\nSelectColorDirective\n\nGridModule -->\n\nSelectColorDirective->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridTemplateComponent \n\nGridTemplateComponent \n\nGridTemplateComponent  -->\n\nGridModule->GridTemplateComponent \n\n\n\n\n\nGridTemplateDirective \n\nGridTemplateDirective \n\nGridTemplateDirective  -->\n\nGridModule->GridTemplateDirective \n\n\n\n\n\nAngularMaterials\n\nAngularMaterials\n\nGridModule -->\n\nAngularMaterials->GridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/grid/grid.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GridComponent\n                        \n                        \n                            GridTemplateComponent\n                        \n                        \n                            GridTemplateDirective\n                        \n                        \n                            SelectColorDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AngularMaterials\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GridComponent\n                        \n                        \n                            GridTemplateComponent\n                        \n                        \n                            GridTemplateDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GridTemplateDirective } from './directives/grid-template.directive';\nimport {GridTemplateComponent} from \"./grid-template/grid-template.component\";\nimport {CarouselMainComponent} from \"../carousel/carousel-main/carousel-main.component\";\nimport {AngularMaterials} from \"../shared/angular-materials\";\nimport {GridComponent} from \"./grid.component\";\nimport {SelectColorDirective} from \"./directives/select-color.directive\";\n\n@NgModule({\n  declarations: [\n    GridTemplateDirective,\n    GridTemplateComponent,\n    GridComponent,\n    SelectColorDirective\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterials\n  ],\n  exports: [\n    GridTemplateDirective,\n    GridTemplateComponent,\n    GridComponent\n  ]\n})\nexport class GridModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridTemplateComponent.html":{"url":"components/GridTemplateComponent.html","title":"component - GridTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grid/grid-template/grid-template.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid-template\n            \n\n\n            \n                styles\n                \n    .fab-bottom-left {\n      position: absolute;\n      left: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n    .fab-bottom-right {\n      position: absolute;\n      right: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n  \n            \n\n            \n                template\n                 \n  \n    \n      \n        keyboard_arrow_left\n      \n      \n        keyboard_arrow_right\n      \n    \n      \n    \n  \n\n\n  \n    \n      \n        keyboard_arrow_left\n      \n      \n        keyboard_arrow_right\n      \n    \n    \n    \n  \n\n\n  \n    \n      \n        keyboard_arrow_left\n      \n      \n        keyboard_arrow_right\n      \n    \n    \n    \n  \n\n\n  \n    \n      \n        keyboard_arrow_left\n      \n      \n        keyboard_arrow_right\n      \n    \n    \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCategory\n                            \n                            \n                                focusedSplit$\n                            \n                            \n                                selectedSplit\n                            \n                            \n                                sElement\n                            \n                            \n                                templateRef\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTemplate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLeftArrowButton\n                            \n                            \n                                onRightArrowButton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carouselService: CarouselService, store: Store, splitService: SplitService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carouselService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splitService\n                                                  \n                                                        \n                                                                        SplitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTemplate\n                        \n                    \n                \n            \n            \n                \ngetTemplate(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid-template/grid-template.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TemplateRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid-template/grid-template.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid-template/grid-template.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLeftArrowButton\n                        \n                    \n                \n            \n            \n                \nonLeftArrowButton(element: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid-template/grid-template.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRightArrowButton\n                        \n                    \n                \n            \n            \n                \nonRightArrowButton(element: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/grid-template/grid-template.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCurrentCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusedSplit$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getFocusedSplit)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSplit\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templateRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(GridTemplateDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.unsubscribe.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/grid-template/grid-template.component.ts:122\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, QueryList, TemplateRef, ViewChildren} from '@angular/core';\nimport {GridTemplateDirective} from \"../directives/grid-template.directive\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {Observable, Subject} from \"rxjs\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {SplitService} from \"../split.service\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {SetFocusedSplit, SetSplitAction} from \"../../../store/status/status.actions\";\n\n@Component({\n  selector: 'app-grid-template',\n  template: `\n     \n      \n        \n          \n            keyboard_arrow_left\n          \n          \n            keyboard_arrow_right\n          \n        \n          \n        \n      \n    \n    \n      \n        \n          \n            keyboard_arrow_left\n          \n          \n            keyboard_arrow_right\n          \n        \n        \n        \n      \n    \n    \n      \n        \n          \n            keyboard_arrow_left\n          \n          \n            keyboard_arrow_right\n          \n        \n        \n        \n      \n    \n    \n      \n        \n          \n            keyboard_arrow_left\n          \n          \n            keyboard_arrow_right\n          \n        \n        \n        \n      \n    \n  `,\n  styles: [`\n    .fab-bottom-left {\n      position: absolute;\n      left: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n    .fab-bottom-right {\n      position: absolute;\n      right: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n  `]\n})\nexport class GridTemplateComponent implements OnInit, OnDestroy {\n\n  @ViewChildren(GridTemplateDirective) templateRef: QueryList;\n  @Select(StatusState.getFocusedSplit) focusedSplit$: Observable;\n  @SelectSnapshot(StatusState.getCurrentCategory) currentCategory: string;\n  selectedSplit: any[] = [];\n\n  sElement: string;\n  unsubscribe: Subject = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  constructor(\n    private carouselService: CarouselService,\n    private store: Store,\n    private splitService: SplitService\n  ) { }\n\n  ngOnInit(): void {\n    const el: any = 'element1'\n    this.selectedSplit[0] = false;\n    this.focusedSplit$.pipe(\n      takeUntil(this.unsubscribe$)\n    ).subscribe( val => {\n      this.selectedSplit[0] = true;\n      this.selectedSplit[1] = true;\n      this.selectedSplit[2] = true;\n      this.selectedSplit[3] = true;\n\n      this.selectedSplit[val] = false;\n      // console.log(' active split', val)\n    })\n  }\n  getTemplate( name: string): TemplateRef {\n    return this.templateRef.toArray().find( x => x.name === name).template;\n  }\n  onLeftArrowButton(element: string) {\n    this.store.dispatch(new SetSplitAction(false));\n    const idx = this.splitService.elements.findIndex(val => val === element);\n    this.carouselService.getPrevImage(this.currentCategory, element);\n    this.store.dispatch(new SetFocusedSplit(idx));\n\n  }\n  onRightArrowButton(element: string) {\n    this.store.dispatch(new SetSplitAction(false));\n    const idx = this.splitService.elements.findIndex(val => val === element);\n    this.carouselService.getNextImage(this.currentCategory, element);\n    this.store.dispatch(new SetFocusedSplit(idx));\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n    \n\n\n    \n            \n    .fab-bottom-left {\n      position: absolute;\n      left: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n    .fab-bottom-right {\n      position: absolute;\n      right: 16px;\n      top: 50%;\n      bottom: 50%;\n      z-index: 100;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     keyboard_arrow_left                    keyboard_arrow_right                                          keyboard_arrow_left                    keyboard_arrow_right                                        keyboard_arrow_left                    keyboard_arrow_right                                        keyboard_arrow_left                    keyboard_arrow_right                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/GridTemplateDirective.html":{"url":"directives/GridTemplateDirective.html","title":"directive - GridTemplateDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  GridTemplateDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grid/directives/grid-template.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appGridTemplate]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appGridTemplate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/grid/directives/grid-template.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appGridTemplate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grid/directives/grid-template.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/grid-template.directive.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, Input, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[appGridTemplate]'\n})\nexport class GridTemplateDirective {\n  @Input('appGridTemplate') name: string;\n\n  constructor(public template: TemplateRef) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageModel.html":{"url":"interfaces/ImageModel.html","title":"interface - ImageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/carousel/carousel-main/carousel-main.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blob\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            imageId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blob\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blob:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CarouselService} from \"../carousel.service\";\nimport {ImageService} from \"../image.service\";\nimport {defer, EMPTY, Observable, of, Subject, zip} from \"rxjs\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {\n  SetCurrentSplitOperation,\n  SetImageUrls,\n  SetIsImageLoaded,\n  SetSelectedSplitWindowId,\n  SetSplitAction,\n} from \"../../../store/status/status.actions\";\nimport {filter, skip, switchMap, take, takeUntil} from \"rxjs/operators\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {SeriesItemService} from \"../../thumbnail/series-item/series-item.service\";\nimport {CacheSeriesService} from \"../../thumbnail/cache-series.service\";\nimport {fromWorker} from \"observable-webworker\";\nimport {SplitService} from \"../../grid/split.service\";\n\n// export const category_list = ['animal', 'house', 'baby', 'forest', 'happiness', 'love', 'sea','banana', 'mountain']\nexport interface ImageModel {\n  imageId: number,\n  category: string,\n  url: string,\n  blob: any,\n  title: string\n}\n\n@Component({\n  selector: 'app-carousel-main',\n  template: `\n    \n      \n        \n          \n        \n\n        \n          \n            \n          \n        \n      \n    \n\n  `,\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class CarouselMainComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() set queryElement(el: string) {\n    let idx;\n    if (el === 'element1') idx = 0;\n    if (el === 'element2') idx = 1;\n    if (el === 'element3') idx = 2;\n    if (el === 'element4') idx = 3;\n\n    this.makingSplitWindowByGrid(idx);\n  }\n\n  @ViewChild('img') image: ElementRef;\n  // to check if image loading is started from webworker.\n  @Select(StatusState.getIsImageLoaded) getIsImageLoaded$: Observable;\n  @Select(StatusState.getSelectedImageById) getSelectedImageById$: Observable;\n  @Select(StatusState.getSelectedSeriesById) getSelectedSeriesById$: Observable;\n  //\n  @SelectSnapshot(StatusState.getSplitState) getSplitState: string[];\n  @SelectSnapshot(StatusState.getCurrentCategory) currentCategory: string;\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  @SelectSnapshot(StatusState.getWebworkerWorkingStatus) getWebworkerWorkingStatus: boolean;\n  @Select(StatusState.getSeriesUrls) getSeriesUrls$: Observable;\n  @Select(StatusState.getSplitMode) splitMode$: Observable;\n  @SelectSnapshot(StatusState.getSplitMode) splitMode: number;\n  @SelectSnapshot(StatusState.getSplitAction) splitAction: boolean;\n  @SelectSnapshot(StatusState.getFocusedSplit) focusedSplitIdx: number;\n  @Select(StatusState.getCurrentSplitOperation) getCurrentSplitOperation$: Observable;\n  @Select(StatusState.getActiveSplit) activeSplit$: Observable;\n  worker: Worker[] = [];\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  _queryUrl: string;\n  category: string;\n  splitIdx: number;\n  categoryIdx: any;\n  imageCount: any[] = [];\n  progress: string[] = [];\n  originalImage: any;\n  requestRenderingSplitWindow$: Observable[] = [];\n  selectedSplitWindow = new Subject();\n  tempObservable: Observable;\n\n  @HostListener('window:keydown', ['$event'])\n  handleKey(event: KeyboardEvent) {\n    if (event.key === 'ArrowRight') this.nextImage();\n    if (event.key === 'ArrowLeft') this.prevImage();\n    // console.log( 'key value',event.key);\n  }\n\n  constructor(\n    private carouselService: CarouselService,\n    private imageService: ImageService,\n    private store: Store,\n    private splitService: SplitService,\n    private cdr: ChangeDetectorRef,\n    private seriesItemService: SeriesItemService,\n    private cacheSeriesService: CacheSeriesService,\n  ) {}\n\n\n  ngOnInit(): void {\n    // call from thumbnail-list, triggered by clicking image item.\n    this.splitWindowProcess1();\n    this.splitWindowProcess2()\n\n    /** Display image at the main window whenever clinking thumbnail_item */\n    this.getSelectedImageById$.pipe(skip(1))\n      .subscribe(image => {\n        const img = this.carouselService.getSelectedImageById(image.category, image.imageId)\n        this.displaySplitWindowImage(img);\n      })\n\n    /** New process start whenever clinking series_item */\n    this.getSelectedSeriesById$.pipe(\n      skip(1),\n      takeUntil(this.unsubscribe$),\n    ).subscribe((id: number) => {\n      this.makingSplitWindowBySelectedSeries(id);\n    });\n  }\n\n  private makingSplitWindowByGrid(eIdx: number) {\n    this.category = this.getSplitState[eIdx];\n    this.splitIdx = eIdx;\n    this._queryUrl = `assets/json/${this.category}.json`;\n    this.categoryIdx = this.category_list.findIndex(val => val === this.category);\n    this.splitService.selectedElement = this.splitService.elements[eIdx];\n    if (this.splitMode === 1) {\n       this.splitService.resetSplitWindowProcessing();\n    }\n    // console.log('----requestRenderingSplitWindow$', this.requestRenderingSplitWindow$, this.splitService.selectedElement, eIdx);\n    this.requestRenderingSplitWindow$[this.splitService.selectedElement] = of(this.splitService.selectedElement).pipe(take(1));\n  }\n\n  private makingSplitWindowBySelectedSeries(cIdx: number) {\n    this.category = this.category_list[cIdx];\n    this._queryUrl = `assets/json/${this.category}.json`;\n    this.categoryIdx = this.category_list.findIndex(val => val === this.category);\n    this.makingSplitWindow();\n  }\n\n  private makingSplitWindow() {\n    // console.log(' --- makingSplitWindow ');\n    this.webWorkerProcess();\n    this.getTotalImageList();\n    this.makeTheFirstImage();\n\n  }\n\n\n  private makeTheFirstImage() {\n    this.getIsImageLoaded$ && this.getIsImageLoaded$.pipe(skip(1),take(1))\n      .subscribe(async () => {\n\n        await this.displayTheFirstImage();\n        await this.signalFinished();\n      })\n  }\n\n  private async signalFinished() {\n    return new Promise(resolve => {\n      this.splitService.isFinishedRendering[this.splitService.selectedElement].next(this.splitService.selectedElement)\n      resolve('')\n      setTimeout(() => {\n        if(this.worker[this.splitIdx] ) {\n          this.worker[this.splitIdx].terminate();\n          this.worker[this.splitIdx] = undefined;\n          // console.log(' terimnate this.worker[this.splitIdx] ', this.splitIdx)\n        }\n        // if(this.worker[this.splitIdx] && this.splitAction ) this.worker[this.splitIdx].terminate();\n        /** Because each split window has it's own webworker, and this webworker will be remained\n         *  if it is not terminated immediately */\n      },5000);\n\n    })\n  }\n\n  private async displayTheFirstImage() {\n    return new Promise( resolve => {\n        this.splitService.isStartedRendering[this.splitService.selectedElement].next(this.splitService.selectedElement)\n        /**\n         * When change split mode, if image is not in the cached (based on category)\n         * then borrow image from series list, which is already cached.\n         * This technique is needed because image should be displayed immediately\n         */\n        const tImage = this.carouselService.getSelectedImageById(this.category, 0);\n        if( tImage ) {\n          this.displaySplitWindowImage(tImage)\n        } else {\n          const image = this.cacheSeriesService.getCachedSeriesByCat(this.category).blob;\n          this.displaySplitWindowImage(image);\n        }\n        resolve('')\n    })\n  }\n  private displaySplitWindowImage(image: any) {\n    // console.log('-- this.focusedSplitIdx, this.splitIdx, this.splitAction', this.focusedSplitIdx, this.splitIdx, this.splitAction)\n    if( this.splitIdx !== this.focusedSplitIdx && !this.splitAction) {\n      return\n    }\n    this.image.nativeElement.src = image;\n    this.originalImage = this.image.nativeElement.src;\n    this.cdr.detectChanges();\n    /** To focus on the selected split window as the first window */\n    this.store.dispatch(new SetSelectedSplitWindowId('element1'));\n\n    /**\n     * 1. In case, window is opened by split mode action,\n     * 2. and user clicked arrow button,\n     * 3. this time splitAction is true\n     * 4. reset splitAction false when the last split window is displayed.\n     * this can protect abnormal display\n     * */\n    if( this.splitAction === true ) {\n      const splitIdx = this.splitService.elements.findIndex(val => val === this.splitService.selectedElement)\n      // console.log(' splitIdx', splitIdx);\n      if( this.splitMode -1  === splitIdx)\n        this.store.dispatch(new SetSplitAction(false));\n    }\n    //\n  }\n\n  private getTotalImageList() {\n    this.imageService.getTotalImageList(this._queryUrl)\n      .subscribe((val: any) => {\n        const category = this._queryUrl && this._queryUrl.split('.')[0].split('/')[2];\n        const urls = this.imageService.getCacheUrls();\n        /** Try to display if there are any cached image before check additional loading  */\n        this.store.dispatch(new SetImageUrls([]));\n        // console.log(' val', val)\n        this.checkIfAdditionalLoading(val, category, urls).then((res: any) => {\n          // console.log('-- remained url', res.length)\n          if (res.length > 0) { // If there is remained url that need loading image\n            this.imageCount[this.categoryIdx] = res.length;\n            /** Send urls for loading images additionally */\n            this.webworkerPostMessage(res);\n          } else {\n            /** In this case, no webworker job is needed because all images are cached,\n             *  And display the first image.\n             */\n            this.store.dispatch(new SetIsImageLoaded({idx:0}));\n            this.progress[this.categoryIdx] = '';\n            /** Triggering loading every image, then thumbnail list is updated continuously */\n            this.store.dispatch(new SetImageUrls([]));\n          }\n\n        });\n      }, error => {\n        throw Error(error)\n      });\n  }\n\n\n\n  checkIfAdditionalLoading(val: any, category: string, urls: { idx: number; category: string; url: string }[]) {\n    /** Check if image is cached already, then skip caching job\n     * or extract remained urls, which is needed loading image by using webworker */\n    return new Promise((resolve, reject) => {\n      const input$ = of({req: val, category, urls: urls});\n\n      if (!this.splitService.bWorker) {\n        this.splitService.bWorker = new Worker(new URL('src/assets/workers/additional-loading.worker', import.meta.url), {type: 'module'})\n      }\n      fromWorker(\n        () => this.splitService.bWorker,\n        input$,\n      ).subscribe(res => {\n        resolve(res)\n      }, error => reject(error))\n    });\n  }\n\n  private webworkerPostMessage(val: any) {\n    // console.log(' val', val.length)\n    const data: any = {\n      msg: 'download',\n      body: val,\n      category: this.category\n    }\n    /** Send additional urls to webworker */\n    if(this.worker[this.splitIdx]) this.worker[this.splitIdx].postMessage(data)\n    // this.worker[this.categoryIdx].postMessage(data)\n  }\n\n  ngAfterViewInit() {\n  }\n  nextImage() {\n    if( this.splitIdx !== this.focusedSplitIdx && !this.splitAction) return\n\n    const image = this.carouselService.getNextImage(this.currentCategory, this.splitService.selectedElement);\n    this.displaySplitWindowImage(image);\n  }\n  prevImage() {\n    if( this.splitIdx !== this.focusedSplitIdx && !this.splitAction) return\n\n    const image = this.carouselService.getPrevImage(this.currentCategory, this.splitService.selectedElement);\n    this.displaySplitWindowImage(image);\n  }\n  webWorkerProcess() {\n    if (typeof Worker !== 'undefined') {\n      if( !this.worker[this.splitIdx]) {\n        // console.log('this.worker[this.splitIdx]', this.worker[this.splitIdx], this.splitIdx)\n        this.worker[this.splitIdx] = new Worker(new URL('src/assets/workers/carousel-worker.ts', import.meta.url));\n        this.worker[this.splitIdx].onmessage = (data: any) => {\n          this.progress[this.categoryIdx] = ((data.data.imageId + 1)/ this.imageCount[this.categoryIdx] * 100).toFixed(0).toString();\n          this.makeCachedImage(data.data);\n          const _data: any = {\n            msg: 'completeCachedImage',\n            body: data.data.url,\n            category: this.category\n          }\n          // console.log(' _data',data.data.url)\n          /** Send the signal of completing loading one image of all the images\n           * that was sent to webworker as bundle urls\n           * This means for being ready to receiving the next image*/\n          this.worker[this.splitIdx].postMessage(JSON.parse(JSON.stringify(_data)))\n        };\n      }\n    }\n  }\n\n  private makeCachedImage(data: ImageModel) {\n    if(  !data.blob.type || !data.blob.size) {\n      // data is not Blob type.\n      return;\n    }\n    // console.log('----data- category',data.category)\n    const image: any = this.imageService.readFile(data.blob)\n    image.subscribe((obj: any) => {\n      data.blob = obj;\n      this.saveCacheImage(data);\n    })\n  }\n\n  saveCacheImage(data: ImageModel) {\n    this.imageService.checkAndCacheImage(data)\n    /** Triggering that every image is loading, then thumbnail list is updated continuously */\n    this.store.dispatch(new SetImageUrls([data.url]));\n    /** To show the first image in the main window */\n    this.store.dispatch(new SetIsImageLoaded({idx:data.imageId}));\n  }\n///////////////////////////////////////////////////\n  private splitWindowProcess1() {\n    /**\n     * When it comes to rendering of split-windows,\n     * each window need to wait until the previous window finished rendering.\n     * -----------------\n     * 1. The end of processing of image, emit event of \"isStartedRendering$\" for each split window.\n     * 2. As soon as take the event of \"isStartedRendering$\" start processing .\n     * 3. display the first image and emit event of \"isFinishedRendering$\"\n     *    for each split window.\n     * */\n      //\n    const isFinished$ = this.getCurrentSplitOperation$.pipe( // 1 To know the end of image processing\n        switchMap((val:any) => {\n          this.splitService.selectedElement = val.element; // 2\n          return this.splitService.isFinishedRendering$[val.element].pipe(take(1));\n        }),\n        take(1), // 3\n      );\n\n    const isStarted$ = this.getCurrentSplitOperation$.pipe( // 4 To know the start of image processing\n      switchMap((val: any) => {\n        this.splitService.selectedElement = val.element;\n        return this.splitService.isStartedRendering$[val.element].pipe(take(1));\n      }),\n      take(1),\n    );\n\n    if (this.splitMode > 1) {\n      if (this.splitService.selectedElement === 'element1') { // 5 first split window\n        this.tempObservable = defer(() => of(EMPTY).pipe());\n      } else if (this.splitService.selectedElement === 'element2') {\n        this.tempObservable = zip(isStarted$, isFinished$).pipe( //['element2','element1']\n          filter((val: any) => val[1] === 'element1') // 6\n        );\n      } else if (this.splitService.selectedElement === 'element3') {\n        this.tempObservable = zip(isStarted$, isFinished$).pipe( //['element3','element2']\n          filter((val: any) => val[1] === 'element2'),\n        );\n      } else if (this.splitService.selectedElement === 'element4') {\n        this.tempObservable = zip(isStarted$, isFinished$).pipe( //['element4','element3']\n          filter((val: any) => val[1] === 'element3'),\n        );\n      }\n    } else {\n      this.tempObservable = defer(() => of(EMPTY).pipe()); // 7\n    }\n  }\n  //\n  private splitWindowProcess2() {\n    const rendering$: Observable = this.requestRenderingSplitWindow$[this.splitService.selectedElement];\n    // 8\n    zip(this.tempObservable, rendering$).pipe( // 9\n      take(1),\n    ).subscribe(([temp, element]) => {\n      /** Start processing ct-viewer after finished processing for previous split window*/\n      const idx = this.splitService.elements.findIndex(val => val === element)\n      this.splitService.selectedElement = element;\n      /** When change split mode, need to set the first signal to prepare processing\n       * because each split window do process one by one */\n      this.store.dispatch(new SetCurrentSplitOperation({element: this.splitService.selectedElement}));\n\n      this.makingSplitWindowBySelectedSeries(this.categoryIdx); // 10\n    });\n  }\n///////////////////////////////////////////////////////\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/carousel/image.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _cachedImages\n                            \n                            \n                                    Private\n                                _cachedThumbnailImages\n                            \n                            \n                                    Private\n                                _cacheUrls\n                            \n                            \n                                category\n                            \n                            \n                                category_list\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAndCacheImage\n                            \n                            \n                                getCacheImage\n                            \n                            \n                                getCacheUrls\n                            \n                            \n                                getCacheUrlsByCategory\n                            \n                            \n                                getTotalImageList\n                            \n                            \n                                isThisUrlCached\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                readFile\n                            \n                            \n                                setCacheUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cachedImages\n                                \n                                \n                                    cachedThumbnailImages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/carousel/image.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAndCacheImage\n                        \n                    \n                \n            \n            \n                \ncheckAndCacheImage(data: ImageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheImage\n                        \n                    \n                \n            \n            \n                \ngetCacheImage(cat: string, idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheUrls\n                        \n                    \n                \n            \n            \n                \ngetCacheUrls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheUrlsByCategory\n                        \n                    \n                \n            \n            \n                \ngetCacheUrlsByCategory(cat: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalImageList\n                        \n                    \n                \n            \n            \n                \ngetTotalImageList(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isThisUrlCached\n                        \n                    \n                \n            \n            \n                \nisThisUrlCached(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n            \n                \nreadFile(blob: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCacheUrl\n                        \n                    \n                \n            \n            \n                \nsetCacheUrl(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/carousel/image.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _cachedImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _cachedThumbnailImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _cacheUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCurrentCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCategoryList)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.unsubscribe.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/carousel/image.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cachedImages\n                    \n                \n\n                \n                    \n                        getcachedImages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/carousel/image.service.ts:62\n                                \n                            \n\n                \n                    \n                        setcachedImages(data: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/carousel/image.service.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        cachedThumbnailImages\n                    \n                \n\n                \n                    \n                        getcachedThumbnailImages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/carousel/image.service.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable, Subject} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport {ImageModel} from \"./carousel-main/carousel-main.component\";\nimport {StatusState} from \"../../store/status/status.state\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {downscaleImage} from \"../utils/down-scale-image\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService implements  OnDestroy {\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable()\n  private _cacheUrls: {\n    idx: number,\n    category: string,\n    url: string\n  }[] = [];\n  private _cachedImages: {\n    idx: number,\n    category: string,\n    image: ImageModel\n  }[] = [];\n  private _cachedThumbnailImages: {\n    idx: number,\n    category: string,\n    image: ImageModel\n  }[] = [];\n  @SelectSnapshot(StatusState.getCurrentCategory) category: string;\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  constructor(private http: HttpClient) { }\n\n  isThisUrlCached(url: string) {\n    return this._cacheUrls.find(val => val.url === url);\n  }\n  setCacheUrl(data:any) { // data: ImageModel\n    const cIdx: any = this.category_list.findIndex( val => val === data.category) + 1;\n    const nIdx = data.imageId  val.category === cat);\n  }\n\n  set cachedImages(data: any) { // data: ImageModel\n    const cIdx: any = this.category_list.findIndex( val => val === data.category) + 1;\n    const nIdx = data.imageId  {\n        // console.timeEnd('cccc')\n        return res['data']\n      }),\n    )\n  }\n\n  getCacheImage(cat: string, idx: number) {\n    const cIdx: any = this.category_list.findIndex( val => val === cat) + 1;\n    const nIdx = idx  image.idx === nIdx);\n    if (index > -1) {\n      const res = this._cachedImages.filter(val => val.idx === nIdx);\n      return res[0].image.blob;\n    }\n    return ('')\n  }\n\n  checkAndCacheImage(data: ImageModel) {\n    const cIdx: any = this.category_list.findIndex( val => val === data.category) + 1;\n    const nIdx = data.imageId  val.idx === nIdx)\n    if( ret ) return;\n    this.setCacheUrl(data);\n    this._cachedImages.push({idx: nIdx, category: data.category, image: data});\n    /** Save image data as thumbnail */\n    let tData = Object.assign({}, data);\n    const file = downscaleImage(tData.blob, 'image/jpeg', 100,0.7);\n    file.then( val => {\n      tData.blob = val;\n      this._cachedThumbnailImages.push({idx: nIdx, category: tData.category, image: tData});\n    })\n\n  }\n  readFile (blob: any): Observable  {\n    return new Observable((obs: any) => {\n      const reader = new FileReader();\n\n      reader.onerror = err => obs.error(err);\n      reader.onabort = err => obs.error(err);\n      reader.onload = () => obs.next(reader.result);\n      reader.onloadend = () => obs.complete();\n\n      return reader.readAsDataURL(blob);\n    });\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadingWorker.html":{"url":"classes/LoadingWorker.html","title":"class - LoadingWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadingWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/workers/additional-loading.worker.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DoWork\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        work\n                        \n                    \n                \n            \n            \n                \n                    \n                    work(input$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/workers/additional-loading.worker.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DoWork, runWorker } from 'observable-webworker';\nimport {from, Observable, of, Subject} from 'rxjs';\nimport {filter, finalize, map, mergeMap, switchMap, takeLast, takeUntil, tap, toArray} from 'rxjs/operators';\n\nexport class LoadingWorker implements DoWork {\n  public work(input$: Observable): Observable {\n   return input$.pipe(\n      switchMap((m: any) => {\n        let re = m.req;\n        if( m.urls.filter((val:any) => val.category === m.category ).length === 0 ) return of(m.req)\n        return from(m.urls).pipe(\n          // takeUntil(this.unsubscribe$),\n          filter((obj: any) => obj.category === m.category),\n          toArray(),\n          switchMap((objList: any[]) => {\n            // [Object{idx: 10, category: 'animal', url: 'aaaaa'},\n            //  Object{idx: 11, category: 'animal', url: 'bbbbb'}]\n            return from(objList).pipe(\n              // takeUntil(this.unsubscribe$),\n              mergeMap( obj => {\n                return from(re).pipe(\n                  // takeUntil(this.unsubscribe$),\n                  filter((val: any) => val.url !== obj.url),\n                  toArray(),\n                )\n              }),\n              // to recursive operation\n              tap((req) => re = req),\n              takeLast(1),\n          )\n          }),\n        )\n      }),\n    );\n\n  }\n}\nrunWorker(LoadingWorker);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SelectColorDirective.html":{"url":"directives/SelectColorDirective.html","title":"directive - SelectColorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SelectColorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grid/directives/select-color.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnChanges\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [selectColor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                border\n                            \n                            \n                                unsubscribe$\n                            \n                            \n                                zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                onMouseOver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectColor\n                            \n                            \n                                selectedTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.border\n                            \n                            \n                                style.zIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grid/directives/select-color.directive.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grid/directives/select-color.directive.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTemplate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grid/directives/select-color.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectTemplate\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/grid/directives/select-color.directive.ts:10\n                            \n                        \n            \n        \n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.border\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/select-color.directive.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.zIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/select-color.directive.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:32\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:36\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:27\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseOver\n                        \n                    \n                \n            \n            \n                \nonMouseOver()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover')\n                \n            \n\n            \n                \n                    Defined in src/app/grid/directives/select-color.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        border\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.border')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/select-color.directive.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/select-color.directive.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.zIndex')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/grid/directives/select-color.directive.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Directive({\n    selector: '[selectColor]'\n})\nexport class SelectColorDirective implements OnInit, OnChanges, OnDestroy {\n    @Input('selectColor') sTemplate: string;\n    @Input() selectedTemplate:string;\n    @Output() selectTemplate = new EventEmitter();\n    unsubscribe$ = new Subject();\n    constructor() {}\n    ngOnInit() {\n        // console.log('-- wsjung --SelectColorDirective-- ', this.sTemplate, this.selectedTemplate)\n    }\n    ngOnChanges(changes: SimpleChanges) {\n        if( changes.selectedTemplate.currentValue === this.sTemplate) {\n            this.border = '3px solid red';\n            //console.log('- wsjung SelectColorDirective-- changes', changes, changes.selectedTemplate.currentValue)\n        } else {\n            this.border = '2px solid gray';\n        }\n    }\n\n    @HostBinding('style.border') border: string;\n    @HostBinding('style.zIndex') zIndex: number;\n    @HostListener('mouseover') onMouseOver() {\n        if( this.selectedTemplate !== this.sTemplate) {\n            this.border = '3px solid blue';\n        }\n    }\n    @HostListener('click') onClick() {\n        this.border = '3px solid red';\n        this.selectTemplate.emit(this.sTemplate);\n    }\n    @HostListener('mouseleave') onMouseLeave() {\n        if( this.selectedTemplate !== this.sTemplate) {\n            this.border = '2px solid gray';\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeriesItemComponent.html":{"url":"components/SeriesItemComponent.html","title":"component - SeriesItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeriesItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thumbnail/series-item/series-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-series-item\n            \n\n\n            \n                styles\n                \n    img {\n      width: 145px;\n      height:100px;\n      object-fit: fill;\n    }\n    .selected_item {\n      border: blue solid 4px ;\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                borderColor\n                            \n                            \n                                category_list\n                            \n                            \n                                image\n                            \n                            \n                                rNumber\n                            \n                            \n                                selectedSeriesById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                seriesImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/series-item/series-item.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seriesImage\n                    \n                \n                \n                    \n                        Type :         SeriesModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/series-item/series-item.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/series-item/series-item.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-item/series-item.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-item/series-item.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-item/series-item.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        borderColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCategoryList)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('img')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSeriesById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getSelectedSeriesById)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef, EventEmitter,\n  Input, OnChanges,\n  OnInit, Output, SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {SeriesModel} from \"../series-list/series-list.component\";\n\n@Component({\n  selector: 'app-series-item',\n  template: `\n    \n      \n        \n      \n    \n  `,\n  styles: [`\n    img {\n      width: 145px;\n      height:100px;\n      object-fit: fill;\n    }\n    .selected_item {\n      border: blue solid 4px ;\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesItemComponent implements OnInit, OnChanges, AfterViewInit {\n  @ViewChild('img') image: ElementRef;\n  @Input() seriesImage: SeriesModel;\n  @Input() addClass: any;\n  @Output() selected: EventEmitter = new EventEmitter();\n  @SelectSnapshot(StatusState.getSelectedSeriesById) selectedSeriesById: number;\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n\n  borderColor: any;\n  rNumber: string\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit() {\n    this.image.nativeElement.src = this.seriesImage.blob;\n    this.cdr.markForCheck();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // console.log('changes', changes)\n    this.borderColor = 'none_selected_item'\n    this.cdr.markForCheck();\n    if( this.selectedSeriesById === this.seriesImage.seriesId) {\n      this.borderColor = 'selected_item';\n      this.cdr.markForCheck();\n\n    } else {\n      this.borderColor = 'non_selected_item';\n      this.cdr.markForCheck();\n\n    }\n    if( changes.seriesImage && changes.seriesImage.currentValue && this.image) {\n    }\n  }\n}\n\n    \n\n\n    \n            \n    img {\n      width: 145px;\n      height:100px;\n      object-fit: fill;\n    }\n    .selected_item {\n      border: blue solid 4px ;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeriesItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeriesItemService.html":{"url":"injectables/SeriesItemService.html","title":"injectable - SeriesItemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeriesItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/thumbnail/series-item/series-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_list\n                            \n                            \n                                    Private\n                                currentSeries\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSeriesObject\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/series-item/series-item.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSeriesObject\n                        \n                    \n                \n            \n            \n                \ngetSeriesObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-item/series-item.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-item/series-item.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCategoryList)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.unsubscribe.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-item/series-item.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {concatMap, map, takeUntil, toArray} from \"rxjs/operators\";\nimport {from, Observable, Subject} from \"rxjs\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {StatusState} from \"../../../store/status/status.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeriesItemService implements OnDestroy{\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  constructor(private http: HttpClient) { }\n  private currentSeries: {\n    seriesId: number;\n    url: string;\n    blob: Blob;\n    category: string\n  }[] = [];\n\n  getSeriesObject(): Observable {\n     const url_base = 'assets/json/';\n     return from( this.category_list).pipe(\n       takeUntil(this.unsubscribe$),\n       map( cat => `${url_base}${cat}.json`),\n       concatMap( url => this.http.get(url)),\n       map( (dat: any, index) => {\n          return {\n           url: dat.data[0].url,\n           seriesId: index + 1,\n           blob: '',\n           category: this.category_list[index]\n         }\n       }),\n       toArray()\n     )\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeriesListComponent.html":{"url":"components/SeriesListComponent.html","title":"component - SeriesListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeriesListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thumbnail/series-list/series-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-series-list\n            \n\n\n            \n                styles\n                \n    .cdk-scroll-source {\n      writing-mode: horizontal-tb;\n      /*writing-mode: vertical-lr;*/\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 650px;\n      width: 100%;\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                category_list\n                            \n                            \n                                currentSeries\n                            \n                            \n                                draggedInx\n                            \n                            \n                                getSelectedSeriesById\n                            \n                            \n                                getSelectedSeriesById$\n                            \n                            \n                                idx\n                            \n                            \n                                seriesUrls$\n                            \n                            \n                                seriesWorker\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribe$\n                            \n                            \n                                viewPort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectSeries\n                            \n                            \n                                webWorkerProcess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carouselService: CarouselService, imageService: ImageService, store: Store, cdr: ChangeDetectorRef, seriesService: SeriesItemService, cacheSeriesService: CacheSeriesService, splitService: SplitService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carouselService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seriesService\n                                                  \n                                                        \n                                                                        SeriesItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheSeriesService\n                                                  \n                                                        \n                                                                        CacheSeriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splitService\n                                                  \n                                                        \n                                                                        SplitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/series-list/series-list.component.ts:79\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-list/series-list.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-list/series-list.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectSeries\n                        \n                    \n                \n            \n            \n                \nonSelectSeries(ev: SeriesModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-list/series-list.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                SeriesModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webWorkerProcess\n                        \n                    \n                \n            \n            \n                \nwebWorkerProcess()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/series-list/series-list.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getCategoryList)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeriesModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draggedInx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedSeriesById\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getSelectedSeriesById)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedSeriesById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getSelectedSeriesById)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriesUrls$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getSeriesUrls)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seriesWorker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Worker\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.unsubscribe.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkVirtualScrollViewport\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkVirtualScrollViewport, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/series-list/series-list.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  CdkVirtualScrollViewport,\n} from \"@angular/cdk/scrolling\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {from, Observable, of, Subject} from \"rxjs\";\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {ImageService} from \"../../carousel/image.service\";\nimport {skip, takeUntil, tap} from \"rxjs/operators\";\nimport {\n  SetCurrentCategory, SetIsImageLoaded,\n  SetIsSeriesLoaded, SetSelectedImageById, SetSelectedSeriesById, SetSeriesUrls, SetSplitAction,\n} from \"../../../store/status/status.actions\";\nimport {SeriesItemService} from \"../series-item/series-item.service\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {CacheSeriesService} from \"../cache-series.service\";\nimport {fromWorker} from \"observable-webworker\";\nimport {SplitService} from \"../../grid/split.service\";\nimport {ImageModel} from \"../../carousel/carousel-main/carousel-main.component\";\nimport {HttpClient} from \"@angular/common/http\";\n\nexport interface SeriesModel {\n  seriesId: number;\n  url: string;\n  blob: string;\n  category: string\n}\n\n@Component({\n  selector: 'app-series-list',\n  template: `\n    \n      \n        \n          \n            \n            \n          \n        \n      \n\n    \n  `,\n  styles: [`\n    .cdk-scroll-source {\n      writing-mode: horizontal-tb;\n      /*writing-mode: vertical-lr;*/\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 650px;\n      width: 100%;\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesListComponent implements OnInit, OnDestroy {\n\n  @Input() category: string;\n  @Select(StatusState.getSeriesUrls) seriesUrls$: Observable;\n  @SelectSnapshot(StatusState.getSelectedSeriesById) getSelectedSeriesById: number;\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  @Select(StatusState.getSelectedSeriesById) getSelectedSeriesById$: Observable;\n  @ViewChild(CdkVirtualScrollViewport, {static: true}) viewPort: CdkVirtualScrollViewport;\n\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  addClass: {} = {};\n  draggedInx = 0;\n  idx = 0;\n  seriesWorker: Worker;\n  currentSeries: SeriesModel[] = [];\n\n  constructor(\n    private carouselService: CarouselService,\n    private imageService: ImageService,\n    private store: Store,\n    private cdr: ChangeDetectorRef,\n    private seriesService: SeriesItemService,\n    private cacheSeriesService: CacheSeriesService,\n    private splitService: SplitService,\n    private http: HttpClient\n  ) {\n  }\n\n  ngOnInit(): void {\n    /** Default category */\n    this.store.dispatch(new SetCurrentCategory('animal'));\n    /** Display series list  */\n    this.seriesUrls$.pipe(\n      skip(1),\n      takeUntil(this.unsubscribe$),\n      tap((url) => {\n        this.currentSeries = [...this.cacheSeriesService.cachedSeries]\n        this.cdr.detectChanges()\n      })\n    ).subscribe()\n\n    /** When scrollbar is dragged,  then update nodule-list scroll offset */\n    this.viewPort.scrolledIndexChange.pipe(takeUntil(this.unsubscribe$)).subscribe(val => {\n      this.draggedInx = val;\n    });\n    this.viewPort.elementScrolled().subscribe(event => {\n      this.idx = this.viewPort.measureScrollOffset();\n    });\n    //\n    this.webWorkerProcess();\n    //\n    /** Move scroll position by the selected series */\n    this.getSelectedSeriesById$.pipe(\n      skip(1),\n      takeUntil(this.unsubscribe$)\n    ).subscribe((val: number) => {\n      this.addClass = {\n        class: 'selected_item',\n        seriesId: val\n      }\n      setTimeout(() => this.viewPort.scrollToIndex(val, 'smooth'), 200);\n    })\n\n  }\n\n  onSelectSeries(ev: SeriesModel) {\n    // console.log(' onSelectSeries - ev', ev);\n    this.store.dispatch(new SetSplitAction(false));\n    this.splitService.currentImageIndex[this.splitService.selectedElement] = 0;\n    // Setting the current selected category\n    this.store.dispatch(new SetCurrentCategory(ev.category));\n    // Select series and get the image list.\n    this.store.dispatch(new SetSelectedSeriesById(ev.seriesId));\n    // Focusing the first thumbnail_item\n    const image: ImageModel = {\n      imageId: 0,\n      category: ev.category,\n      url: '',\n      blob: '',\n      title: ''\n    }\n    this.store.dispatch(new SetSelectedImageById(image));\n    // Enable display the first image in the main window\n    this.store.dispatch(new SetIsImageLoaded({idx: 0}));\n  }\n\n  webWorkerProcess() {\n    /** Start series worker with the initial values */\n    this.seriesService.getSeriesObject()\n      .subscribe((val: any[]) => {\n        const input$ = of(val);\n\n        if (!this.seriesWorker) {\n          this.seriesWorker = new Worker(new URL('src/assets/workers/series-worker', import.meta.url), {type: 'module'})\n        }\n        fromWorker(          () => this.seriesWorker, input$)\n          .subscribe((data: any) => {\n          const series: any = this.imageService.readFile(data.blob)\n          series.subscribe((obj: any) => {\n            // console.log('--- series list - webWorkerProcess - data', data.category);\n            data.blob = obj;\n            this.cacheSeriesService.checkAndCacheSeries(data);\n            this.store.dispatch(new SetIsSeriesLoaded(true));\n            this.store.dispatch(new SetSeriesUrls([data.url]))\n          })\n        }, error => console.error(error))\n      });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n    localStorage.clear();\n  }\n}\n\n\n    \n\n\n    \n            \n    .cdk-scroll-source {\n      writing-mode: horizontal-tb;\n      /*writing-mode: vertical-lr;*/\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 650px;\n      width: 100%;\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'SeriesListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SeriesModel.html":{"url":"interfaces/SeriesModel.html","title":"interface - SeriesModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SeriesModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/thumbnail/series-list/series-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blob\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            seriesId\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blob\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blob:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seriesId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seriesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  CdkVirtualScrollViewport,\n} from \"@angular/cdk/scrolling\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {from, Observable, of, Subject} from \"rxjs\";\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {ImageService} from \"../../carousel/image.service\";\nimport {skip, takeUntil, tap} from \"rxjs/operators\";\nimport {\n  SetCurrentCategory, SetIsImageLoaded,\n  SetIsSeriesLoaded, SetSelectedImageById, SetSelectedSeriesById, SetSeriesUrls, SetSplitAction,\n} from \"../../../store/status/status.actions\";\nimport {SeriesItemService} from \"../series-item/series-item.service\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {CacheSeriesService} from \"../cache-series.service\";\nimport {fromWorker} from \"observable-webworker\";\nimport {SplitService} from \"../../grid/split.service\";\nimport {ImageModel} from \"../../carousel/carousel-main/carousel-main.component\";\nimport {HttpClient} from \"@angular/common/http\";\n\nexport interface SeriesModel {\n  seriesId: number;\n  url: string;\n  blob: string;\n  category: string\n}\n\n@Component({\n  selector: 'app-series-list',\n  template: `\n    \n      \n        \n          \n            \n            \n          \n        \n      \n\n    \n  `,\n  styles: [`\n    .cdk-scroll-source {\n      writing-mode: horizontal-tb;\n      /*writing-mode: vertical-lr;*/\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 650px;\n      width: 100%;\n    }\n\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SeriesListComponent implements OnInit, OnDestroy {\n\n  @Input() category: string;\n  @Select(StatusState.getSeriesUrls) seriesUrls$: Observable;\n  @SelectSnapshot(StatusState.getSelectedSeriesById) getSelectedSeriesById: number;\n  @SelectSnapshot(StatusState.getCategoryList) category_list: string[];\n  @Select(StatusState.getSelectedSeriesById) getSelectedSeriesById$: Observable;\n  @ViewChild(CdkVirtualScrollViewport, {static: true}) viewPort: CdkVirtualScrollViewport;\n\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  addClass: {} = {};\n  draggedInx = 0;\n  idx = 0;\n  seriesWorker: Worker;\n  currentSeries: SeriesModel[] = [];\n\n  constructor(\n    private carouselService: CarouselService,\n    private imageService: ImageService,\n    private store: Store,\n    private cdr: ChangeDetectorRef,\n    private seriesService: SeriesItemService,\n    private cacheSeriesService: CacheSeriesService,\n    private splitService: SplitService,\n    private http: HttpClient\n  ) {\n  }\n\n  ngOnInit(): void {\n    /** Default category */\n    this.store.dispatch(new SetCurrentCategory('animal'));\n    /** Display series list  */\n    this.seriesUrls$.pipe(\n      skip(1),\n      takeUntil(this.unsubscribe$),\n      tap((url) => {\n        this.currentSeries = [...this.cacheSeriesService.cachedSeries]\n        this.cdr.detectChanges()\n      })\n    ).subscribe()\n\n    /** When scrollbar is dragged,  then update nodule-list scroll offset */\n    this.viewPort.scrolledIndexChange.pipe(takeUntil(this.unsubscribe$)).subscribe(val => {\n      this.draggedInx = val;\n    });\n    this.viewPort.elementScrolled().subscribe(event => {\n      this.idx = this.viewPort.measureScrollOffset();\n    });\n    //\n    this.webWorkerProcess();\n    //\n    /** Move scroll position by the selected series */\n    this.getSelectedSeriesById$.pipe(\n      skip(1),\n      takeUntil(this.unsubscribe$)\n    ).subscribe((val: number) => {\n      this.addClass = {\n        class: 'selected_item',\n        seriesId: val\n      }\n      setTimeout(() => this.viewPort.scrollToIndex(val, 'smooth'), 200);\n    })\n\n  }\n\n  onSelectSeries(ev: SeriesModel) {\n    // console.log(' onSelectSeries - ev', ev);\n    this.store.dispatch(new SetSplitAction(false));\n    this.splitService.currentImageIndex[this.splitService.selectedElement] = 0;\n    // Setting the current selected category\n    this.store.dispatch(new SetCurrentCategory(ev.category));\n    // Select series and get the image list.\n    this.store.dispatch(new SetSelectedSeriesById(ev.seriesId));\n    // Focusing the first thumbnail_item\n    const image: ImageModel = {\n      imageId: 0,\n      category: ev.category,\n      url: '',\n      blob: '',\n      title: ''\n    }\n    this.store.dispatch(new SetSelectedImageById(image));\n    // Enable display the first image in the main window\n    this.store.dispatch(new SetIsImageLoaded({idx: 0}));\n  }\n\n  webWorkerProcess() {\n    /** Start series worker with the initial values */\n    this.seriesService.getSeriesObject()\n      .subscribe((val: any[]) => {\n        const input$ = of(val);\n\n        if (!this.seriesWorker) {\n          this.seriesWorker = new Worker(new URL('src/assets/workers/series-worker', import.meta.url), {type: 'module'})\n        }\n        fromWorker(          () => this.seriesWorker, input$)\n          .subscribe((data: any) => {\n          const series: any = this.imageService.readFile(data.blob)\n          series.subscribe((obj: any) => {\n            // console.log('--- series list - webWorkerProcess - data', data.category);\n            data.blob = obj;\n            this.cacheSeriesService.checkAndCacheSeries(data);\n            this.store.dispatch(new SetIsSeriesLoaded(true));\n            this.store.dispatch(new SetSeriesUrls([data.url]))\n          })\n        }, error => console.error(error))\n      });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n    localStorage.clear();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeriesWorker.html":{"url":"classes/SeriesWorker.html","title":"class - SeriesWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeriesWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/workers/series-worker.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        DoWork\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        work\n                        \n                    \n                \n            \n            \n                \n                    \n                    work(input$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/assets/workers/series-worker.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {DoWork, runWorker} from \"observable-webworker\";\nimport {defer, from, Observable, of} from \"rxjs\";\nimport {concatMap, delay, map, switchMap, tap} from \"rxjs/operators\";\nimport {XMLHttpComm} from \"../../app/utils/XMLHttpComm\";\n\n\nexport class SeriesWorker implements DoWork {\n  public work(input$: Observable): Observable {\n    let oriData: any;\n    return input$.pipe(\n      // tap(va => console.log('-- va', va)),\n      map( (val: any) => oriData = val),\n      switchMap((arr: any[]) => {\n        return  from(arr).pipe(\n          concatMap( async val => {\n            const url = val.url;\n            return await XMLHttpComm(url)\n          }),\n          map( (res, idx) => {\n            // console.log('--- axios --', res, idx, oriData[idx].category)\n            return {\n              seriesId: idx,\n              url: oriData[idx].url,\n              blob: res,\n              //blob: res.data,\n              category: oriData[idx].category\n            }\n          }),\n        )\n      })\n    );\n  }\n}\nrunWorker(SeriesWorker);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetActiveSplit.html":{"url":"classes/SetActiveSplit.html","title":"class - SetActiveSplit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetActiveSplit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set active split '\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCategoryList.html":{"url":"classes/SetCategoryList.html","title":"class - SetCategoryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCategoryList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string[])\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Category list'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentCategory.html":{"url":"classes/SetCurrentCategory.html","title":"class - SetCurrentCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Current category'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentSplitOperation.html":{"url":"classes/SetCurrentSplitOperation.html","title":"class - SetCurrentSplitOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentSplitOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set current split operation'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetFocusedSplit.html":{"url":"classes/SetFocusedSplit.html","title":"class - SetFocusedSplit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetFocusedSplit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Focused split'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetImageUrls.html":{"url":"classes/SetImageUrls.html","title":"class - SetImageUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetImageUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string[])\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Cache image urls'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIsImageLoaded.html":{"url":"classes/SetIsImageLoaded.html","title":"class - SetIsImageLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIsImageLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Is Imaged Loaded'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIsSeriesLoaded.html":{"url":"classes/SetIsSeriesLoaded.html","title":"class - SetIsSeriesLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIsSeriesLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Is Series Loaded'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedImageById.html":{"url":"classes/SetSelectedImageById.html","title":"class - SetSelectedImageById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedImageById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ImageModel)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ImageModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageModel\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Selected image id'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedImageByUrl.html":{"url":"classes/SetSelectedImageByUrl.html","title":"class - SetSelectedImageByUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedImageByUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Selected image url'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedSeriesById.html":{"url":"classes/SetSelectedSeriesById.html","title":"class - SetSelectedSeriesById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedSeriesById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Selected series id'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSelectedSplitWindowId.html":{"url":"classes/SetSelectedSplitWindowId.html","title":"class - SetSelectedSplitWindowId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSelectedSplitWindowId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Selected split window id'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSeriesUrls.html":{"url":"classes/SetSeriesUrls.html","title":"class - SetSeriesUrls","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSeriesUrls\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string[])\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Cache series urls'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSplitAction.html":{"url":"classes/SetSplitAction.html","title":"class - SetSplitAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSplitAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set split action'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSplitMode.html":{"url":"classes/SetSplitMode.html","title":"class - SetSplitMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSplitMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set Window split'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSplitState.html":{"url":"classes/SetSplitState.html","title":"class - SetSplitState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSplitState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set split state'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetWebworkerWorkingStatus.html":{"url":"classes/SetWebworkerWorkingStatus.html","title":"class - SetWebworkerWorkingStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetWebworkerWorkingStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Set Webworker WorkingStatus'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SplitService.html":{"url":"injectables/SplitService.html","title":"injectable - SplitService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SplitService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grid/split.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bWorker\n                            \n                            \n                                currentImageIndex\n                            \n                            \n                                elements\n                            \n                            \n                                isFinishedRendering\n                            \n                            \n                                isFinishedRendering$\n                            \n                            \n                                isStartedRendering\n                            \n                            \n                                isStartedRendering$\n                            \n                            \n                                selectedElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetSplitWindowProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/grid/split.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetSplitWindowProcessing\n                        \n                    \n                \n            \n            \n                \nresetSplitWindowProcessing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/grid/split.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bWorker\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentImageIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : ['element1', 'element2', 'element3', 'element4']\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : ['element1', 'element2', 'element3', 'element4']\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinishedRendering\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinishedRendering$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStartedRendering\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStartedRendering$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : this.elements[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid/split.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Observable, Subject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SplitService {\n  bWorker: any = undefined;\n\n  elements: any[] = ['element1', 'element2', 'element3', 'element4']\n  selectedElement: any = this.elements[0];\n  currentImageIndex:any[]  = ['element1', 'element2', 'element3', 'element4'];\n\n  isFinishedRendering: Subject[];\n  isFinishedRendering$: Observable[];\n  isStartedRendering: Subject[];\n  isStartedRendering$: Observable[];\n\n\n  constructor() { }\n  resetSplitWindowProcessing() {\n    this.currentImageIndex[this.elements[0]] = 0;\n    this.currentImageIndex[this.elements[1]] = 0;\n    this.currentImageIndex[this.elements[2]] = 0;\n    this.currentImageIndex[this.elements[3]] = 0;\n\n    this.isFinishedRendering = [];\n    this.isFinishedRendering$ = [];\n    this.isStartedRendering = [];\n    this.isStartedRendering$ = [];\n\n    this.isFinishedRendering[this.elements[0]] = new Subject();\n    this.isFinishedRendering[this.elements[1]] = new Subject();\n    this.isFinishedRendering[this.elements[2]] = new Subject();\n    this.isFinishedRendering[this.elements[3]] = new Subject();\n    this.isFinishedRendering$[this.elements[0]] = this.isFinishedRendering[this.elements[0]].asObservable();\n    this.isFinishedRendering$[this.elements[1]] = this.isFinishedRendering[this.elements[1]].asObservable();\n    this.isFinishedRendering$[this.elements[2]] = this.isFinishedRendering[this.elements[2]].asObservable();\n    this.isFinishedRendering$[this.elements[3]] = this.isFinishedRendering[this.elements[3]].asObservable();\n    this.isStartedRendering[this.elements[0]] = new Subject();\n    this.isStartedRendering[this.elements[1]] = new Subject();\n    this.isStartedRendering[this.elements[2]] = new Subject();\n    this.isStartedRendering[this.elements[3]] = new Subject();\n    this.isStartedRendering$[this.elements[0]] = this.isStartedRendering[this.elements[0]].asObservable();\n    this.isStartedRendering$[this.elements[1]] = this.isStartedRendering[this.elements[1]].asObservable();\n    this.isStartedRendering$[this.elements[2]] = this.isStartedRendering[this.elements[2]].asObservable();\n    this.isStartedRendering$[this.elements[3]] = this.isStartedRendering[this.elements[3]].asObservable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusAction.html":{"url":"classes/StatusAction.html","title":"class - StatusAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/store/status/status.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Status] Add item'\n                    \n                \n                    \n                        \n                                Defined in src/store/status/status.actions.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport class StatusAction {\n  public static readonly type = '[Status] Add item';\n  constructor(public payload: string) { }\n}\nexport class SetIsImageLoaded {\n  public static readonly type = '[Status] Is Imaged Loaded';\n  constructor(public payload: {idx:number}) { }\n}\nexport class SetIsSeriesLoaded {\n  public static readonly type = '[Status] Is Series Loaded';\n  constructor(public payload: boolean) { }\n}\nexport class SetImageUrls {\n  public static readonly type = '[Status] Cache image urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetSeriesUrls {\n  public static readonly type = '[Status] Cache series urls';\n  constructor(public payload: string[]) { }\n}\nexport class SetCurrentCategory {\n  public static readonly type = '[Status] Current category';\n  constructor(public payload: string ) { }\n}\nexport class SetCategoryList {\n  public static readonly type = '[Status] Category list';\n  constructor(public payload: string[] ) { }\n}\nexport class SetFocusedSplit {\n  public static readonly type = '[Status] Focused split';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedImageById {\n  public static readonly type = '[Status] Selected image id';\n  constructor(public payload: ImageModel ) { }\n}\nexport class SetSelectedImageByUrl {\n  public static readonly type = '[Status] Selected image url';\n  constructor(public payload: string ) { }\n}\nexport class SetSplitMode {\n  public static readonly type = '[Status] Set Window split';\n  constructor(public payload: number ) { }\n}\nexport class SetSplitState {\n  public static readonly type = '[Status] Set split state';\n  constructor(public payload: {idx:number, category:string} ) { }\n}\nexport class SetSplitAction {\n  public static readonly type = '[Status] Set split action';\n  constructor(public payload: boolean ) { }\n}\nexport class SetSelectedSeriesById {\n  public static readonly type = '[Status] Selected series id';\n  constructor(public payload: number ) { }\n}\nexport class SetSelectedSplitWindowId {\n  public static readonly type = '[Status] Selected split window id';\n  constructor(public payload: string ) { }\n}\nexport class SetWebworkerWorkingStatus {\n  public static readonly type = '[Status] Set Webworker WorkingStatus';\n  constructor(public payload: boolean ) { }\n}\nexport class SetCurrentSplitOperation {\n  public static readonly type = '[Status] Set current split operation';\n  constructor(public payload: {element: string} ) { }\n}\nexport class SetActiveSplit {\n  public static readonly type = '[Status] Set active split ';\n  constructor(public payload: number ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusStateModel.html":{"url":"interfaces/StatusStateModel.html","title":"interface - StatusStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/status/status.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeSplit\n                                        \n                                \n                                \n                                        \n                                            category_list\n                                        \n                                \n                                \n                                        \n                                            currentCategory\n                                        \n                                \n                                \n                                        \n                                            currentSplitOperation\n                                        \n                                \n                                \n                                        \n                                            focusedSplit\n                                        \n                                \n                                \n                                        \n                                            imageUrls\n                                        \n                                \n                                \n                                        \n                                            isImageLoaded\n                                        \n                                \n                                \n                                        \n                                            isSeriesLoaded\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            selectedImageId\n                                        \n                                \n                                \n                                        \n                                            selectedImageUrl\n                                        \n                                \n                                \n                                        \n                                            selectedSeriesById\n                                        \n                                \n                                \n                                        \n                                            selectedSplitWindowId\n                                        \n                                \n                                \n                                        \n                                            seriesUrls\n                                        \n                                \n                                \n                                        \n                                            splitAction\n                                        \n                                \n                                \n                                        \n                                            splitMode\n                                        \n                                \n                                \n                                        \n                                            splitState\n                                        \n                                \n                                \n                                        \n                                            webworkerWorkingStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeSplit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeSplit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentCategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentSplitOperation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentSplitOperation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusedSplit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        focusedSplit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrls:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isImageLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isImageLoaded:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSeriesLoaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSeriesLoaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedImageId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedImageId:         ImageModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedImageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedImageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedSeriesById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedSeriesById:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedSplitWindowId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedSplitWindowId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seriesUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        seriesUrls:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitAction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitMode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        splitState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        splitState:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webworkerWorkingStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webworkerWorkingStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { State, Action, Selector, StateContext } from '@ngxs/store';\nimport {\n  SetActiveSplit, SetCategoryList,\n  SetCurrentCategory, SetCurrentSplitOperation, SetFocusedSplit,\n  SetImageUrls,\n  SetIsImageLoaded,\n  SetIsSeriesLoaded,\n  SetSelectedImageById,\n  SetSelectedImageByUrl,\n  SetSelectedSeriesById,\n  SetSelectedSplitWindowId, SetSeriesUrls, SetSplitAction,\n  SetSplitMode,\n  SetSplitState, SetWebworkerWorkingStatus,\n  StatusAction\n} from './status.actions';\nimport {Injectable} from \"@angular/core\";\nimport {ImageModel} from \"../../app/carousel/carousel-main/carousel-main.component\";\nimport {SeriesModel} from \"../../app/thumbnail/series-list/series-list.component\";\n\nexport interface StatusStateModel {\n  items: string[];\n  isImageLoaded: {} ; // from 0\n  isSeriesLoaded: boolean;\n  imageUrls: string[]; //\n  seriesUrls: string[]; //\n  currentCategory: string;\n  category_list: string[];\n  focusedSplit: number;\n  selectedImageId: ImageModel;\n  selectedImageUrl: string;\n  splitMode: number;\n  splitState: string[];\n  splitAction: boolean;\n  selectedSeriesById: number;\n  selectedSplitWindowId: string;\n  webworkerWorkingStatus: boolean;\n  currentSplitOperation: {},\n  activeSplit: number\n}\n\n@State({\n  name: 'status',\n  defaults: {\n    items: [],\n    isImageLoaded: { idx: 0},\n    isSeriesLoaded: false,\n    imageUrls: [],\n    seriesUrls: [],\n    currentCategory: '',\n    category_list:['animal', 'house', 'baby', 'forest', 'happiness', 'love', 'sea','banana', 'mountain'],\n    focusedSplit: 0, // 0: split1, 1: split2, 2: split3, 3: split4\n    selectedImageId: {\n      imageId: 0,\n      category: 'animal',\n      url: '',\n      blob: '',\n      title: ''\n    },\n    selectedImageUrl: '',\n    splitMode: 1, // 1: active --> split1, 2: active --> split1, split2\n    splitState: ['animal', 'house', 'baby', 'forest'],\n    splitAction: false,\n    selectedSeriesById: 0,\n    selectedSplitWindowId: 'element1',\n    webworkerWorkingStatus: false,\n    currentSplitOperation: {\n      element: ''\n    },\n    activeSplit: 0\n  }\n})\n@Injectable()\nexport class StatusState {\n\n  @Selector()\n  public static getState(state: StatusStateModel) {\n    return state;\n  }\n  @Selector()\n  public static getIsImageLoaded(state: StatusStateModel) {\n    return state.isImageLoaded;\n  }\n  @Selector()\n  public static getIsSeriesLoaded(state: StatusStateModel) {\n    return state.isSeriesLoaded;\n  }\n  @Selector()\n  public static getImageUrls(state: StatusStateModel) {\n    return state.imageUrls;\n  }\n  @Selector()\n  public static getSeriesUrls(state: StatusStateModel) {\n    return state.seriesUrls;\n  }\n  @Selector()\n  public static getCurrentCategory(state: StatusStateModel) {\n    return state.currentCategory;\n  }\n  @Selector()\n  public static getCategoryList(state: StatusStateModel) {\n    return state.category_list;\n  }\n  @Selector()\n  public static getFocusedSplit(state: StatusStateModel) {\n    return state.focusedSplit;\n  }\n  @Selector()\n  public static getSelectedImageById(state: StatusStateModel) {\n    return state.selectedImageId;\n  }\n  @Selector()\n  public static getSelectedImageByUrl(state: StatusStateModel) {\n    return state.selectedImageUrl;\n  }\n  @Selector()\n  public static getSplitMode(state: StatusStateModel) {\n    return state.splitMode;\n  }\n  @Selector()\n  public static getSplitState(state: StatusStateModel) {\n    return state.splitState;\n  }\n  @Selector()\n  public static getSplitAction(state: StatusStateModel) {\n    return state.splitAction;\n  }\n  @Selector()\n  public static getSelectedSeriesById(state: StatusStateModel) {\n    return state.selectedSeriesById;\n  }\n  @Selector()\n  public static getSelectedSplitWindowId(state: StatusStateModel) {\n    return state.selectedSplitWindowId;\n  }\n  @Selector()\n  public static getWebworkerWorkingStatus(state: StatusStateModel) {\n    return state.webworkerWorkingStatus;\n  }\n  @Selector()\n  public static getCurrentSplitOperation(state: StatusStateModel) {\n    return state.currentSplitOperation;\n  }\n  @Selector()\n  public static getActiveSplit(state: StatusStateModel) {\n    return state.activeSplit;\n  }\n\n  @Action(StatusAction)\n  public add(ctx: StateContext, { payload }: StatusAction) {\n    const stateModel = ctx.getState();\n    stateModel.items = [...stateModel.items, payload];\n    ctx.setState(stateModel);\n  }\n  @Action(SetIsImageLoaded)\n  public setIsImageLoaded({patchState,getState}: StateContext, { payload }: SetIsImageLoaded) {\n    const obj = getState().isImageLoaded;\n    patchState({isImageLoaded: {...obj, ...payload}})\n  }\n  @Action(SetIsSeriesLoaded)\n  public setIsSeriesLoaded({patchState,getState}: StateContext, { payload }: SetIsSeriesLoaded) {\n    patchState({isSeriesLoaded: payload})\n  }\n  @Action(SetImageUrls)\n  public setImageUrls({patchState,getState}: StateContext, { payload }: SetImageUrls) {\n    let urls = getState().imageUrls;\n    patchState({imageUrls: [...urls, ...payload]});\n  }\n  @Action(SetSeriesUrls)\n  public setSeriesUrls({patchState,getState}: StateContext, { payload }: SetSeriesUrls) {\n    let urls = getState().seriesUrls;\n    patchState({seriesUrls: [...urls, ...payload]});\n  }\n  @Action(SetCurrentCategory)\n  public setCurrentCategory({patchState,getState}: StateContext, { payload }: SetCurrentCategory) {\n    patchState({currentCategory: payload})\n  }\n  @Action(SetCategoryList)\n  public setCategoryList({patchState,getState}: StateContext, { payload }: SetCategoryList) {\n    patchState({category_list: payload})\n  }\n  @Action(SetFocusedSplit)\n  public setFocusedSplit({patchState,getState}: StateContext, { payload }: SetFocusedSplit) {\n    patchState({focusedSplit: payload})\n  }\n  @Action(SetSelectedImageById)\n  public setSelectedImageById({patchState,getState}: StateContext, { payload }: SetSelectedImageById) {\n    const imageId = getState().selectedImageId;\n    patchState({selectedImageId: {...imageId, ...payload}})\n  }\n  @Action(SetSelectedImageByUrl)\n  public setSelectedImageByUrl({patchState,getState}: StateContext, { payload }: SetSelectedImageByUrl) {\n    patchState({selectedImageUrl: payload})\n  }\n  @Action(SetSplitMode)\n  public setSplitMode({patchState,getState}: StateContext, { payload }: SetSplitMode) {\n    patchState({splitMode: payload})\n  }\n  @Action(SetSplitState)\n  public setSplitState({patchState,getState}: StateContext, { payload }: SetSplitState) {\n    const state = getState().splitState;\n    const idx = payload.idx;\n    const category = payload.category\n    state[idx] = category\n    patchState({splitState: [...state]})\n  }\n  @Action(SetSplitAction)\n  public setSplitAction({patchState,getState}: StateContext, { payload }: SetSplitAction) {\n    patchState({splitAction: payload})\n  }\n  @Action(SetSelectedSeriesById)\n  public setSelectedSeriesById({patchState,getState}: StateContext, { payload }: SetSelectedSeriesById) {\n    patchState({selectedSeriesById: payload})\n  }\n  @Action(SetSelectedSplitWindowId)\n  public setSelectedSplitWindowId({patchState,getState}: StateContext, { payload }: SetSelectedSplitWindowId) {\n    patchState({selectedSplitWindowId: payload})\n  }\n  @Action(SetWebworkerWorkingStatus)\n  public setWebworkerWorkingStatus({patchState,getState}: StateContext, { payload }: SetWebworkerWorkingStatus) {\n    patchState({webworkerWorkingStatus: payload})\n  }\n  @Action(SetCurrentSplitOperation)\n  public setCurrentSplitOperation({patchState,getState}: StateContext, { payload }: SetCurrentSplitOperation) {\n    const obj = getState().currentSplitOperation;\n    patchState({currentSplitOperation: { ...obj, ...payload }})\n  }\n  @Action(SetActiveSplit)\n  public setActiveSplit({patchState,getState}: StateContext, { payload }: SetActiveSplit) {\n    patchState({activeSplit: payload})\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbItemComponent.html":{"url":"components/ThumbItemComponent.html","title":"component - ThumbItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thumbnail/thumb-item/thumb-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thumb-item\n            \n\n\n            \n                styles\n                \n  img {\n    width: 90px;\n    height:60px;\n    object-fit: fill;\n  }\n  .selected_item {\n    border: red solid 4px ;\n  }\n  \n            \n\n            \n                template\n                \n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                borderColor\n                            \n                            \n                                image\n                            \n                            \n                                selectedImageId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                originalImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addClass\n                                \n                                \n                                    borderStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carouselService: CarouselService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carouselService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        originalImage\n                    \n                \n                \n                    \n                        Type :         ImageModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:43\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        borderColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('img')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedImageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getSelectedImageById)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addClass\n                    \n                \n\n\n                \n                    \n                        setaddClass(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        borderStyle\n                    \n                \n\n                \n                    \n                        getborderStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/thumbnail/thumb-item/thumb-item.component.ts:60\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef, EventEmitter,\n  Input, OnChanges,\n  OnInit, Output, SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {ImageModel} from \"../../carousel/carousel-main/carousel-main.component\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\n\n@Component({\n  selector: 'app-thumb-item',\n  template: `\n    \n      \n        \n      \n    \n  `,\n  styles: [`\n  img {\n    width: 90px;\n    height:60px;\n    object-fit: fill;\n  }\n  .selected_item {\n    border: red solid 4px ;\n  }\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThumbItemComponent implements OnInit, AfterViewInit, OnChanges {\n  @ViewChild('img') image: ElementRef;\n  @Input() set addClass( v: any){\n    this.cdr.markForCheck();\n  }\n  @Input() originalImage: ImageModel;\n  @Output() selected: EventEmitter = new EventEmitter();\n  @SelectSnapshot(StatusState.getSelectedImageById) selectedImageId: ImageModel;\n\n  borderColor: string ;\n  constructor(\n    private carouselService: CarouselService,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n  ngAfterViewInit() {\n    // console.log('this.originalImage', this.originalImage.imageId)\n    this.image.nativeElement.src = this.originalImage.blob;\n    this.cdr.markForCheck();\n  }\n  get borderStyle() {\n    return {'border-color': this.originalImage.imageId === this.selectedImageId.imageId ? 'blue' : 'yellow'}\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    this.borderColor = 'none_selected_item'\n      this.cdr.markForCheck();\n    // console.log('this.selectedImageId, this.originalImage.imageId ', this.selectedImageId.imageId, this.originalImage.imageId)\n    if( this.selectedImageId.imageId === this.originalImage.imageId) {\n      this.borderColor = 'selected_item';\n      this.cdr.markForCheck();\n\n    } else {\n      this.borderColor = 'non_selected_item';\n      this.cdr.markForCheck();\n    }\n    if( changes.originalImage && changes.originalImage.currentValue && this.image) {\n      this.image.nativeElement.src = changes.originalImage.currentValue.blob;\n      this.cdr.markForCheck();\n    }\n\n  }\n}\n\n    \n\n\n    \n            \n  img {\n    width: 90px;\n    height:60px;\n    object-fit: fill;\n  }\n  .selected_item {\n    border: red solid 4px ;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailListComponent.html":{"url":"components/ThumbnailListComponent.html","title":"component - ThumbnailListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbnailListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: VIRTUAL_SCROLL_STRATEGY, useClass: CustomVirtualScrollStrategy }\n                \n            \n\n\n            \n                selector\n                app-thumbnail-list\n            \n\n\n            \n                styles\n                \n    .cdk-scroll-source {\n      writing-mode: vertical-lr;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 90px;\n      width: 100%;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: row;\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      \n\n        \n        \n\n      \n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeSplit\n                            \n                            \n                                addClass\n                            \n                            \n                                currentCategory$\n                            \n                            \n                                currentImages\n                            \n                            \n                                draggedInx\n                            \n                            \n                                getImageUrls$\n                            \n                            \n                                getSelectedImageById$\n                            \n                            \n                                idx\n                            \n                            \n                                item_list\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribe$\n                            \n                            \n                                viewPort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelectItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carouselService: CarouselService, imageService: ImageService, store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carouselService\n                                                  \n                                                        \n                                                                        CarouselService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:78\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectItem\n                        \n                    \n                \n            \n            \n                \nonSelectItem(ev: ImageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                ImageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeSplit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SelectSnapshot(StatusState.getActiveSplit)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCategory$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getCurrentCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draggedInx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImageUrls$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getImageUrls)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedImageById$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(StatusState.getSelectedImageById)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageModel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.unsubscribe.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewPort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkVirtualScrollViewport\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkVirtualScrollViewport, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Injectable,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {CarouselService} from \"../../carousel/carousel.service\";\nimport {ImageService} from \"../../carousel/image.service\";\nimport {ImageModel} from \"../../carousel/carousel-main/carousel-main.component\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {combineLatest, merge, Observable, Subject} from \"rxjs\";\nimport {StatusState} from \"../../../store/status/status.state\";\nimport {takeUntil, tap} from \"rxjs/operators\";\nimport {SetSelectedImageById, SetSplitAction} from \"../../../store/status/status.actions\";\nimport {\n  CdkVirtualScrollViewport,\n  FixedSizeVirtualScrollStrategy,\n  VIRTUAL_SCROLL_STRATEGY\n} from \"@angular/cdk/scrolling\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {SplitService} from \"../../grid/split.service\";\n\n@Injectable()\nexport class CustomVirtualScrollStrategy extends FixedSizeVirtualScrollStrategy {\n  constructor() {\n    /** Below value is assumed, that could contains at most 100 image pixel data at one time.\n     * If less than this value, the image data tend to be shuffled by sharing memory usage while scrolling  */\n    super(90, 10000, 10000); // (itemSize, minBufferPx, maxBufferPx)\n  }\n}\n\n\n@Component({\n  selector: 'app-thumbnail-list',\n  template: `\n    \n      \n        \n          \n\n            \n            \n\n          \n        \n      \n\n    \n  `,\n  styles: [`\n    .cdk-scroll-source {\n      writing-mode: vertical-lr;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 90px;\n      width: 100%;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: row;\n    }\n  `\n  ],\n  providers: [{provide: VIRTUAL_SCROLL_STRATEGY, useClass: CustomVirtualScrollStrategy}],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class ThumbnailListComponent implements OnInit, OnDestroy {\n\n  @Input() category: string;\n  @Select(StatusState.getImageUrls)  getImageUrls$: Observable;\n  @SelectSnapshot(StatusState.getActiveSplit)  activeSplit: number;\n  @Select(StatusState.getSelectedImageById)  getSelectedImageById$: Observable;\n  @Select(StatusState.getCurrentCategory) currentCategory$: Observable;\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) viewPort: CdkVirtualScrollViewport;\n\n  item_list: ImageModel[] = [];\n  unsubscribe = new Subject();\n  unsubscribe$ = this.unsubscribe.asObservable();\n  addClass: {} = {};\n  draggedInx = 0;\n  idx = 0;\n  currentImages: ImageModel[] = [];\n  constructor(\n    private carouselService: CarouselService,\n    private imageService: ImageService,\n    private store: Store,\n    private cdr: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit(): void {\n\n    // this.getImageUrls$.pipe(\n    this.currentCategory$.pipe().subscribe(val => {\n      this.category = val;\n       // console.log('-- category -1', val)\n    });\n    this.getImageUrls$.pipe(\n      takeUntil(this.unsubscribe$),\n    ).subscribe(() => {\n      this.currentImages = this.imageService.cachedThumbnailImages.map(val => val.image)\n        .filter(val => val.category === this.category);\n\n         // console.log('this.currentImages -2', this.category)\n      this.cdr.detectChanges();\n    });\n    /** When scrollbar is dragged,  then update thumbnail-list scroll offset */\n    this.viewPort.scrolledIndexChange.pipe(takeUntil(this.unsubscribe$)).subscribe(val => {\n      // console.log(' draaged value', val)\n      this.draggedInx = val;\n    });\n    this.viewPort.elementScrolled().subscribe(event => {\n      this.idx = this.viewPort.measureScrollOffset();\n      // console.log(' idx', this.idx)\n    });\n    /**\n     * Triggered from series-list.component ( onSelectSeries),\n     *      carousel.service (getPrevImage, getNextImage)\n     */\n    this.getSelectedImageById$.pipe(\n      takeUntil(this.unsubscribe$)\n    ).subscribe( image => {\n      this.addClass = {\n        class:'selected_item',\n        imageId: image.imageId\n      }\n      this.cdr.detectChanges();\n      // To synchronize with the current selected item, after when it is activated by clicking item-list\n       setTimeout(() => this.viewPort.scrollToIndex(image.imageId, 'smooth'),200);\n    })\n\n  }\n  onSelectItem(ev:ImageModel) {\n    // console.log( '--- thumbnail-list id', ev.imageId )\n    this.store.dispatch(new SetSelectedImageById(ev));\n    this.category = ev.category;\n    this.addClass = {\n      class: 'selected_item',\n      index: ev.imageId\n    }\n    this.store.dispatch(new SetSplitAction(false));\n\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n\n\n\n    \n\n\n    \n            \n    .cdk-scroll-source {\n      writing-mode: vertical-lr;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport {\n      height: 90px;\n      width: 100%;\n    }\n    .cdk-scroll-source .cdk-scroll-viewport .cdk-virtual-scroll-content-wrapper {\n      display: flex;\n      flex-direction: row;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarouselMainComponent', 'selector': 'app-carousel-main'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridTemplateComponent', 'selector': 'app-grid-template'},{'name': 'SeriesItemComponent', 'selector': 'app-series-item'},{'name': 'SeriesListComponent', 'selector': 'app-series-list'},{'name': 'ThumbItemComponent', 'selector': 'app-thumb-item'},{'name': 'ThumbnailListComponent', 'selector': 'app-thumbnail-list'}];\n    var DIRECTIVES = [{'name': 'GridTemplateDirective', 'selector': '[appGridTemplate]'},{'name': 'SelectColorDirective', 'selector': '[selectColor]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThumbnailModule.html":{"url":"modules/ThumbnailModule.html","title":"module - ThumbnailModule","body":"\n                   \n\n\n\n\n    Modules\n    ThumbnailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThumbnailModule\n\n\n\ncluster_ThumbnailModule_declarations\n\n\n\ncluster_ThumbnailModule_providers\n\n\n\ncluster_ThumbnailModule_imports\n\n\n\ncluster_ThumbnailModule_exports\n\n\n\n\nSeriesItemComponent\n\nSeriesItemComponent\n\n\n\nThumbnailModule\n\nThumbnailModule\n\nThumbnailModule -->\n\nSeriesItemComponent->ThumbnailModule\n\n\n\n\n\nSeriesListComponent\n\nSeriesListComponent\n\nThumbnailModule -->\n\nSeriesListComponent->ThumbnailModule\n\n\n\n\n\nThumbItemComponent\n\nThumbItemComponent\n\nThumbnailModule -->\n\nThumbItemComponent->ThumbnailModule\n\n\n\n\n\nThumbnailListComponent\n\nThumbnailListComponent\n\nThumbnailModule -->\n\nThumbnailListComponent->ThumbnailModule\n\n\n\n\n\nSeriesItemComponent \n\nSeriesItemComponent \n\nSeriesItemComponent  -->\n\nThumbnailModule->SeriesItemComponent \n\n\n\n\n\nSeriesListComponent \n\nSeriesListComponent \n\nSeriesListComponent  -->\n\nThumbnailModule->SeriesListComponent \n\n\n\n\n\nThumbItemComponent \n\nThumbItemComponent \n\nThumbItemComponent  -->\n\nThumbnailModule->ThumbItemComponent \n\n\n\n\n\nThumbnailListComponent \n\nThumbnailListComponent \n\nThumbnailListComponent  -->\n\nThumbnailModule->ThumbnailListComponent \n\n\n\n\n\nAngularMaterials\n\nAngularMaterials\n\nThumbnailModule -->\n\nAngularMaterials->ThumbnailModule\n\n\n\n\n\nSeriesItemService\n\nSeriesItemService\n\nThumbnailModule -->\n\nSeriesItemService->ThumbnailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/thumbnail/thumbnail-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SeriesItemComponent\n                        \n                        \n                            SeriesListComponent\n                        \n                        \n                            ThumbItemComponent\n                        \n                        \n                            ThumbnailListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SeriesItemService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AngularMaterials\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SeriesItemComponent\n                        \n                        \n                            SeriesListComponent\n                        \n                        \n                            ThumbItemComponent\n                        \n                        \n                            ThumbnailListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ThumbnailListComponent} from \"./thumbnail-list/thumbnail-list.component\";\nimport {ThumbItemComponent} from \"./thumb-item/thumb-item.component\";\nimport {SeriesListComponent} from \"./series-list/series-list.component\";\nimport {SeriesItemComponent} from \"./series-item/series-item.component\";\nimport {SeriesItemService} from \"./series-item/series-item.service\";\nimport {AngularMaterials} from \"../shared/angular-materials\";\n\n@NgModule({\n  declarations: [\n    ThumbnailListComponent,\n    ThumbItemComponent,\n    SeriesListComponent,\n    SeriesItemComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterials\n  ],\n  exports: [\n    ThumbnailListComponent,\n    ThumbItemComponent,\n    SeriesListComponent,\n    SeriesItemComponent\n  ],\n  providers: [\n    SeriesItemService\n  ]\n})\nexport class ThumbnailModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tile.html":{"url":"interfaces/Tile.html","title":"interface - Tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/grid/grid.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cols\n                                        \n                                \n                                \n                                        \n                                            mcols\n                                        \n                                \n                                \n                                        \n                                            mheight\n                                        \n                                \n                                \n                                        \n                                            mwidth\n                                        \n                                \n                                \n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            templateName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cols\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cols:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mcols\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mcols:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mheight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mheight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mwidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mwidth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Observable, Subject} from \"rxjs\";\nimport {GridTemplateComponent} from \"./grid-template/grid-template.component\";\nimport {skip, takeUntil, tap} from \"rxjs/operators\";\nimport {Select, Store} from \"@ngxs/store\";\nimport {StatusState} from \"../../store/status/status.state\";\nimport {\n  SetFocusedSplit,\n  SetSplitAction,\n} from \"../../store/status/status.actions\";\nimport {CacheSeriesService} from \"../thumbnail/cache-series.service\";\nimport {SelectSnapshot} from \"@ngxs-labs/select-snapshot\";\nimport {CarouselService} from \"../carousel/carousel.service\";\nimport {SplitService} from \"./split.service\";\nexport interface Tile {\n  mcols: number;\n  mheight: string;\n  mwidth: string;\n  cols: number;\n  rows: number;\n  templateName: string;\n}\n\n@Component({\n  selector: 'app-grid',\n  template: `\n    \n      \n        \n          \n            \n          \n\n        \n      \n      \n    \n  `,\n  styles: [\n  ]\n})\nexport class GridComponent implements OnInit {\n\n  unsubscribe$ = new Subject();\n  mcols = 1;\n  mheight = '82vh';\n  tiles1: Tile[] = [\n    {mcols: 1, mheight: '82vh', mwidth: '100%', cols: 1, rows: 1, templateName: 'element1'},\n  ];\n  tiles2: Tile[] = [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n  ];\n  tiles3: Tile[] = [\n    {mcols: 2, mheight: '82vh', mwidth: '50%', cols: 1, rows: 2, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n  ];\n  tiles4: Tile[] = [\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element1'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element2'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element3'},\n    {mcols: 2, mheight: '41vh', mwidth: '50%', cols: 1, rows: 1, templateName: 'element4'},\n  ];\n  tiles: Tile[] = [...this.tiles1];\n\n  selectedTemplate: string = this.tiles[0].templateName;\n  // @ViewChild('gridContainer', {read: ViewContainerRef}) gridContainer: ViewContainerRef;\n  @Select(StatusState.getSplitMode) splitMode$: Observable;\n  @Select(StatusState.getSelectedSplitWindowId) selectedSplitWindowId$: Observable;\n  @SelectSnapshot(StatusState.getCurrentCategory) currentCategory: string;\n\n  @ViewChild('gridTemplate', { static: true }) gridTemplate: GridTemplateComponent;\n\n  constructor(private store: Store,\n              private cacheSeriesService: CacheSeriesService,\n              private carouselService: CarouselService,\n              private splitService: SplitService\n\n  ) { }\n\n  ngOnInit(): void {\n    /** Triggered from app.component.html */\n    this.splitMode$.pipe(skip(1), takeUntil(this.unsubscribe$)).subscribe((val)=> {\n      // console.log('****************** splitMode$', val)\n      if (val === 1) {\n        this.tiles = [...this.tiles1];\n      } else if (val === 2) {\n        this.tiles = [...this.tiles2];\n      } else if( val === 3) {\n        this.tiles = [...this.tiles3];\n      } else if( val === 4)  {\n        this.tiles = [...this.tiles4];\n      }\n      this.mcols = this.tiles[this.tiles.length - 1].mcols;\n      this.mheight = this.tiles[this.tiles.length - 1].mheight;\n      // console.log(' mcols mheight', this.mcols, this.mheight)\n\n      this.store.dispatch(new SetSplitAction(true));\n\n    });\n    /** Call from displayTheFirstImage  {\n      this.onSelectTemplate(val)\n    });\n\n  }\n  onGetTemplate(name: string): TemplateRef {\n    return this.gridTemplate.getTemplate(name);\n  }\n  onSelectTemplate(ev: any) {\n    // const elementId = ev;\n    // console.log('-- ev',ev)\n    this.selectedTemplate = ev;\n    let idx;\n    if( ev === 'element1' ) idx = 0;\n    if( ev === 'element2' ) idx = 1;\n    if( ev === 'element3' ) idx = 2;\n    if( ev === 'element4' ) idx = 3;\n    this.store.dispatch(new SetFocusedSplit(idx));\n    this.store.dispatch(new SetSplitAction(false));\n    //\n    // this.carouselService.getNextImage(this.currentCategory, this.splitService.selectedElement);\n    this.splitService.selectedElement = ev;\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/carousel/carousel-main/carousel-main.component.ts\n            \n            component\n            CarouselMainComponent\n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                src/app/carousel/carousel-main/carousel-main.component.ts\n            \n            interface\n            ImageModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/carousel/carousel.service.ts\n            \n            injectable\n            CarouselService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/carousel/image.service.ts\n            \n            injectable\n            ImageService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/grid/directives/grid-template.directive.ts\n            \n            directive\n            GridTemplateDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/grid/directives/select-color.directive.ts\n            \n            directive\n            SelectColorDirective\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/grid/grid-template/grid-template.component.ts\n            \n            component\n            GridTemplateComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/grid/grid.component.ts\n            \n            component\n            GridComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/grid/grid.component.ts\n            \n            interface\n            Tile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/grid/split.service.ts\n            \n            injectable\n            SplitService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/angular-materials.ts\n            \n            variable\n            materials\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/thumbnail/cache-series.service.ts\n            \n            injectable\n            CacheSeriesService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/thumbnail/series-item/series-item.component.ts\n            \n            component\n            SeriesItemComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/thumbnail/series-item/series-item.service.ts\n            \n            injectable\n            SeriesItemService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/thumbnail/series-list/series-list.component.ts\n            \n            component\n            SeriesListComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/thumbnail/series-list/series-list.component.ts\n            \n            interface\n            SeriesModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/thumbnail/thumb-item/thumb-item.component.ts\n            \n            component\n            ThumbItemComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts\n            \n            component\n            ThumbnailListComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/thumbnail/thumbnail-list/thumbnail-list.component.ts\n            \n            injectable\n            CustomVirtualScrollStrategy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/utils/XMLHttpComm.ts\n            \n            variable\n            XMLHttpComm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/axiosComm.ts\n            \n            variable\n            axiosCommData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/down-scale-image.ts\n            \n            function\n            downscaleImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/down-scale-image.ts\n            \n            function\n            getImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/additional-loading.worker.ts\n            \n            class\n            LoadingWorker\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/assets/workers/carousel-worker.ts\n            \n            function\n            checkIfImageCached\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/carousel-worker.ts\n            \n            function\n            getCarouselImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/carousel-worker.ts\n            \n            function\n            sleep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/carousel-worker.ts\n            \n            variable\n            _stop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/carousel-worker.ts\n            \n            variable\n            cachedInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/workers/series-worker.ts\n            \n            class\n            SeriesWorker\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetActiveSplit\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetCategoryList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetCurrentCategory\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetCurrentSplitOperation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetFocusedSplit\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetImageUrls\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetIsImageLoaded\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetIsSeriesLoaded\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSelectedImageById\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSelectedImageByUrl\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSelectedSeriesById\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSelectedSplitWindowId\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSeriesUrls\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSplitAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSplitMode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetSplitState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            SetWebworkerWorkingStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.actions.ts\n            \n            class\n            StatusAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/store/status/status.state.ts\n            \n            injectable\n            StatusState\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/store/status/status.state.ts\n            \n            interface\n            StatusStateModel\n            \n                0 %\n                (0/19)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.9\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ^12.2.9\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @ngxs-labs/select-snapshot : ^1.1.0\n        \n            @ngxs/devtools-plugin : ^3.6.1\n        \n            @ngxs/logger-plugin : ^3.6.1\n        \n            @ngxs/storage-plugin : ^3.7.2\n        \n            @ngxs/store : ^3.7.2\n        \n            axios : ^0.24.0\n        \n            image-thumbnail : ^1.0.14\n        \n            images-scraper : ^6.4.0\n        \n            observable-webworker : ^3.4.0\n        \n            os-browserify : ^0.3.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkIfImageCached   (src/.../carousel-worker.ts)\n                        \n                        \n                            downscaleImage   (src/.../down-scale-image.ts)\n                        \n                        \n                            getCarouselImage   (src/.../carousel-worker.ts)\n                        \n                        \n                            getImage   (src/.../down-scale-image.ts)\n                        \n                        \n                            sleep   (src/.../carousel-worker.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/workers/carousel-worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkIfImageCached\n                        \n                    \n                \n            \n            \n                \ncheckIfImageCached(instances: any, i: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instances\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCarouselImage\n                        \n                    \n                \n            \n            \n                \ngetCarouselImage(__namedParameters: {data})\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sleep\n                        \n                    \n                \n            \n            \n                \nsleep(ms: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ms\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/utils/down-scale-image.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        downscaleImage\n                        \n                    \n                \n            \n            \n                \ndownscaleImage(dataUrl: string, imageType: string, resolution: number, quality: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    imageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resolution\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getImage\n                        \n                    \n                \n            \n            \n                \ngetImage(dataUrl: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSplitWindowSpectator211009\nThis project was generated with Angular CLI version 12.2.0.\nSummary\n\nThis program combines and applies the Angular technologies that have been applied when performing the previous project.\nIt aims to implement various image categories quickly and in grid format in real time.\n\nCreate a file in advance that stores the url of the image by crawling by image group (category) in Google,\nThe image is read in real time with the image url in this file.\n\nSince there is no separate backend server, the status of the image server and\ndepending on the traffic situation, the loading speed for each image may differ significantly.\n\nSince it takes a lot of time to load the image, webworker technology is applied to compensate for this.\n\nAnd, once read images are stored by applying a cache to display them quickly later.\n\nThe user selects one group (category), and while the image is caching, another group is selected.\nSince it is selectable, webworker technology is applied to prevent the image display time from being delayed at this time.\nThen, even if another category is selected while loading the image of the previously selected category,\nprogram was developed to enable image loading by immediately changing to another group.\nCaching image\n\nSince the user can randomly select an image category, all categories are in one cache.\nSave the images regardless of the order and category in which they are read,\n\nWhen displaying images for each group, the cached images were implemented to\nselect and display only the group.\n\nAt this time, it takes a lot of time to sort by category, so by applying webworker technology,\nprogram was made it possible to select by category.\n\nWhen the user selects a category, if there is already caching for that category\ndisplay the data, and if there is images that has not yet been loaded in that category\nreading images from server and caching is also carried out concurrently.\nSplit window\n\nThe grid (window split) function is difficult to customize when using the existing library.\nImplemented by applying directive.\n\nWhen implementing a split window, each split window needs the process of displaying each image group (category).\nAt this time, only the first image of images in each window is displayed first, and when that operation (the first image is displayed)\nis finished, immediately The next split window starts working.\n\nEach split window consists of a separate component. Therefore, each split window\nmust have its own variable. A unique variable for each split window is kept in the service program.\nThis is the difficult part of the program. Details\n\nEach split window is assigned by category, and each split window\nThe start and end points of drawing should be stored in global variables.\n\nTherefore, each split window decides by itself whether the previous split window has finished its work.\nWhen the previous split window has finished image processing, draw the first image of it's category,\nWhen the image drawing is completed, the state is immediately stored in a global variable.\nThen, the next split window waits and starts drawing the image for that category.\n\nAnd, from the second image, caching and saving work is also carried out by webworker as a background job at the same time.\n\nOnly through this process can each split window maintain its own id.\nIt is possible to control each split window.\n\n\nOverall diagram\n\n\nSeries list: Image list displayed by category on the left side of the screen\nThumbnail list: Image list displayed by category at the top of the screen\nMain viewer: The part where the selected image is displayed from among the\nimages separated by category and in the middle on the screen\nWhen split window is selected, it is displayed separately in grid form.Below seq. no is related with above diagram.\n1: If category is selected, the selected information is transmitted.\n2: When the thumbnail information is updated, the thumbnail list recognizes this.\n3: The information received in step 1 is transmitted to the carousel-main program\n through the status information.\n4: The information passed to carousel-main is checked after identifying the \n information stored in image-cache. If it is not saved, the image is read through \n the image webworker and stored in the image cache.\n5: When the program is first started, the image is read through the webworker \n and then stored in the image store.\n6: Images stored in the image store are displayed as a series (category) list.\n7: As the image url is stored in NgXS and the state (NgXS) changes at the same time,\n the thumbnail list display program operates.\n Displays images stored in the cache as thumbnails.\n8: When each window (split window) operates, the webworker for each window operates\n image reading is performed from the server.\n9: Because the image display operation is delayed by continuing only the image\n loading operation.\n In order to naturally display only the first page on the screen, cache the \n rest of the pages by using webworker function\n10: Images are stored uncategorically in the cache.\n When displaying on the screen, sorting by the selected category is performed \n using a separate webworker.\n\nMain applied technology\n\nAngular: ver 12.2.0\nAngular Material ( cdk, grid...)\nRxJS: ver 6.5 (Reactive programming library)\nNgXS: (Redux: State Management Library)\nWebworker: Observable-webworker (RxJS oriented webworker)\nTDD: spectator ( Angular oriented TDD development tool)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AngularMaterials\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThumbnailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AngularMaterials\n\n\n\ncluster_AngularMaterials_declarations\n\n\n\ncluster_AngularMaterials_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CarouselModule\n\n\n\ncluster_CarouselModule_providers\n\n\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_exports\n\n\n\ncluster_ThumbnailModule\n\n\n\ncluster_ThumbnailModule_declarations\n\n\n\ncluster_ThumbnailModule_exports\n\n\n\ncluster_ThumbnailModule_providers\n\n\n\n\nCarouselMainComponent\n\nCarouselMainComponent\n\n\n\nAngularMaterials\n\nAngularMaterials\n\nAngularMaterials -->\n\nCarouselMainComponent->AngularMaterials\n\n\n\n\n\nCarouselMainComponent \n\nCarouselMainComponent \n\nCarouselMainComponent  -->\n\nAngularMaterials->CarouselMainComponent \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAngularMaterials->AppModule\n\n\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nAngularMaterials->GridModule\n\n\n\n\n\nThumbnailModule\n\nThumbnailModule\n\nThumbnailModule -->\n\nAngularMaterials->ThumbnailModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCarouselModule\n\nCarouselModule\n\nAppModule -->\n\nCarouselModule->AppModule\n\n\n\nAppModule -->\n\nGridModule->AppModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridTemplateComponent \n\nGridTemplateComponent \n\nGridTemplateComponent  -->\n\nGridModule->GridTemplateComponent \n\n\n\n\n\nGridTemplateDirective \n\nGridTemplateDirective \n\nGridTemplateDirective  -->\n\nGridModule->GridTemplateDirective \n\n\n\nAppModule -->\n\nThumbnailModule->AppModule\n\n\n\n\n\nSeriesItemComponent \n\nSeriesItemComponent \n\nSeriesItemComponent  -->\n\nThumbnailModule->SeriesItemComponent \n\n\n\n\n\nSeriesListComponent \n\nSeriesListComponent \n\nSeriesListComponent  -->\n\nThumbnailModule->SeriesListComponent \n\n\n\n\n\nThumbItemComponent \n\nThumbItemComponent \n\nThumbItemComponent  -->\n\nThumbnailModule->ThumbItemComponent \n\n\n\n\n\nThumbnailListComponent \n\nThumbnailListComponent \n\nThumbnailListComponent  -->\n\nThumbnailModule->ThumbnailListComponent \n\n\n\n\n\nCarouselService\n\nCarouselService\n\nCarouselModule -->\n\nCarouselService->CarouselModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nGridTemplateComponent\n\nGridTemplateComponent\n\nGridModule -->\n\nGridTemplateComponent->GridModule\n\n\n\n\n\nGridTemplateDirective\n\nGridTemplateDirective\n\nGridModule -->\n\nGridTemplateDirective->GridModule\n\n\n\n\n\nSelectColorDirective\n\nSelectColorDirective\n\nGridModule -->\n\nSelectColorDirective->GridModule\n\n\n\n\n\nSeriesItemComponent\n\nSeriesItemComponent\n\nThumbnailModule -->\n\nSeriesItemComponent->ThumbnailModule\n\n\n\n\n\nSeriesListComponent\n\nSeriesListComponent\n\nThumbnailModule -->\n\nSeriesListComponent->ThumbnailModule\n\n\n\n\n\nThumbItemComponent\n\nThumbItemComponent\n\nThumbnailModule -->\n\nThumbItemComponent->ThumbnailModule\n\n\n\n\n\nThumbnailListComponent\n\nThumbnailListComponent\n\nThumbnailModule -->\n\nThumbnailListComponent->ThumbnailModule\n\n\n\n\n\nSeriesItemService\n\nSeriesItemService\n\nThumbnailModule -->\n\nSeriesItemService->ThumbnailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _stop   (src/.../carousel-worker.ts)\n                        \n                        \n                            axiosCommData   (src/.../axiosComm.ts)\n                        \n                        \n                            cachedInstance   (src/.../carousel-worker.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            materials   (src/.../angular-materials.ts)\n                        \n                        \n                            XMLHttpComm   (src/.../XMLHttpComm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/workers/carousel-worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _stop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cachedInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/utils/axiosComm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        axiosCommData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (url: string) => {\n\n  return await axios.get(url, {responseType: 'blob'} );\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/angular-materials.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        materials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatRadioModule,\n  MatButtonModule,\n  MatProgressBarModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatMenuModule,\n  ScrollingModule,\n  MatIconModule,\n  MatTooltipModule\n]\n                    \n                \n\n\n        \n    \n\n    src/app/utils/XMLHttpComm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        XMLHttpComm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (url: string) => {\n  return await axios.get(url, {responseType: 'blob'} ).then(val => val.data);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
